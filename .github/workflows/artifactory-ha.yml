name: Artifactory Installation

on:
  workflow_dispatch:

defaults:
  run:
    working-directory: ./apps/artifactory/artifactory-ha

jobs:
  artifactory_installation:
    if: |
      (github.event_name == 'release' && contains(github.event.release.name, 'artifactory-ha')) ||
      github.event_name != 'release'
    runs-on: ubuntu-latest
    env:
      FILE_STAGING_DIR: /tmp
      ARTIFACTORY_LICENSE_FILE: artifactory_license.txt
      OCP_PROJECT_NAME: devops-artifactory
    steps:
      - uses: actions/checkout@v2

      # Pre-installation steps
      # ----------------------
      - name: Generate master_key
        run: echo MASTER_KEY=\"`openssl rand -hex 32`\" >> $GITHUB_ENV

      - name: Generate join_key
        run: echo JOIN_KEY=\"`openssl rand -hex 32`\" >> $GITHUB_ENV

      - name: Prepare Artifactory license file
        run: echo ${{ env.ARTIFACTORY_LICENSE }} >> ${{ env.FILE_STAGING_DIR }}/${{ env.ARTIFACTORY_LICENSE_FILE }}

      - name: Get version number from vars.yaml
        run: echo ARTIFACTORY_VERSION=\"`grep ^artifactory_version vars.yaml | awk '{ print $2 }'`\" >> $GITHUB_ENV

      - name: Create certificate directories
        env:
          DIRS: artifactory wildcard
        run: for dir in $DIRS; do mkdir -p ${{ env.FILE_STAGING_DIR }}/artifactory-secrets/$dir; done

      - name: Create artifactory certificate files
        #if: ${{ env.INSTALL_TARGET == 'prod' }}
        run: |
          echo ${{ env.ARTIFACTORY_CA_CRT }}  > ${{ env.FILE_STAGING_DIR }}/artifactory/ca.crt
          echo ${{ env.ARTIFACTORY_TLS_CRT }} > ${{ env.FILE_STAGING_DIR }}/artifactory/tls.crt
          echo ${{ env.ARTIFACTORY_KEY_CRT }} > ${{ env.FILE_STAGING_DIR }}/artifactory/key.crt

      - name: Create wildcard certificate files
        #if: ${{ env.INSTALL_TARGET == 'nonprod' }}
        run: |
          echo ${{ env.WILDCARD_CA_CRT }}  > ${{ env.FILE_STAGING_DIR }}/wildcard/ca.crt
          echo ${{ env.WILDCARD_TLS_CRT }} > ${{ env.FILE_STAGING_DIR }}/wildcard/tls.crt
          echo ${{ env.WILDCARD_KEY_CRT }} > ${{ env.FILE_STAGING_DIR }}/wildcard/key.crt

      - name: Stage the vars-local.yaml file
        run: cp vars.yaml vars-local.yaml

      - name: Set vars in vars-local.yaml
        run: |
          sed -i "s/^master_key:.*/master_key: ${{ env.MASTER_KEY }}/" vars-local.yaml
          sed -i "s/^join_key:.*/join_key: ${{ env.JOIN_KEY }}/" vars-local.yaml
          sed -i "s/^sso_id:.*/sso_id: ${{ env.SSO_ID }}/" vars-local.yaml
          sed -i "s/^sso_secret:.*/sso_secret: ${{ env.SSO_SECRET }}/" vars-local.yaml
          sed -i "s/^folder:.*/folder: ${{ env.FILE_STAGING_DIR }}/" vars-local.yaml
          sed -i "s/^artifactory_license_file:.*/artifactory_license_file: ${{ env.ARTIFACTORY_LICENSE_FILE }}/" vars-local.yaml

      - name: Verify pre-installation
        if: ${{ failure() }}
        run: echo "Pre-installation steps were not entirely successful"; exit 1


