kind: Secret
apiVersion: v1
metadata:
  name: 4302974-as-mcs-artifactory-pull-secret
  namespace: {{ project_name }}
data:
  .dockerconfigjson: {{ redhat_pull_secret }}
type: kubernetes.io/dockerconfigjson
---
kind: Secret
apiVersion: v1
metadata:
  name: dockerhub-artifactory-account
  namespace: {{ project_name }}
stringData:
  password: {{ docker_account_username }}
  username: {{ docker_account_password }}
type: Opaque
---
kind: Secret
apiVersion: v1
metadata:
  name: artifactory-custom-binarystore
  namespace: {{ project_name }}
stringData:
  binarystore.xml: |-
    <!-- File system replication -->
    <config version="2">
        <chain>
            <provider id="cache-fs" type="cache-fs">
                <provider id="sharding-cluster" type="sharding-cluster">
                    <readBehavior>crossNetworkStrategy</readBehavior>
                    <writeBehavior>crossNetworkStrategy</writeBehavior>
                    <redundancy>3</redundancy>
                    <lenientLimit>2</lenientLimit>
                    <minSpareUploaderExecutor>2</minSpareUploaderExecutor>
                    <sub-provider id="state-aware" type="state-aware"/>
                    <dynamic-provider id="remote" type="remote"/>
                    <property name="zones" value="local,remote"/>
                </provider>
            </provider>
        </chain>

        <provider id="cache-fs" type="cache-fs">
            <maxCacheSize>5e+10</maxCacheSize>
            <cacheProviderDir>cache</cacheProviderDir>
        </provider>

        <!-- Shards add local file-system provider configuration -->
        <provider id="state-aware" type="state-aware">
            <fileStoreDir>shard-fs-1</fileStoreDir>
            <zone>local</zone>
        </provider>

        <!-- Shards dynamic remote provider configuration -->
        <provider id="remote" type="remote">
            <checkPeriod>30</checkPeriod>
            <serviceId>tester-remote1</serviceId>
            <timeout>10000</timeout>
            <zone>remote</zone>
            <property name="header.remote.block" value="true"/>
        </provider>

        <provider type="s3" id="s3">
            <bucketName>{{ s3_bucket_name }}</bucketName>
            <path>artifactory-ha/filestore</path>
            <endpoint>{{ s3_endpoint }}</endpoint>
            <credential>{{ s3_password }}</credential>
            <testConnection>true</testConnection>
            <httpsOnly>true</httpsOnly>
            <identity>{{ s3_identity }}</identity>
            <refreshCredentials>true</refreshCredentials>
            <s3AwsVersion>AWS4-HMAC-SHA256</s3AwsVersion>
            <region>US-Standard</region>
        </provider>
    </config>
type: Opaque


