{"_id":"eslint-plugin-typescript","_rev":"35-196c3c5d8dce833db363034816ee7183","name":"eslint-plugin-typescript","description":"TypeScript plugin for ESLint","dist-tags":{"latest":"0.14.0","next":"1.0.0-rc.3"},"versions":{"0.0.1":{"name":"eslint-plugin-typescript","version":"0.0.1","description":"TypeScript plugin for ESLint","keywords":["eslint","eslintplugin","eslint-plugin"],"repository":{"type":"git","url":"git+https://github.com/nzakas/eslint-plugin-typescript.git"},"author":{"name":"Nicholas C. Zakas"},"main":"lib/index.js","scripts":{"lint":"eslint lib/","test":"npm run lint && mocha tests --recursive"},"dependencies":{"requireindex":"~1.1.0"},"devDependencies":{"eslint":"~3.0.0","eslint-config-eslint":"^3.0.0","mocha":"^2.4.5","typescript-eslint-parser":"~0.1.1"},"engines":{"node":">=4"},"license":"MIT","gitHead":"c331979657310a0ab2f41f921656148d6744cc6c","bugs":{"url":"https://github.com/nzakas/eslint-plugin-typescript/issues"},"homepage":"https://github.com/nzakas/eslint-plugin-typescript#readme","_id":"eslint-plugin-typescript@0.0.1","_shasum":"848fa59c8b4a0cb8393be95daa53a6aa3e1f1451","_from":".","_npmVersion":"2.15.0","_nodeVersion":"4.4.2","_npmUser":{"name":"nzakas","email":"nicholas@nczconsulting.com"},"maintainers":[{"name":"nzakas","email":"nicholas@nczconsulting.com"}],"dist":{"shasum":"848fa59c8b4a0cb8393be95daa53a6aa3e1f1451","tarball":"https://registry.npmjs.org/eslint-plugin-typescript/-/eslint-plugin-typescript-0.0.1.tgz"},"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/eslint-plugin-typescript-0.0.1.tgz_1471892795038_0.917299373075366"},"directories":{},"deprecated":"Deprecated: Use @typescript-eslint/eslint-plugin instead"},"0.1.0":{"name":"eslint-plugin-typescript","version":"0.1.0","description":"TypeScript plugin for ESLint","keywords":["eslint","eslintplugin","eslint-plugin"],"repository":{"type":"git","url":"git+https://github.com/nzakas/eslint-plugin-typescript.git"},"author":{"name":"Nicholas C. Zakas"},"main":"lib/index.js","scripts":{"lint":"eslint lib/","test":"npm run lint && mocha tests --recursive"},"dependencies":{"requireindex":"~1.1.0"},"devDependencies":{"eslint":"~3.0.0","eslint-config-eslint":"^3.0.0","mocha":"^2.4.5","typescript-eslint-parser":"^0.4.0"},"engines":{"node":">=4"},"license":"MIT","gitHead":"cec0d0e38f298c01a5ffa9b077d7aa2efdf1a7d9","bugs":{"url":"https://github.com/nzakas/eslint-plugin-typescript/issues"},"homepage":"https://github.com/nzakas/eslint-plugin-typescript#readme","_id":"eslint-plugin-typescript@0.1.0","_shasum":"6d82b7960f3ff21a499e8b157b304453be5a5700","_from":".","_npmVersion":"2.15.0","_nodeVersion":"4.4.2","_npmUser":{"name":"nzakas","email":"nicholas@nczconsulting.com"},"maintainers":[{"name":"nzakas","email":"nicholas@nczconsulting.com"}],"dist":{"shasum":"6d82b7960f3ff21a499e8b157b304453be5a5700","tarball":"https://registry.npmjs.org/eslint-plugin-typescript/-/eslint-plugin-typescript-0.1.0.tgz"},"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/eslint-plugin-typescript-0.1.0.tgz_1475533816742_0.6410440921317786"},"directories":{},"deprecated":"Deprecated: Use @typescript-eslint/eslint-plugin instead"},"0.3.0":{"name":"eslint-plugin-typescript","version":"0.3.0","description":"TypeScript plugin for ESLint","keywords":["eslint","eslintplugin","eslint-plugin"],"repository":{"type":"git","url":"git+https://github.com/nzakas/eslint-plugin-typescript.git"},"author":{"name":"Nicholas C. Zakas"},"main":"lib/index.js","scripts":{"lint":"eslint lib/","lint:fix":"eslint --fix lib/","mocha":"mocha tests --recursive","test":"npm run lint && npm run mocha"},"dependencies":{"requireindex":"~1.1.0"},"devDependencies":{"eslint":"^4.1.1","eslint-config-eslint":"^4.0.0","eslint-plugin-node":"^5.1.0","mocha":"^3.4.2","typescript":"~2.3.0","typescript-eslint-parser":"^4.0.0"},"engines":{"node":">=4"},"license":"MIT","gitHead":"9d80d2c5522fe4e13f0835d9c8193a97e0c47ada","bugs":{"url":"https://github.com/nzakas/eslint-plugin-typescript/issues"},"homepage":"https://github.com/nzakas/eslint-plugin-typescript#readme","_id":"eslint-plugin-typescript@0.3.0","_shasum":"bc3525ef3a7f35e0e6eaaa0161733c82673173fd","_from":".","_npmVersion":"4.2.0","_nodeVersion":"7.10.0","_npmUser":{"name":"jameshenry","email":"james@henry.sc"},"dist":{"shasum":"bc3525ef3a7f35e0e6eaaa0161733c82673173fd","tarball":"https://registry.npmjs.org/eslint-plugin-typescript/-/eslint-plugin-typescript-0.3.0.tgz"},"maintainers":[{"email":"james@henry.sc","name":"jameshenry"},{"email":"nicholas@nczconsulting.com","name":"nzakas"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eslint-plugin-typescript-0.3.0.tgz_1499772552589_0.46967877610586584"},"directories":{},"deprecated":"Deprecated: Use @typescript-eslint/eslint-plugin instead"},"0.4.0":{"name":"eslint-plugin-typescript","version":"0.4.0","description":"TypeScript plugin for ESLint","keywords":["eslint","eslintplugin","eslint-plugin"],"repository":{"type":"git","url":"git+https://github.com/nzakas/eslint-plugin-typescript.git"},"author":{"name":"Nicholas C. Zakas"},"main":"lib/index.js","scripts":{"lint":"eslint lib/ tests/","lint:fix":"eslint lib/ test/ --fix","mocha":"mocha tests --recursive","test":"npm run lint && npm run mocha"},"dependencies":{"requireindex":"~1.1.0"},"devDependencies":{"eslint":"^4.1.1","eslint-config-eslint":"^4.0.0","eslint-plugin-node":"^5.1.0","mocha":"^3.4.2","typescript":"~2.3.0","typescript-eslint-parser":"^4.0.0"},"engines":{"node":">=4"},"license":"MIT","gitHead":"0a781e92f2ddd0c1d711f447e46b7c9781806856","bugs":{"url":"https://github.com/nzakas/eslint-plugin-typescript/issues"},"homepage":"https://github.com/nzakas/eslint-plugin-typescript#readme","_id":"eslint-plugin-typescript@0.4.0","_shasum":"3fe163f905154da9296369c314dabcb33a1cc40c","_from":".","_npmVersion":"3.10.10","_nodeVersion":"6.11.1","_npmUser":{"name":"jameshenry","email":"james@henry.sc"},"dist":{"shasum":"3fe163f905154da9296369c314dabcb33a1cc40c","tarball":"https://registry.npmjs.org/eslint-plugin-typescript/-/eslint-plugin-typescript-0.4.0.tgz"},"maintainers":[{"email":"james@henry.sc","name":"jameshenry"},{"email":"nicholas@nczconsulting.com","name":"nzakas"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eslint-plugin-typescript-0.4.0.tgz_1502308341231_0.5705273221246898"},"directories":{},"deprecated":"Deprecated: Use @typescript-eslint/eslint-plugin instead"},"0.5.0":{"name":"eslint-plugin-typescript","version":"0.5.0","description":"TypeScript plugin for ESLint","keywords":["eslint","eslintplugin","eslint-plugin"],"repository":{"type":"git","url":"git+https://github.com/nzakas/eslint-plugin-typescript.git"},"author":{"name":"Nicholas C. Zakas"},"main":"lib/index.js","scripts":{"lint":"eslint lib/ tests/","lint:fix":"eslint lib/ test/ --fix","mocha":"mocha tests --recursive","test":"npm run lint && npm run mocha"},"dependencies":{"requireindex":"~1.1.0"},"devDependencies":{"eslint":"^4.1.1","eslint-config-eslint":"^4.0.0","eslint-plugin-node":"^5.1.0","mocha":"^3.4.2","typescript":"~2.3.0","typescript-eslint-parser":"^4.0.0"},"engines":{"node":">=4"},"license":"MIT","gitHead":"bae09beb58c1829fc0b3afdf7de9f266ea12ed05","bugs":{"url":"https://github.com/nzakas/eslint-plugin-typescript/issues"},"homepage":"https://github.com/nzakas/eslint-plugin-typescript#readme","_id":"eslint-plugin-typescript@0.5.0","_shasum":"d6c5b35e748d2901e89aebf21731974d652f166e","_from":".","_npmVersion":"3.10.10","_nodeVersion":"6.11.1","_npmUser":{"name":"jameshenry","email":"james@henry.sc"},"dist":{"shasum":"d6c5b35e748d2901e89aebf21731974d652f166e","tarball":"https://registry.npmjs.org/eslint-plugin-typescript/-/eslint-plugin-typescript-0.5.0.tgz"},"maintainers":[{"email":"james@henry.sc","name":"jameshenry"},{"email":"nicholas@nczconsulting.com","name":"nzakas"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eslint-plugin-typescript-0.5.0.tgz_1502545289318_0.7363224767614156"},"directories":{},"deprecated":"Deprecated: Use @typescript-eslint/eslint-plugin instead"},"0.6.0":{"name":"eslint-plugin-typescript","version":"0.6.0","description":"TypeScript plugin for ESLint","keywords":["eslint","eslintplugin","eslint-plugin"],"repository":{"type":"git","url":"git+https://github.com/nzakas/eslint-plugin-typescript.git"},"author":{"name":"Nicholas C. Zakas"},"main":"lib/index.js","scripts":{"lint":"eslint lib/ tests/","lint:fix":"eslint lib/ tests/ --fix","mocha":"mocha tests --recursive","test":"npm run lint && npm run mocha","precommit":"npm test && lint-staged"},"dependencies":{"requireindex":"~1.1.0"},"devDependencies":{"eslint":"^4.5.0","eslint-config-eslint":"^4.0.0","eslint-config-prettier":"^2.3.0","eslint-plugin-node":"^5.1.1","eslint-plugin-prettier":"^2.2.0","husky":"^0.14.3","lint-staged":"^4.0.3","mocha":"^3.5.0","prettier":"^1.5.3","typescript":"~2.4.2","typescript-eslint-parser":"^6.0.1"},"lint-staged":{"*.js":["prettier --write","git add"]},"engines":{"node":">=4"},"license":"MIT","gitHead":"849a03c248f804f94f151beac7d28aa96c612a7a","bugs":{"url":"https://github.com/nzakas/eslint-plugin-typescript/issues"},"homepage":"https://github.com/nzakas/eslint-plugin-typescript#readme","_id":"eslint-plugin-typescript@0.6.0","_shasum":"ee0994a7d66262f62aeb75c2fd2cc8255b5d1dfb","_from":".","_npmVersion":"3.10.10","_nodeVersion":"6.11.1","_npmUser":{"name":"jameshenry","email":"james@henry.sc"},"dist":{"shasum":"ee0994a7d66262f62aeb75c2fd2cc8255b5d1dfb","tarball":"https://registry.npmjs.org/eslint-plugin-typescript/-/eslint-plugin-typescript-0.6.0.tgz"},"maintainers":[{"email":"james@henry.sc","name":"jameshenry"},{"email":"nicholas@nczconsulting.com","name":"nzakas"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eslint-plugin-typescript-0.6.0.tgz_1503401107205_0.086407640716061"},"directories":{},"deprecated":"Deprecated: Use @typescript-eslint/eslint-plugin instead"},"0.7.0":{"name":"eslint-plugin-typescript","version":"0.7.0","description":"TypeScript plugin for ESLint","keywords":["eslint","eslintplugin","eslint-plugin"],"repository":{"type":"git","url":"git+https://github.com/nzakas/eslint-plugin-typescript.git"},"author":{"name":"Nicholas C. Zakas"},"main":"lib/index.js","scripts":{"lint":"eslint lib/ tests/","lint:fix":"eslint lib/ tests/ --fix","mocha":"mocha tests --recursive","test":"npm run lint && npm run mocha","precommit":"npm test && lint-staged"},"dependencies":{"requireindex":"~1.1.0"},"devDependencies":{"eslint":"^4.5.0","eslint-config-eslint":"^4.0.0","eslint-config-prettier":"^2.3.0","eslint-plugin-node":"^5.1.1","eslint-plugin-prettier":"^2.2.0","husky":"^0.14.3","lint-staged":"^4.0.3","mocha":"^3.5.0","prettier":"^1.5.3","typescript":"~2.4.2","typescript-eslint-parser":"^7.0.0"},"lint-staged":{"*.js":["prettier --write --tab-width 4","git add"]},"engines":{"node":">=4"},"license":"MIT","gitHead":"cd935e978f5efb6c9868c9f88afa1d85f4a4f640","bugs":{"url":"https://github.com/nzakas/eslint-plugin-typescript/issues"},"homepage":"https://github.com/nzakas/eslint-plugin-typescript#readme","_id":"eslint-plugin-typescript@0.7.0","_shasum":"d0bea86737fa18e892a27d7d70dea4ad3109ac8a","_from":".","_npmVersion":"3.10.10","_nodeVersion":"6.11.1","_npmUser":{"name":"jameshenry","email":"james@henry.sc"},"dist":{"shasum":"d0bea86737fa18e892a27d7d70dea4ad3109ac8a","tarball":"https://registry.npmjs.org/eslint-plugin-typescript/-/eslint-plugin-typescript-0.7.0.tgz"},"maintainers":[{"email":"james@henry.sc","name":"jameshenry"},{"email":"nicholas@nczconsulting.com","name":"nzakas"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eslint-plugin-typescript-0.7.0.tgz_1503778051739_0.5538022345863283"},"directories":{},"deprecated":"Deprecated: Use @typescript-eslint/eslint-plugin instead"},"0.8.0":{"name":"eslint-plugin-typescript","version":"0.8.0","description":"TypeScript plugin for ESLint","keywords":["eslint","eslintplugin","eslint-plugin"],"repository":{"type":"git","url":"git+https://github.com/nzakas/eslint-plugin-typescript.git"},"author":{"name":"Nicholas C. Zakas"},"main":"lib/index.js","scripts":{"lint":"eslint lib/ tests/","lint:fix":"eslint lib/ tests/ --fix","docs":"eslint-docs","docs:check":"eslint-docs check","mocha":"mocha tests --recursive --reporter=dot","test":"npm run lint && npm run mocha && npm run docs:check","precommit":"npm test && lint-staged"},"dependencies":{"requireindex":"~1.1.0"},"devDependencies":{"eslint":"^4.6.1","eslint-config-eslint":"^4.0.0","eslint-config-prettier":"^2.4.0","eslint-docs":"^0.1.1","eslint-plugin-node":"^5.1.1","eslint-plugin-prettier":"^2.2.0","husky":"^0.14.3","lint-staged":"^4.1.3","mocha":"^3.5.3","prettier":"^1.6.1","typescript":"~2.5.1","typescript-eslint-parser":"^8.0.0"},"lint-staged":{"*.js":["prettier --write --tab-width 4","git add"]},"engines":{"node":">=4"},"license":"MIT","gitHead":"cd150f94cd8c4a62b148a4cae4279022d2abcdfe","bugs":{"url":"https://github.com/nzakas/eslint-plugin-typescript/issues"},"homepage":"https://github.com/nzakas/eslint-plugin-typescript#readme","_id":"eslint-plugin-typescript@0.8.0","_shasum":"4e0de52853db52e2a3a1464a31cb4f29f57ea9d7","_from":".","_npmVersion":"3.10.10","_nodeVersion":"6.9.4","_npmUser":{"name":"jameshenry","email":"james@henry.sc"},"dist":{"shasum":"4e0de52853db52e2a3a1464a31cb4f29f57ea9d7","tarball":"https://registry.npmjs.org/eslint-plugin-typescript/-/eslint-plugin-typescript-0.8.0.tgz"},"maintainers":[{"email":"james@henry.sc","name":"jameshenry"},{"email":"nicholas@nczconsulting.com","name":"nzakas"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eslint-plugin-typescript-0.8.0.tgz_1507240923828_0.1106979486066848"},"directories":{},"deprecated":"Deprecated: Use @typescript-eslint/eslint-plugin instead"},"0.8.1":{"name":"eslint-plugin-typescript","version":"0.8.1","description":"TypeScript plugin for ESLint","keywords":["eslint","eslintplugin","eslint-plugin"],"repository":{"type":"git","url":"git+https://github.com/nzakas/eslint-plugin-typescript.git"},"author":{"name":"Nicholas C. Zakas"},"main":"lib/index.js","scripts":{"lint":"eslint lib/ tests/","lint:fix":"eslint lib/ tests/ --fix","docs":"eslint-docs","docs:check":"eslint-docs check","mocha":"mocha tests --recursive --reporter=dot","test":"npm run lint && npm run mocha && npm run docs:check","precommit":"npm test && lint-staged"},"dependencies":{"requireindex":"~1.1.0"},"devDependencies":{"eslint":"^4.6.1","eslint-config-eslint":"^4.0.0","eslint-config-prettier":"^2.4.0","eslint-docs":"^0.1.1","eslint-plugin-node":"^5.1.1","eslint-plugin-prettier":"^2.2.0","husky":"^0.14.3","lint-staged":"^4.1.3","mocha":"^3.5.3","prettier":"1.8.2","typescript":"~2.5.1","typescript-eslint-parser":"^8.0.0"},"lint-staged":{"*.js":["prettier --write --tab-width 4","git add"]},"engines":{"node":">=4"},"license":"MIT","gitHead":"12220ccac76234121e64a9e993b863d69a029353","bugs":{"url":"https://github.com/nzakas/eslint-plugin-typescript/issues"},"homepage":"https://github.com/nzakas/eslint-plugin-typescript#readme","_id":"eslint-plugin-typescript@0.8.1","_npmVersion":"5.5.1","_nodeVersion":"8.9.1","_npmUser":{"name":"jameshenry","email":"james@henry.sc"},"dist":{"integrity":"sha512-bf/QQHNAqwvtQOVQbMm1SkjPO2XaIHQMDCcgkPlYB+uMGGK2rQCKMz/ftcBIIyuHQth48y2Z/+LUYuaCnI0T3A==","shasum":"e5b2d18e744a04528eac58b099fe1032c4d744ff","tarball":"https://registry.npmjs.org/eslint-plugin-typescript/-/eslint-plugin-typescript-0.8.1.tgz"},"maintainers":[{"email":"james@henry.sc","name":"jameshenry"},{"email":"nicholas@nczconsulting.com","name":"nzakas"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eslint-plugin-typescript-0.8.1.tgz_1511458523684_0.5340735411737114"},"directories":{},"deprecated":"Deprecated: Use @typescript-eslint/eslint-plugin instead"},"0.9.0":{"name":"eslint-plugin-typescript","version":"0.9.0","description":"TypeScript plugin for ESLint","keywords":["eslint","eslintplugin","eslint-plugin"],"repository":{"type":"git","url":"git+https://github.com/nzakas/eslint-plugin-typescript.git"},"author":{"name":"Nicholas C. Zakas"},"main":"lib/index.js","scripts":{"lint":"eslint lib/ tests/","lint:fix":"eslint lib/ tests/ --fix","docs":"eslint-docs","docs:check":"eslint-docs check","mocha":"mocha tests --recursive --reporter=dot","test":"npm run lint && npm run mocha && npm run docs:check","precommit":"npm test && lint-staged"},"dependencies":{"requireindex":"~1.1.0"},"devDependencies":{"eslint":"^4.13.1","eslint-config-eslint":"^4.0.0","eslint-config-prettier":"^2.9.0","eslint-docs":"^0.1.1","eslint-plugin-node":"^5.1.1","eslint-plugin-prettier":"^2.2.0","husky":"^0.14.3","lint-staged":"^6.0.0","mocha":"^4.0.1","prettier":"1.9.1","typescript":"~2.6.1","typescript-eslint-parser":"^10.0.0"},"lint-staged":{"*.js":["prettier --write --tab-width 4","git add"]},"engines":{"node":">=4"},"license":"MIT","gitHead":"57c0f295abed0d61d81a283f3bd69516acd4f975","bugs":{"url":"https://github.com/nzakas/eslint-plugin-typescript/issues"},"homepage":"https://github.com/nzakas/eslint-plugin-typescript#readme","_id":"eslint-plugin-typescript@0.9.0","_npmVersion":"5.5.1","_nodeVersion":"8.9.1","_npmUser":{"name":"jameshenry","email":"james@henry.sc"},"dist":{"integrity":"sha512-zcEAftbsnd1xEyLT4ZOXphbgWO2SFZduU3Mrjj6FA7Up2qOSc2kD++ICxvIgh4/8hKOaq/xJsNNOoDUJSVNyZg==","shasum":"9b7075bc1560e879ae3403030564026106a1184d","tarball":"https://registry.npmjs.org/eslint-plugin-typescript/-/eslint-plugin-typescript-0.9.0.tgz","fileCount":69,"unpackedSize":578060},"maintainers":[{"email":"james@henry.sc","name":"jameshenry"},{"email":"nicholas@nczconsulting.com","name":"nzakas"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eslint-plugin-typescript_0.9.0_1519321942103_0.10232650865552584"},"_hasShrinkwrap":false,"deprecated":"Deprecated: Use @typescript-eslint/eslint-plugin instead"},"0.10.0":{"name":"eslint-plugin-typescript","version":"0.10.0","description":"TypeScript plugin for ESLint","keywords":["eslint","eslintplugin","eslint-plugin"],"repository":{"type":"git","url":"git+https://github.com/nzakas/eslint-plugin-typescript.git"},"author":{"name":"Nicholas C. Zakas"},"main":"lib/index.js","scripts":{"lint":"eslint lib/ tests/","lint:fix":"eslint lib/ tests/ --fix","docs":"eslint-docs","docs:check":"eslint-docs check","mocha":"mocha tests --recursive --reporter=dot","test":"npm run lint && npm run mocha && npm run docs:check","precommit":"npm test && lint-staged"},"dependencies":{"requireindex":"~1.1.0"},"devDependencies":{"eslint":"^4.13.1","eslint-config-eslint":"^4.0.0","eslint-config-prettier":"^2.9.0","eslint-docs":"^0.1.1","eslint-plugin-node":"^5.1.1","eslint-plugin-prettier":"^2.2.0","husky":"^0.14.3","lint-staged":"^6.0.0","mocha":"^4.0.1","prettier":"1.9.1","typescript":"~2.6.1","typescript-eslint-parser":"^10.0.0"},"lint-staged":{"*.js":["prettier --write --tab-width 4","git add"]},"engines":{"node":">=4"},"license":"MIT","gitHead":"c99c136fb15d1ffa3086300e29eb83ddde946bd8","bugs":{"url":"https://github.com/nzakas/eslint-plugin-typescript/issues"},"homepage":"https://github.com/nzakas/eslint-plugin-typescript#readme","_id":"eslint-plugin-typescript@0.10.0","_npmVersion":"5.5.1","_nodeVersion":"8.9.1","_npmUser":{"name":"jameshenry","email":"james@henry.sc"},"dist":{"integrity":"sha512-FtnqeOOjQSkG1ggxfeEGYlhwxpw5XzpNYCCe1tX2G1UmjbXYoEqnEdD7bfSXd2jb7no5Pdo4i9xK9ncCv7lfuQ==","shasum":"009a8fcaf0ec7bf68f6fb71576df0d84ebd0b114","tarball":"https://registry.npmjs.org/eslint-plugin-typescript/-/eslint-plugin-typescript-0.10.0.tgz","fileCount":72,"unpackedSize":581238},"maintainers":[{"email":"james@henry.sc","name":"jameshenry"},{"email":"nicholas@nczconsulting.com","name":"nzakas"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eslint-plugin-typescript_0.10.0_1520548320183_0.8896122497642815"},"_hasShrinkwrap":false,"deprecated":"Deprecated: Use @typescript-eslint/eslint-plugin instead"},"0.11.0":{"name":"eslint-plugin-typescript","version":"0.11.0","description":"TypeScript plugin for ESLint","keywords":["eslint","eslintplugin","eslint-plugin"],"repository":{"type":"git","url":"git+https://github.com/nzakas/eslint-plugin-typescript.git"},"author":{"name":"Nicholas C. Zakas"},"main":"lib/index.js","scripts":{"lint":"eslint lib/ tests/","lint:fix":"eslint lib/ tests/ --fix","docs":"eslint-docs","docs:check":"eslint-docs check","mocha":"mocha tests --recursive --reporter=dot","test":"npm run lint && npm run mocha && npm run docs:check","precommit":"npm test && lint-staged"},"dependencies":{"requireindex":"~1.1.0"},"devDependencies":{"eslint":"^4.13.1","eslint-config-eslint":"^4.0.0","eslint-config-prettier":"^2.9.0","eslint-docs":"^0.1.1","eslint-plugin-node":"^6.0.1","eslint-plugin-prettier":"^2.2.0","husky":"^0.14.3","lint-staged":"^6.0.0","mocha":"^4.0.1","prettier":"^1.11.1","typescript":"~2.6.1","typescript-eslint-parser":"^10.0.0"},"lint-staged":{"*.js":["prettier --write --tab-width 4","git add"]},"engines":{"node":">=4"},"license":"MIT","gitHead":"1b5fd06715933253367da45563f729d39b59902f","bugs":{"url":"https://github.com/nzakas/eslint-plugin-typescript/issues"},"homepage":"https://github.com/nzakas/eslint-plugin-typescript#readme","_id":"eslint-plugin-typescript@0.11.0","_npmVersion":"5.5.1","_nodeVersion":"8.9.1","_npmUser":{"name":"jameshenry","email":"james@henry.sc"},"dist":{"integrity":"sha512-U3+fjhwmBZMPMQNC962tHgEBVUwflEuFkKNL0NMAyuUffdd3lIvGqHF+VG27p9qA7yR/mkxwIjiXYi+OB3e4DQ==","shasum":"a8480beeac1634271737e0ff8af32d9119b0d272","tarball":"https://registry.npmjs.org/eslint-plugin-typescript/-/eslint-plugin-typescript-0.11.0.tgz","fileCount":75,"unpackedSize":593306},"maintainers":[{"email":"james@henry.sc","name":"jameshenry"},{"email":"nicholas@nczconsulting.com","name":"nzakas"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eslint-plugin-typescript_0.11.0_1522171420983_0.7999181144326395"},"_hasShrinkwrap":false,"deprecated":"Deprecated: Use @typescript-eslint/eslint-plugin instead"},"0.12.0":{"name":"eslint-plugin-typescript","version":"0.12.0","description":"TypeScript plugin for ESLint","keywords":["eslint","eslintplugin","eslint-plugin"],"repository":{"type":"git","url":"git+https://github.com/nzakas/eslint-plugin-typescript.git"},"author":{"name":"Nicholas C. Zakas"},"main":"lib/index.js","scripts":{"lint":"eslint lib/ tests/","lint:fix":"eslint lib/ tests/ --fix","docs":"eslint-docs","docs:check":"eslint-docs check","mocha":"mocha tests --recursive --reporter=dot","test":"npm run lint && npm run mocha && npm run docs:check","precommit":"npm test && lint-staged"},"dependencies":{"requireindex":"~1.1.0"},"devDependencies":{"eslint":"^4.13.1","eslint-config-eslint":"^4.0.0","eslint-config-prettier":"^2.9.0","eslint-docs":"^0.1.1","eslint-plugin-node":"^6.0.1","eslint-plugin-prettier":"^2.2.0","husky":"^0.14.3","lint-staged":"^6.0.0","mocha":"^4.0.1","prettier":"^1.11.1","typescript":"~2.6.1","typescript-eslint-parser":"^10.0.0"},"lint-staged":{"*.js":["prettier --write --tab-width 4","git add"]},"engines":{"node":">=4"},"license":"MIT","gitHead":"ac0c3cf6aa832359a525ac7e3540dfbc57b58a08","bugs":{"url":"https://github.com/nzakas/eslint-plugin-typescript/issues"},"homepage":"https://github.com/nzakas/eslint-plugin-typescript#readme","_id":"eslint-plugin-typescript@0.12.0","_npmVersion":"5.5.1","_nodeVersion":"8.9.1","_npmUser":{"name":"jameshenry","email":"james@henry.sc"},"dist":{"integrity":"sha512-2+DNE8nTvdNkhem/FBJXLPSeMDOZL68vHHNfTbM+PBc5iAuwBe8xLSQubwKxABqSZDwUHg+mwGmv5c2NlImi0Q==","shasum":"e23d58cb27fe28e89fc641a1f20e8d862cb99aef","tarball":"https://registry.npmjs.org/eslint-plugin-typescript/-/eslint-plugin-typescript-0.12.0.tgz","fileCount":78,"unpackedSize":670371,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJa4gFPCRA9TVsSAnZWagAAqJAP/im9GgzQ4cZ2oId/CGGT\nsahgEdASRLr9fakg7X0nNPuxbf7ALioEa/+mSwDgRSQsHsYcmcKDndlnjXdT\nM/DZxJO+1vB5r+MF2Q0EvtxcaAEqObMYCdVVKKMc7ewLZExXqILuXV2nLKGv\nXEqOrkytEMhsdtynLbNDkfiOEqp70YN4Pl4lnN3x0NRDUvqLVQMygIUSOlf4\n8DmhRKzwLcH4Wa+UJDKYN6sowWCj5cqNwYO8wiXxx0E+kBuVQjTbkMlhFVW6\n4Jxlft3Su0kf52kOrU+x7sibATiScp4qhWHFa3b0Er8qD7iMN2gwUTUuBQ+Q\n6hqzSf8bUTjeRhDZ/46u3CoIe/fIku5qSwrxgYe/dprQz5dGfPyGI+XsN7V1\n5W6/i+hpdKQklczQxE2jxDYfTuTGnmx4Tzm1UuZrbMF/S9YeU4wwV/TSzz60\ntWe+8fcYf2sv/Hma5p9r6s0yELZwVDdTWYQJCGfGfkJvcJMmkf3Wla1rOm77\ns67/Yiadbef58lzEK0bieE4sQr1ZPlMQ0KGN6MIWd8aTYrjwepBos7dIXsnO\nIwwWbzsPPv3ECKWRXRcrI0W3WW8d7fJP5xc9AZLbo286bwfwlEKWvrQfdLlL\n0TWVylt0BEX9jKHbaO+qrYaK0GTNIm4mYWElYW2Q4OtO+mYMadLUJWHJ6s0S\ngaWC\r\n=Qu8n\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"james@henry.sc","name":"jameshenry"},{"email":"nicholas@nczconsulting.com","name":"nzakas"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eslint-plugin-typescript_0.12.0_1524760910258_0.9467270499491871"},"_hasShrinkwrap":false,"deprecated":"Deprecated: Use @typescript-eslint/eslint-plugin instead"},"0.13.0":{"name":"eslint-plugin-typescript","version":"0.13.0","description":"TypeScript plugin for ESLint","keywords":["eslint","eslintplugin","eslint-plugin"],"repository":{"type":"git","url":"git+https://github.com/nzakas/eslint-plugin-typescript.git"},"author":{"name":"Nicholas C. Zakas"},"main":"lib/index.js","scripts":{"lint":"eslint lib/ tests/","lint:fix":"eslint lib/ tests/ --fix","docs":"eslint-docs","docs:check":"eslint-docs check","format":"prettier --write --tab-width 4 lib/**/*.js tests/**/*.js","mocha":"mocha tests --recursive --reporter=dot","test":"npm run lint && npm run mocha && npm run docs:check","precommit":"npm test && lint-staged"},"dependencies":{"requireindex":"~1.1.0"},"devDependencies":{"eslint":"^4.13.1","eslint-config-eslint":"^4.0.0","eslint-config-prettier":"^2.9.0","eslint-docs":"^0.1.1","eslint-plugin-node":"^6.0.1","eslint-plugin-prettier":"^2.2.0","husky":"^0.14.3","lint-staged":"^6.0.0","mocha":"^4.0.1","prettier":"^1.11.1","typescript":"~2.8.1","typescript-eslint-parser":"^15.0.0"},"lint-staged":{"*.js":["prettier --write --tab-width 4","git add"]},"engines":{"node":">=6"},"license":"MIT","gitHead":"0803b95bef92015dff452ebfe77a5c1b2ca2db8f","bugs":{"url":"https://github.com/nzakas/eslint-plugin-typescript/issues"},"homepage":"https://github.com/nzakas/eslint-plugin-typescript#readme","_id":"eslint-plugin-typescript@0.13.0","_npmVersion":"5.6.0","_nodeVersion":"8.11.3","_npmUser":{"name":"jameshenry","email":"james@henry.sc"},"dist":{"integrity":"sha512-dN8EwZfkOobYJ6VCFJ0Kd39OLSectdJlkG5L+VmA2BtMunZALQus6XLx21Gkj6vmfmUDk6uEGCB7JCszhvZoTA==","shasum":"07fa9a166dee1daff14716c70fb8fb7c6583d852","tarball":"https://registry.npmjs.org/eslint-plugin-typescript/-/eslint-plugin-typescript-0.13.0.tgz","fileCount":82,"unpackedSize":691849,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJb2kyfCRA9TVsSAnZWagAAaJ0P/AuVvG9fOt8P+hwGvQ8z\nYH0NBup9GQangenFOR/AzKeSqL/VYEgSwE3w0oX8iqiJgtk4wHYsCT97jTEL\n8b289JxXaW5nHALHK5XfpW1bZ4Ltkjb+JNAOVIZJsy6TrNcaZwv9NWEKiOaj\nJO7OY9V2CUoEIHb34OFFaWa21KDm6bZ8rRshj0Nt9rca41Ob6KcNWJXiWScn\n2vHK3lzqAMk1KmLpU3T2owuj+u8Hxykecd4Sqh6SkXWrIoW1MEEwZ9zX7ZBJ\nzy1a+r7+G9bEQqW3pdMWZFdNHHXXmuK0jrPdLJTcURDV4lXpuJpU4IV5okhK\n2zJiz3Aa1xyqCZ7GKYV69STqAh1eRsOdLtjkWt5QwvZ3TKNmkYDSwZZsPxIL\nhj8Gtn/6e39ItuUHqD4DMti4/u/jc6ulGQCg4tgQ72bzMx2sL9WmNiJsE45/\nzE3vLepOTz7F5yaWce70p7OZPxyRC7U9OAGEiay/ypkz7SUKL34xBE/WuQG0\nbQzmNHf4b2kgm3dF78kc/bCD5H9q7sJbwZdsuDKdC91WmZkL3tDomGjbOAg9\nGBzCyIQWlQ+K3Vg2BYlXN11m7CSyeZC/uTYOLR2Xs14Av5JBe7pHJ8WI8I0T\nQ6L1NJrDabw9yU9+yDn0j+V6axdVr9LDhr9ve3pEzc1MFru6v7bIXcE4vcM6\nj9uA\r\n=0iRj\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"james@henry.sc","name":"jameshenry"},{"email":"nicholas@nczconsulting.com","name":"nzakas"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eslint-plugin-typescript_0.13.0_1541033118701_0.35953797018716194"},"_hasShrinkwrap":false,"deprecated":"Deprecated: Use @typescript-eslint/eslint-plugin instead"},"0.14.0-rc.1":{"name":"eslint-plugin-typescript","version":"0.14.0-rc.1","description":"TypeScript plugin for ESLint","keywords":["eslint","eslintplugin","eslint-plugin"],"repository":{"type":"git","url":"git+https://github.com/nzakas/eslint-plugin-typescript.git"},"author":{"name":"Nicholas C. Zakas"},"main":"lib/index.js","scripts":{"lint":"eslint lib/ tests/","lint:fix":"eslint lib/ tests/ --fix","docs":"eslint-docs","docs:check":"eslint-docs check","format":"prettier --write --tab-width 4 lib/**/*.js tests/**/*.js","mocha":"mocha tests --recursive --reporter=dot","pretest":"npm run lint","test":"mocha tests --recursive --reporter=dot","posttest":"npm run docs:check","precommit":"npm test && lint-staged"},"dependencies":{"requireindex":"~1.1.0"},"devDependencies":{"eslint":"^4.13.1","eslint-config-eslint":"^4.0.0","eslint-config-prettier":"^2.9.0","eslint-docs":"^0.1.1","eslint-plugin-node":"^6.0.1","eslint-plugin-prettier":"^2.2.0","husky":"^0.14.3","lint-staged":"^6.0.0","mocha":"^4.0.1","prettier":"^1.11.1","typescript":"~2.9","typescript-eslint-parser":"^17.0.1"},"lint-staged":{"*.js":["prettier --write --tab-width 4","git add"]},"engines":{"node":">=6"},"license":"MIT","readme":"# eslint-plugin-typescript\n\nTypeScript support for ESLint. (This is still in the very early stages, so please be patient.)\n\n## Installation\n\nYou'll first need to install [ESLint](http://eslint.org):\n\n```\n$ npm i eslint --save-dev\n```\n\nNext, install `typescript-eslint-parser`:\n\n```\n$ npm install typescript-eslint-parser --save-dev\n```\n\nLast, install `eslint-plugin-typescript`:\n\n```\n$ npm install eslint-plugin-typescript --save-dev\n```\n\n**Note:** If you installed ESLint globally (using the `-g` flag) then you must also install `eslint-plugin-typescript` globally.\n\n## Usage\n\nAdd `typescript-eslint-parser` to the `parser` field and `typescript` to the plugins section of your `.eslintrc` configuration file. You can omit the `eslint-plugin-` prefix:\n\n```json\n{\n    \"parser\": \"typescript-eslint-parser\",\n    \"plugins\": [\n        \"typescript\"\n    ]\n}\n```\n\nThen configure the rules you want to use under the rules section.\n\n```json\n{\n    \"rules\": {\n        \"typescript/rule-name\": \"error\"\n    }\n}\n```\n\n## Supported Rules\n\n<!-- Please run `npm run docs` to update this section -->\n<!-- begin rule list -->\n* [`typescript/adjacent-overload-signatures`](./docs/rules/adjacent-overload-signatures.md) — Require that member overloads be consecutive\n* [`typescript/class-name-casing`](./docs/rules/class-name-casing.md) — Require PascalCased class and interface names (`class-name` from TSLint)\n* [`typescript/explicit-function-return-type`](./docs/rules/explicit-function-return-type.md) — Require explicit return types on functions and class methods\n* [`typescript/explicit-member-accessibility`](./docs/rules/explicit-member-accessibility.md) — Require explicit accessibility modifiers on class properties and methods (`member-access` from TSLint)\n* [`typescript/generic-type-naming`](./docs/rules/generic-type-naming.md) — Enforces naming of generic type variables\n* [`typescript/interface-name-prefix`](./docs/rules/interface-name-prefix.md) — Require that interface names be prefixed with `I` (`interface-name` from TSLint)\n* [`typescript/member-delimiter-style`](./docs/rules/member-delimiter-style.md) — Require a specific member delimiter style for interfaces and type literals\n* [`typescript/member-naming`](./docs/rules/member-naming.md) — Enforces naming conventions for class members by visibility.\n* [`typescript/member-ordering`](./docs/rules/member-ordering.md) — Require a consistent member declaration order (`member-ordering` from TSLint)\n* [`typescript/no-angle-bracket-type-assertion`](./docs/rules/no-angle-bracket-type-assertion.md) — Enforces the use of `as Type` assertions instead of `<Type>` assertions (`no-angle-bracket-type-assertion` from TSLint)\n* [`typescript/no-array-constructor`](./docs/rules/no-array-constructor.md) — Disallow generic `Array` constructors\n* [`typescript/no-empty-interface`](./docs/rules/no-empty-interface.md) — Disallow the declaration of empty interfaces (`no-empty-interface` from TSLint)\n* [`typescript/no-explicit-any`](./docs/rules/no-explicit-any.md) — Disallow usage of the `any` type (`no-any` from TSLint)\n* [`typescript/no-inferrable-types`](./docs/rules/no-inferrable-types.md) — Disallows explicit type declarations for variables or parameters initialized to a number, string, or boolean. (`no-inferrable-types` from TSLint)\n* [`typescript/no-namespace`](./docs/rules/no-namespace.md) — Disallow the use of custom TypeScript modules and namespaces\n* [`typescript/no-non-null-assertion`](./docs/rules/no-non-null-assertion.md) — Disallows non-null assertions using the `!` postfix operator (`no-non-null-assertion` from TSLint)\n* [`typescript/no-parameter-properties`](./docs/rules/no-parameter-properties.md) — Disallow the use of parameter properties in class constructors. (`no-parameter-properties` from TSLint)\n* [`typescript/no-triple-slash-reference`](./docs/rules/no-triple-slash-reference.md) — Disallow `/// <reference path=\"\" />` comments (`no-reference` from TSLint)\n* [`typescript/no-type-alias`](./docs/rules/no-type-alias.md) — Disallow the use of type aliases (`interface-over-type-literal` from TSLint)\n* [`typescript/no-unused-vars`](./docs/rules/no-unused-vars.md) — Prevent TypeScript-specific constructs from being erroneously flagged as unused\n* [`typescript/no-use-before-define`](./docs/rules/no-use-before-define.md) — Disallow the use of variables before they are defined\n* [`typescript/no-var-requires`](./docs/rules/no-var-requires.md) — Disallows the use of require statements except in import statements (`no-var-requires` from TSLint)\n* [`typescript/prefer-namespace-keyword`](./docs/rules/prefer-namespace-keyword.md) — Require the use of the `namespace` keyword instead of the `module` keyword to declare custom TypeScript modules. (`no-internal-module` from TSLint)\n* [`typescript/type-annotation-spacing`](./docs/rules/type-annotation-spacing.md) — Require consistent spacing around type annotations\n<!-- end rule list -->\n","readmeFilename":"README.md","gitHead":"5192c204803a578906e27cc07b20d3b46066e578","bugs":{"url":"https://github.com/nzakas/eslint-plugin-typescript/issues"},"homepage":"https://github.com/nzakas/eslint-plugin-typescript#readme","_id":"eslint-plugin-typescript@0.14.0-rc.1","_npmVersion":"6.2.0","_nodeVersion":"10.9.0","_npmUser":{"name":"bradzacher","email":"brad.zacher@gmail.com"},"dist":{"integrity":"sha512-rqeHTH2b88IyEPbm+kIohIWyON/q9W/J1wu4tU/yAVoigmSvr7y74UiwhM7lJCFMzyXq3S35taMVJr96ePucZA==","shasum":"47a6df649c6d0b10c701663ecee13b32034f708f","tarball":"https://registry.npmjs.org/eslint-plugin-typescript/-/eslint-plugin-typescript-0.14.0-rc.1.tgz","fileCount":53,"unpackedSize":191914,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJb+1oJCRA9TVsSAnZWagAAd50P/RPuocPyXMbxFK/lnAA5\ne6JE6yVCeLb/Uc4qO9OiLEDhkrSuNZTDQmMSjQNC7Ykkjw7lPHdCo3X45Ieq\nF2ODnpkH0/alcsuqIOHt0NsCtBEn3TMCZC5bvcQw44kClWJvvrXm+zfnACFa\nlLtGIlPLWagYNhx7n805IU9fVz5njkfFq7fssQLIruiJNl6rFE3XGJpm1o+Y\nGAJ8NmzxsvZgfsYVuGHxDu1Zs+ZNrTqgS8TecRsNEaxPrGZAtXyMzKlbwDzM\nmQI5AK0Sjt+aTEUn8vwCRgLRuWOEM4wMjP3xCBQKHpdekA8QLiTmj3HaAhCl\nqIn2f/jLSLOIft5fCzX/9XF/nGVj/n/DDL7EJ+dQNC9Z4ikn5cYaHlTJToI/\n4E/oWNPCTmJo1sWFpVrWyE8dystRbI/5OoxF5r0Nt/Vp28Pmob9/zrOzhdpq\n+Tp6wjN1xhzti7Nywb9Un1uQWun4q9aAxB4Z0O6fwoZsah7oH2/8u7VylOIk\nm7d2NPv01Sv4bl6tFX0tbJZu2D4YDB/tTFDFZURQnRv2drEeDKdrEBJFvREw\nYsCqes3cwBj7o3anNgwlrWkzU2aD9HEyI4MorbhTB6eJvq+oW+CxvpZJSs+4\nJyf/jitX+lJDTOyo4I7nt4FH8pMKrwwMSS4jJa+FslcUl048xS1cyn2mRfya\ntAaT\r\n=fSN1\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"james@henry.sc","name":"jameshenry"},{"email":"nicholas@nczconsulting.com","name":"nzakas"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eslint-plugin-typescript_0.14.0-rc.1_1543199241037_0.700118738106279"},"_hasShrinkwrap":false},"0.14.0":{"name":"eslint-plugin-typescript","version":"0.14.0","description":"TypeScript plugin for ESLint","keywords":["eslint","eslintplugin","eslint-plugin"],"repository":{"type":"git","url":"git+https://github.com/nzakas/eslint-plugin-typescript.git"},"author":{"name":"Nicholas C. Zakas"},"main":"lib/index.js","scripts":{"lint":"eslint lib/ tests/","lint:fix":"eslint lib/ tests/ --fix","docs":"eslint-docs","docs:check":"eslint-docs check","format":"prettier --write --tab-width 4 lib/**/*.js tests/**/*.js","mocha":"mocha tests --recursive --reporter=dot","pretest":"npm run lint","test":"mocha tests --recursive --reporter=dot","posttest":"npm run docs:check","precommit":"npm test && lint-staged"},"dependencies":{"requireindex":"~1.1.0"},"devDependencies":{"eslint":"^4.13.1","eslint-config-eslint":"^4.0.0","eslint-config-prettier":"^2.9.0","eslint-docs":"^0.1.1","eslint-plugin-node":"^6.0.1","eslint-plugin-prettier":"^2.2.0","husky":"^0.14.3","lint-staged":"^6.0.0","mocha":"^4.0.1","prettier":"^1.11.1","typescript":"~2.9","typescript-eslint-parser":"^17.0.1"},"lint-staged":{"*.js":["prettier --write --tab-width 4","git add"]},"engines":{"node":">=6"},"license":"MIT","gitHead":"150f582fae14f69a858822b6efe9c892a7d7ce96","bugs":{"url":"https://github.com/nzakas/eslint-plugin-typescript/issues"},"homepage":"https://github.com/nzakas/eslint-plugin-typescript#readme","_id":"eslint-plugin-typescript@0.14.0","_npmVersion":"6.2.0","_nodeVersion":"10.9.0","_npmUser":{"name":"bradzacher","email":"brad.zacher@gmail.com"},"dist":{"integrity":"sha512-2u1WnnDF2mkWWgU1lFQ2RjypUlmRoBEvQN02y9u+IL12mjWlkKFGEBnVsjs9Y8190bfPQCvWly1c2rYYUSOxWw==","shasum":"068549c3f4c7f3f85d88d398c29fa96bf500884c","tarball":"https://registry.npmjs.org/eslint-plugin-typescript/-/eslint-plugin-typescript-0.14.0.tgz","fileCount":53,"unpackedSize":191909,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJb+2GNCRA9TVsSAnZWagAAQUwP/iACb0Z7DlLMkPwTif6j\n6PBc/JqAaj0QIXlcLmafyBS0Y0wq8UIlxmm9QZiVYGodctepauc6MOxQDSej\ny6Eks+k1kz6vj8nHfH9wFRXDVjjshTu8URjIqnrxtjllWsRmoqwmPKfHLRhi\nrSwrMYSlbBiS8Lk6VhJuMRMOwcmbvlp7aKQap38zMZR0mSh9TzoAX0GbwuQs\nwaRAGI4QvmL19pDqI5v+Gn8OXHi7osfGkKsga/2MpsqCcNKAfHE+kq+DPXNm\nEvBkP3rIFjSWlmf3tpKR//YwgDgHlc0By9elBhdkkVy7sUydeD9/Eqr/uDPo\nJ/4qyPnUNqykWWEMhSg5Aw013nUJdmDsS+MXI71guzlciMSR+6psxfgQqNtX\nLFTL8cQLYDjYTPuylxi9gh9E3D1/no1QHwpr58/ou3Um3Ry7O9FIy12FYDPe\n1eXIJ7Ovgj+Ncq6CqvaTDTV3KP9XVPLhuAfEU9ehbc5989ItLi62d07FIzIs\nNcY+Y/y0ZpGOGiAnUbPT3PXfZfqMk3LTrAMn7dscsOQjrV9PTYpNU0bBLmXs\ngpU6/I6rZub0TuGTbp70HI0/nLqWkrBk+fnIxUCjR+if0R8TQmHODY26Xa30\nB2+1jbX/JW885G7kec6lHKQSk6Qbz8KoZz2O+uTctQ2Xq2XhQCEMla6d79Cf\nSqHj\r\n=vyy3\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"james@henry.sc","name":"jameshenry"},{"email":"nicholas@nczconsulting.com","name":"nzakas"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eslint-plugin-typescript_0.14.0_1543201165140_0.7180794772083512"},"_hasShrinkwrap":false,"deprecated":"Deprecated: Use @typescript-eslint/eslint-plugin instead"},"1.0.0-rc.0":{"name":"eslint-plugin-typescript","version":"1.0.0-rc.0","description":"TypeScript plugin for ESLint","keywords":["eslint","eslintplugin","eslint-plugin","typescript"],"repository":{"type":"git","url":"git+https://github.com/bradzacher/eslint-plugin-typescript.git"},"author":{"name":"Brad Zacher"},"license":"MIT","main":"lib/index.js","scripts":{"lint":"eslint lib/ tests/ tools/","lint:fix":"eslint lib/ tests/ tools/ --fix","docs":"eslint-docs","docs:check":"eslint-docs check","prettier":"prettier **/*.{md,yml,json}","format-no-write":"prettier-eslint lib/**/*.js tests/**/*.js tools/**/*.js --eslint-config-path=.eslintrc --eslint-ignore --prettier-ignore --eslint-path=node_modules/eslint --config=.prettierrc","format":"yarn format-no-write --write && yarn prettier --write","format-check":"yarn format-no-write --list-different && yarn prettier --list-different","test":"nyc mocha tests --recursive --reporter=dot","test:coverage":"nyc check-coverage --lines 95 --per-file","recommended:update":"node tools/update-recommended.js","pre-commit":"yarn check --verify-tree && yarn lint && yarn format-check && yarn test && yarn docs:check"},"dependencies":{"requireindex":"^1.2.0","typescript-eslint-parser":"21.0.2"},"devDependencies":{"eslint":"^5.9.0","nyc":"^13.1.0","eslint-config-eslint":"^5.0.1","eslint-config-prettier":"^3.3.0","eslint-docs":"^0.2.6","eslint-plugin-eslint-plugin":"^2.0.0","eslint-plugin-node":"^8.0.0","eslint-plugin-prettier":"^3.0.0","husky":"^1.2.0","lint-staged":"^8.1.0","mocha":"^5.2.0","prettier-eslint-cli":"^4.7.1","typescript":"~3.1.1"},"peerDependencies":{"eslint":">=4.13.1 < 6"},"nyc":{"include":["lib"]},"lint-staged":{"*.js":["yarn format","git add"]},"husky":{"hooks":{"pre-commit":"yarn pre-commit && lint-staged"}},"engines":{"node":">=6"},"readme":"# eslint-plugin-typescript\n\n[![NPM version](https://img.shields.io/npm/v/eslint-plugin-typescript.svg)](https://www.npmjs.com/package/eslint-plugin-typescript)\n[![NPM downloads](https://img.shields.io/npm/dm/eslint-plugin-typescript.svg)](https://www.npmjs.com/package/eslint-plugin-typescript)\n[![TravisCI](https://img.shields.io/travis/bradzacher/eslint-plugin-typescript.svg)](https://travis-ci.com/bradzacher/eslint-plugin-typescript)\n\nTypeScript support for ESLint. (This is still in the very early stages, so please be patient.)\n\n### The below readme is for the upcoming 1.0.0 release. [Please see this tag for the current NPM version (0.14.0)](https://github.com/bradzacher/eslint-plugin-typescript/tree/0.14.0)\n\n## Installation\n\nYou'll first need to install [ESLint](http://eslint.org):\n\n```\n$ npm i eslint --save-dev\n```\n\nLast, install `eslint-plugin-typescript`:\n\n```\n$ npm install eslint-plugin-typescript --save-dev\n```\n\n**Note:** If you installed ESLint globally (using the `-g` flag) then you must also install `eslint-plugin-typescript` globally.\n\n## Usage\n\nAdd `eslint-plugin-typescript/parser` to the `parser` field and `typescript` to the plugins section of your `.eslintrc` configuration file:\n\n```json\n{\n    \"parser\": \"eslint-plugin-typescript/parser\",\n    \"plugins\": [\"typescript\"]\n}\n```\n\nNote: The plugin provides its own version of the `typescript-eslint-parser` via `eslint-plugin-typescript/parser`.\nThis helps us guarantee 100% compatibility between the plugin and the parser.\n\nThen configure the rules you want to use under the rules section.\n\n```json\n{\n    \"parser\": \"eslint-plugin-typescript/parser\",\n    \"plugins\": [\"typescript\"],\n    \"rules\": {\n        \"typescript/rule-name\": \"error\"\n    }\n}\n```\n\nYou can also enable all the recommended rules at once. Add `plugin:typescript/recommended` in extends:\n\n```json\n{\n    \"extends\": [\"plugin:typescript/recommended\"]\n}\n```\n\n## Supported Rules\n\n<!-- Please run `npm run docs` to update this section -->\n<!-- begin rule list -->\n\n**Key**: :heavy_check_mark: = recommended, :wrench: = fixable\n\n<!-- prettier-ignore -->\n| Name | Description | :heavy_check_mark: | :wrench: |\n| ---- | ----------- | ------------------ | -------- |\n| [`typescript/adjacent-overload-signatures`](./docs/rules/adjacent-overload-signatures.md) | Require that member overloads be consecutive (`adjacent-overload-signatures` from TSLint) | :heavy_check_mark: |  |\n| [`typescript/array-type`](./docs/rules/array-type.md) | Requires using either `T[]` or `Array<T>` for arrays (`array-type` from TSLint) | :heavy_check_mark: | :wrench: |\n| [`typescript/ban-types`](./docs/rules/ban-types.md) | Enforces that types will not to be used (`ban-types` from TSLint) | :heavy_check_mark: | :wrench: |\n| [`typescript/camelcase`](./docs/rules/camelcase.md) | Enforce camelCase naming convention | :heavy_check_mark: |  |\n| [`typescript/class-name-casing`](./docs/rules/class-name-casing.md) | Require PascalCased class and interface names (`class-name` from TSLint) | :heavy_check_mark: |  |\n| [`typescript/explicit-function-return-type`](./docs/rules/explicit-function-return-type.md) | Require explicit return types on functions and class methods | :heavy_check_mark: |  |\n| [`typescript/explicit-member-accessibility`](./docs/rules/explicit-member-accessibility.md) | Require explicit accessibility modifiers on class properties and methods (`member-access` from TSLint) | :heavy_check_mark: |  |\n| [`typescript/generic-type-naming`](./docs/rules/generic-type-naming.md) | Enforces naming of generic type variables |  |  |\n| [`typescript/indent`](./docs/rules/indent.md) | Enforce consistent indentation (`indent` from TSLint) | :heavy_check_mark: | :wrench: |\n| [`typescript/interface-name-prefix`](./docs/rules/interface-name-prefix.md) | Require that interface names be prefixed with `I` (`interface-name` from TSLint) | :heavy_check_mark: |  |\n| [`typescript/member-delimiter-style`](./docs/rules/member-delimiter-style.md) | Require a specific member delimiter style for interfaces and type literals | :heavy_check_mark: | :wrench: |\n| [`typescript/member-naming`](./docs/rules/member-naming.md) | Enforces naming conventions for class members by visibility. |  |  |\n| [`typescript/member-ordering`](./docs/rules/member-ordering.md) | Require a consistent member declaration order (`member-ordering` from TSLint) |  |  |\n| [`typescript/no-angle-bracket-type-assertion`](./docs/rules/no-angle-bracket-type-assertion.md) | Enforces the use of `as Type` assertions instead of `<Type>` assertions (`no-angle-bracket-type-assertion` from TSLint) | :heavy_check_mark: |  |\n| [`typescript/no-array-constructor`](./docs/rules/no-array-constructor.md) | Disallow generic `Array` constructors | :heavy_check_mark: | :wrench: |\n| [`typescript/no-empty-interface`](./docs/rules/no-empty-interface.md) | Disallow the declaration of empty interfaces (`no-empty-interface` from TSLint) | :heavy_check_mark: |  |\n| [`typescript/no-explicit-any`](./docs/rules/no-explicit-any.md) | Disallow usage of the `any` type (`no-any` from TSLint) | :heavy_check_mark: |  |\n| [`typescript/no-extraneous-class`](./docs/rules/no-extraneous-class.md) | Forbids the use of classes as namespaces (`no-unnecessary-class` from TSLint) |  |  |\n| [`typescript/no-inferrable-types`](./docs/rules/no-inferrable-types.md) | Disallows explicit type declarations for variables or parameters initialized to a number, string, or boolean. (`no-inferrable-types` from TSLint) | :heavy_check_mark: | :wrench: |\n| [`typescript/no-misused-new`](./docs/rules/no-misused-new.md) | Enforce valid definition of `new` and `constructor`. (`no-misused-new` from TSLint) | :heavy_check_mark: |  |\n| [`typescript/no-namespace`](./docs/rules/no-namespace.md) | Disallow the use of custom TypeScript modules and namespaces (`no-namespace` from TSLint) | :heavy_check_mark: |  |\n| [`typescript/no-non-null-assertion`](./docs/rules/no-non-null-assertion.md) | Disallows non-null assertions using the `!` postfix operator (`no-non-null-assertion` from TSLint) | :heavy_check_mark: |  |\n| [`typescript/no-object-literal-type-assertion`](./docs/rules/no-object-literal-type-assertion.md) | Forbids an object literal to appear in a type assertion expression (`no-object-literal-type-assertion` from TSLint) | :heavy_check_mark: |  |\n| [`typescript/no-parameter-properties`](./docs/rules/no-parameter-properties.md) | Disallow the use of parameter properties in class constructors. (`no-parameter-properties` from TSLint) | :heavy_check_mark: |  |\n| [`typescript/no-this-alias`](./docs/rules/no-this-alias.md) | Disallow aliasing `this` (`no-this-assignment` from TSLint) |  |  |\n| [`typescript/no-triple-slash-reference`](./docs/rules/no-triple-slash-reference.md) | Disallow `/// <reference path=\"\" />` comments (`no-reference` from TSLint) | :heavy_check_mark: |  |\n| [`typescript/no-type-alias`](./docs/rules/no-type-alias.md) | Disallow the use of type aliases (`interface-over-type-literal` from TSLint) |  |  |\n| [`typescript/no-unused-vars`](./docs/rules/no-unused-vars.md) | Disallow unused variables (`no-unused-variable` from TSLint) | :heavy_check_mark: |  |\n| [`typescript/no-use-before-define`](./docs/rules/no-use-before-define.md) | Disallow the use of variables before they are defined | :heavy_check_mark: |  |\n| [`typescript/no-var-requires`](./docs/rules/no-var-requires.md) | Disallows the use of require statements except in import statements (`no-var-requires` from TSLint) | :heavy_check_mark: |  |\n| [`typescript/prefer-interface`](./docs/rules/prefer-interface.md) | Prefer an interface declaration over a type literal (type T = { ... }) (`interface-over-type-literal` from TSLint) | :heavy_check_mark: | :wrench: |\n| [`typescript/prefer-namespace-keyword`](./docs/rules/prefer-namespace-keyword.md) | Require the use of the `namespace` keyword instead of the `module` keyword to declare custom TypeScript modules. (`no-internal-module` from TSLint) | :heavy_check_mark: | :wrench: |\n| [`typescript/type-annotation-spacing`](./docs/rules/type-annotation-spacing.md) | Require consistent spacing around type annotations (`typedef-whitespace` from TSLint) | :heavy_check_mark: | :wrench: |\n\n<!-- end rule list -->\n","readmeFilename":"README.md","gitHead":"7765028a500231d8d5903253619cc2ca19b98dbd","bugs":{"url":"https://github.com/bradzacher/eslint-plugin-typescript/issues"},"homepage":"https://github.com/bradzacher/eslint-plugin-typescript#readme","_id":"eslint-plugin-typescript@1.0.0-rc.0","_npmVersion":"6.2.0","_nodeVersion":"10.9.0","_npmUser":{"name":"bradzacher","email":"brad.zacher@gmail.com"},"dist":{"integrity":"sha512-ge+A+Kt1EMI90zzH2Cx7QuPvjxnpBUIBzaEsGkleUB5VFNo4cM6xNEKRGaQBtfyr3dONYPYmNEkWBwxYBKZSoQ==","shasum":"4ac69de1268be7b4f676eb75840bc9f6c96af9e5","tarball":"https://registry.npmjs.org/eslint-plugin-typescript/-/eslint-plugin-typescript-1.0.0-rc.0.tgz","fileCount":73,"unpackedSize":262800,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcHptdCRA9TVsSAnZWagAAGuEP/39EyZJmAarYcUPpBo3R\nM45QeIbE81bpnGGhuRoT83A8EvGDcAVmWC6gix3QD/3EPYHyYsQjkTuBtpcE\n3WJAVXc53lLNGyVolhGbANsLdAq5vf+nixNcVdn+oWT916Pd0I6lyCsnwt1d\nQMZFWJlgFs6gKaH5f25f8oEVjOQo3EzyiLSkhzTM2IaXOvVdy7usMKObYYjM\nAwa915A0dAmXqLUIi7qaMx0ewtcapgjEZLg9HpuIeNVuAv/zlYbU9XdJhrPz\nsBmReM14bOEmCT1SSea740zTtYQwHLYdjvkYJoXj5mmwG+pSNHPAIL3NbdkW\nNFk//zgA1JhPctEZXOGUnodbAM6fa4JaEDbPl7GSG3XMkHbSn3ebtZHVj+gh\nsAF9ZSNVu11neD5Jtgt+kL1wA8VVBLASDK0aMZb9EVTNkcnbMs82/ZPmOQBP\nG2xJKKPe6Oai/IdbIC3HXvNZBJZAJnZ/prpnplFEbTP+IId+yYq4ft3cVAe1\nwPZ2TUxuZghk+ttWr7X7sBlAFJJ9KrOm5Ud6FMoy230ZVajO5nNa8LZe3gb3\nudAXQDBVhpYve81MC7VP0zmmUKisLuk61j1/pwrruWcfYuEtVkOmUV10t1CC\nGx/KfRkiiRPi6xIcQYNid/qiXMd+t0hBnUztp7QvLRe56cndR0ZfR3jIg/R8\nTMDa\r\n=7bHE\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"james@henry.sc","name":"jameshenry"},{"email":"nicholas@nczconsulting.com","name":"nzakas"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eslint-plugin-typescript_1.0.0-rc.0_1545509724176_0.6157580491879864"},"_hasShrinkwrap":false},"1.0.0-rc.1":{"name":"eslint-plugin-typescript","version":"1.0.0-rc.1","description":"TypeScript plugin for ESLint","keywords":["eslint","eslintplugin","eslint-plugin","typescript"],"repository":{"type":"git","url":"git+https://github.com/bradzacher/eslint-plugin-typescript.git"},"author":{"name":"Brad Zacher"},"license":"MIT","main":"lib/index.js","scripts":{"lint":"eslint lib/ tests/ tools/","lint:fix":"eslint lib/ tests/ tools/ --fix","docs":"eslint-docs","docs:check":"eslint-docs check","prettier":"prettier **/*.{md,yml,json}","format-no-write":"prettier-eslint lib/**/*.js tests/**/*.js tools/**/*.js --eslint-config-path=.eslintrc --eslint-ignore --prettier-ignore --eslint-path=node_modules/eslint --config=.prettierrc","format":"yarn format-no-write --write && yarn prettier --write","format-check":"yarn format-no-write --list-different && yarn prettier --list-different","test":"nyc mocha tests --recursive --reporter=dot","test:coverage":"nyc check-coverage --lines 95 --per-file","recommended:update":"node tools/update-recommended.js","pre-commit":"yarn check --verify-tree && yarn lint && yarn format-check && yarn test && yarn docs:check"},"dependencies":{"requireindex":"^1.2.0","typescript-eslint-parser":"21.0.2"},"devDependencies":{"eslint":"^5.9.0","nyc":"^13.1.0","eslint-config-eslint":"^5.0.1","eslint-config-prettier":"^3.3.0","eslint-docs":"^0.2.6","eslint-plugin-eslint-plugin":"^2.0.0","eslint-plugin-node":"^8.0.0","eslint-plugin-prettier":"^3.0.0","husky":"^1.2.0","lint-staged":"^8.1.0","mocha":"^5.2.0","prettier-eslint-cli":"^4.7.1","typescript":"~3.1.1"},"peerDependencies":{"eslint":">=4.13.1 < 6","typescript":"~3.1.1"},"nyc":{"include":["lib"]},"lint-staged":{"*.js":["yarn format","git add"]},"husky":{"hooks":{"pre-commit":"yarn pre-commit && lint-staged"}},"engines":{"node":">=6"},"readme":"# eslint-plugin-typescript\n\n[![NPM version](https://img.shields.io/npm/v/eslint-plugin-typescript.svg)](https://www.npmjs.com/package/eslint-plugin-typescript)\n[![NPM downloads](https://img.shields.io/npm/dm/eslint-plugin-typescript.svg)](https://www.npmjs.com/package/eslint-plugin-typescript)\n[![TravisCI](https://img.shields.io/travis/bradzacher/eslint-plugin-typescript.svg)](https://travis-ci.com/bradzacher/eslint-plugin-typescript)\n\nTypeScript support for ESLint. (This is still in the very early stages, so please be patient.)\n\n### The below readme is for the upcoming 1.0.0 release. [Please see this tag for the current NPM version (0.14.0)](https://github.com/bradzacher/eslint-plugin-typescript/tree/0.14.0)\n\n## Installation\n\nYou'll first need to install [ESLint](http://eslint.org):\n\n```shellsession\n$ npm i eslint --save-dev\n```\n\nNext, install `typescript` if you haven’t already:\n\n```shellsession\n$ npm i typescript@~3.1.1 --save-dev\n```\n\nLast, install `eslint-plugin-typescript`:\n\n```shellsession\n$ npm install eslint-plugin-typescript --save-dev\n```\n\n**Note:** If you installed ESLint globally (using the `-g` flag) then you must also install `eslint-plugin-typescript` globally.\n\n## Usage\n\nAdd `eslint-plugin-typescript/parser` to the `parser` field and `typescript` to the plugins section of your `.eslintrc` configuration file:\n\n```json\n{\n    \"parser\": \"eslint-plugin-typescript/parser\",\n    \"plugins\": [\"typescript\"]\n}\n```\n\nNote: The plugin provides its own version of the `typescript-eslint-parser` via `eslint-plugin-typescript/parser`.\nThis helps us guarantee 100% compatibility between the plugin and the parser.\n\nThen configure the rules you want to use under the rules section.\n\n```json\n{\n    \"parser\": \"eslint-plugin-typescript/parser\",\n    \"plugins\": [\"typescript\"],\n    \"rules\": {\n        \"typescript/rule-name\": \"error\"\n    }\n}\n```\n\nYou can also enable all the recommended rules at once. Add `plugin:typescript/recommended` in extends:\n\n```json\n{\n    \"extends\": [\"plugin:typescript/recommended\"]\n}\n```\n\n## Supported Rules\n\n<!-- Please run `npm run docs` to update this section -->\n<!-- begin rule list -->\n\n**Key**: :heavy_check_mark: = recommended, :wrench: = fixable\n\n<!-- prettier-ignore -->\n| Name | Description | :heavy_check_mark: | :wrench: |\n| ---- | ----------- | ------------------ | -------- |\n| [`typescript/adjacent-overload-signatures`](./docs/rules/adjacent-overload-signatures.md) | Require that member overloads be consecutive (`adjacent-overload-signatures` from TSLint) | :heavy_check_mark: |  |\n| [`typescript/array-type`](./docs/rules/array-type.md) | Requires using either `T[]` or `Array<T>` for arrays (`array-type` from TSLint) | :heavy_check_mark: | :wrench: |\n| [`typescript/ban-types`](./docs/rules/ban-types.md) | Enforces that types will not to be used (`ban-types` from TSLint) | :heavy_check_mark: | :wrench: |\n| [`typescript/camelcase`](./docs/rules/camelcase.md) | Enforce camelCase naming convention | :heavy_check_mark: |  |\n| [`typescript/class-name-casing`](./docs/rules/class-name-casing.md) | Require PascalCased class and interface names (`class-name` from TSLint) | :heavy_check_mark: |  |\n| [`typescript/explicit-function-return-type`](./docs/rules/explicit-function-return-type.md) | Require explicit return types on functions and class methods | :heavy_check_mark: |  |\n| [`typescript/explicit-member-accessibility`](./docs/rules/explicit-member-accessibility.md) | Require explicit accessibility modifiers on class properties and methods (`member-access` from TSLint) | :heavy_check_mark: |  |\n| [`typescript/generic-type-naming`](./docs/rules/generic-type-naming.md) | Enforces naming of generic type variables |  |  |\n| [`typescript/indent`](./docs/rules/indent.md) | Enforce consistent indentation (`indent` from TSLint) | :heavy_check_mark: | :wrench: |\n| [`typescript/interface-name-prefix`](./docs/rules/interface-name-prefix.md) | Require that interface names be prefixed with `I` (`interface-name` from TSLint) | :heavy_check_mark: |  |\n| [`typescript/member-delimiter-style`](./docs/rules/member-delimiter-style.md) | Require a specific member delimiter style for interfaces and type literals | :heavy_check_mark: | :wrench: |\n| [`typescript/member-naming`](./docs/rules/member-naming.md) | Enforces naming conventions for class members by visibility. |  |  |\n| [`typescript/member-ordering`](./docs/rules/member-ordering.md) | Require a consistent member declaration order (`member-ordering` from TSLint) |  |  |\n| [`typescript/no-angle-bracket-type-assertion`](./docs/rules/no-angle-bracket-type-assertion.md) | Enforces the use of `as Type` assertions instead of `<Type>` assertions (`no-angle-bracket-type-assertion` from TSLint) | :heavy_check_mark: |  |\n| [`typescript/no-array-constructor`](./docs/rules/no-array-constructor.md) | Disallow generic `Array` constructors | :heavy_check_mark: | :wrench: |\n| [`typescript/no-empty-interface`](./docs/rules/no-empty-interface.md) | Disallow the declaration of empty interfaces (`no-empty-interface` from TSLint) | :heavy_check_mark: |  |\n| [`typescript/no-explicit-any`](./docs/rules/no-explicit-any.md) | Disallow usage of the `any` type (`no-any` from TSLint) | :heavy_check_mark: |  |\n| [`typescript/no-extraneous-class`](./docs/rules/no-extraneous-class.md) | Forbids the use of classes as namespaces (`no-unnecessary-class` from TSLint) |  |  |\n| [`typescript/no-inferrable-types`](./docs/rules/no-inferrable-types.md) | Disallows explicit type declarations for variables or parameters initialized to a number, string, or boolean. (`no-inferrable-types` from TSLint) | :heavy_check_mark: | :wrench: |\n| [`typescript/no-misused-new`](./docs/rules/no-misused-new.md) | Enforce valid definition of `new` and `constructor`. (`no-misused-new` from TSLint) | :heavy_check_mark: |  |\n| [`typescript/no-namespace`](./docs/rules/no-namespace.md) | Disallow the use of custom TypeScript modules and namespaces (`no-namespace` from TSLint) | :heavy_check_mark: |  |\n| [`typescript/no-non-null-assertion`](./docs/rules/no-non-null-assertion.md) | Disallows non-null assertions using the `!` postfix operator (`no-non-null-assertion` from TSLint) | :heavy_check_mark: |  |\n| [`typescript/no-object-literal-type-assertion`](./docs/rules/no-object-literal-type-assertion.md) | Forbids an object literal to appear in a type assertion expression (`no-object-literal-type-assertion` from TSLint) | :heavy_check_mark: |  |\n| [`typescript/no-parameter-properties`](./docs/rules/no-parameter-properties.md) | Disallow the use of parameter properties in class constructors. (`no-parameter-properties` from TSLint) | :heavy_check_mark: |  |\n| [`typescript/no-this-alias`](./docs/rules/no-this-alias.md) | Disallow aliasing `this` (`no-this-assignment` from TSLint) |  |  |\n| [`typescript/no-triple-slash-reference`](./docs/rules/no-triple-slash-reference.md) | Disallow `/// <reference path=\"\" />` comments (`no-reference` from TSLint) | :heavy_check_mark: |  |\n| [`typescript/no-type-alias`](./docs/rules/no-type-alias.md) | Disallow the use of type aliases (`interface-over-type-literal` from TSLint) |  |  |\n| [`typescript/no-unused-vars`](./docs/rules/no-unused-vars.md) | Disallow unused variables (`no-unused-variable` from TSLint) | :heavy_check_mark: |  |\n| [`typescript/no-use-before-define`](./docs/rules/no-use-before-define.md) | Disallow the use of variables before they are defined | :heavy_check_mark: |  |\n| [`typescript/no-var-requires`](./docs/rules/no-var-requires.md) | Disallows the use of require statements except in import statements (`no-var-requires` from TSLint) | :heavy_check_mark: |  |\n| [`typescript/prefer-interface`](./docs/rules/prefer-interface.md) | Prefer an interface declaration over a type literal (type T = { ... }) (`interface-over-type-literal` from TSLint) | :heavy_check_mark: | :wrench: |\n| [`typescript/prefer-namespace-keyword`](./docs/rules/prefer-namespace-keyword.md) | Require the use of the `namespace` keyword instead of the `module` keyword to declare custom TypeScript modules. (`no-internal-module` from TSLint) | :heavy_check_mark: | :wrench: |\n| [`typescript/type-annotation-spacing`](./docs/rules/type-annotation-spacing.md) | Require consistent spacing around type annotations (`typedef-whitespace` from TSLint) | :heavy_check_mark: | :wrench: |\n\n<!-- end rule list -->\n","readmeFilename":"README.md","gitHead":"867df2ed6fb1d8a1de1771710a9b92ee1f63977b","bugs":{"url":"https://github.com/bradzacher/eslint-plugin-typescript/issues"},"homepage":"https://github.com/bradzacher/eslint-plugin-typescript#readme","_id":"eslint-plugin-typescript@1.0.0-rc.1","_npmVersion":"6.2.0","_nodeVersion":"10.9.0","_npmUser":{"name":"bradzacher","email":"brad.zacher@gmail.com"},"dist":{"integrity":"sha512-K45mNfd6Ru3ItHyLpwkQgjCgTMLcLvmsJmH+81yKxqFZRn0BQ6doM9TAovNXvMn2ZryXmBbXWeGhYftU2exh8w==","shasum":"9b4681d75b1952ef41d9cfd7c506ac386a768878","tarball":"https://registry.npmjs.org/eslint-plugin-typescript/-/eslint-plugin-typescript-1.0.0-rc.1.tgz","fileCount":73,"unpackedSize":263731,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcLOthCRA9TVsSAnZWagAAi54P/j+c1qn5Pz1CcKXcoRbP\n99zaja61WZhiJRUqwKKtVpa7oUeup2AD0P9VtndTClwUz/yWBgkgTY7fK3D3\ndFEqxI43XQ2mjv9AqWMjP+j9TPjy43szym4QeNPgCWVFEDDV0HKdeqe2Rgho\nWcuI9K2OyCe0dMJlVARSyEMpQjgCJCxSe0Ty9Kkhq+UXMrQX1VruwKGcMKSt\neootjdl4/ph5e9JSLQBlglEGWtRkAn2z6QMeQ6FYVSFQWgi/CX8P2ijx8btK\npsVs5LjxzcM39+x1LpAnZv0w0+WgmdPVy21gyOF2glxitKfJQf8m0aoeFLRa\nZAp1s30EqCTn508Ve35Q9WqWjQHMh3QEX5gsADZeNx86m+ecEiivdFyvN1ry\n7qOxcR/Z+SOy9ct96P8YwR6D0q9y/XrdThH34/+0wBD8k4rqM9yWx7bGaGnT\nWm8fFUI4R2fCQyRZ/3hCBH4rZAVkzwl8ftXNB1Kbl1p16jDbO+nemjyZ1CZY\nGXZHoHRrDPee4MK7ffbkICzRFJmBhazZlk2F1BF53ZdmS0PnhM6otA4KxPT+\na7SD3gpR8REVWs9h95O2TV7AI8ChZhUF8ED9DvurSN+VLCrz0D3dMr1c5vZp\n/TmCE4pu5yp0MqkWcXLrIhNN9yOJzLqvXFUFSEzARugzhPyjP9+vVRNAPrHu\nryB0\r\n=2zp6\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"brad.zacher@gmail.com","name":"bradzacher"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eslint-plugin-typescript_1.0.0-rc.1_1546447712216_0.2965901709619043"},"_hasShrinkwrap":false},"1.0.0-rc.2":{"name":"eslint-plugin-typescript","version":"1.0.0-rc.2","description":"TypeScript plugin for ESLint","keywords":["eslint","eslintplugin","eslint-plugin","typescript"],"repository":{"type":"git","url":"git+https://github.com/bradzacher/eslint-plugin-typescript.git"},"author":{"name":"Brad Zacher"},"license":"MIT","main":"lib/index.js","scripts":{"lint":"eslint lib/ tests/ tools/","lint:fix":"eslint lib/ tests/ tools/ --fix","docs":"eslint-docs","docs:check":"eslint-docs check","prettier":"prettier **/*.{md,yml,json}","format-no-write":"prettier-eslint lib/**/*.js tests/**/*.js tools/**/*.js --eslint-config-path=.eslintrc --eslint-ignore --prettier-ignore --eslint-path=node_modules/eslint --config=.prettierrc","format":"yarn format-no-write --write && yarn prettier --write","format-check":"yarn format-no-write --list-different && yarn prettier --list-different","test":"nyc mocha tests --recursive --reporter=dot","test:coverage":"nyc check-coverage --lines 95 --per-file","recommended:update":"node tools/update-recommended.js","pre-commit":"yarn check --verify-tree && yarn lint && yarn format-check && yarn test && yarn docs:check"},"dependencies":{"requireindex":"^1.2.0","typescript-eslint-parser":"21.0.2"},"devDependencies":{"eslint":"^5.9.0","nyc":"^13.1.0","eslint-config-eslint":"^5.0.1","eslint-config-prettier":"^3.3.0","eslint-docs":"^0.2.6","eslint-plugin-eslint-plugin":"^2.0.0","eslint-plugin-node":"^8.0.0","eslint-plugin-prettier":"^3.0.0","husky":"^1.2.0","lint-staged":"^8.1.0","mocha":"^5.2.0","prettier-eslint-cli":"^4.7.1","typescript":"~3.1.1"},"peerDependencies":{"eslint":">=4.13.1 < 6","typescript":"~3.1.1"},"nyc":{"include":["lib"]},"lint-staged":{"*.js":["yarn format","git add"]},"husky":{"hooks":{"pre-commit":"yarn pre-commit && lint-staged"}},"engines":{"node":">=6"},"readme":"# eslint-plugin-typescript\n\n[![NPM version](https://img.shields.io/npm/v/eslint-plugin-typescript.svg)](https://www.npmjs.com/package/eslint-plugin-typescript)\n[![NPM downloads](https://img.shields.io/npm/dm/eslint-plugin-typescript.svg)](https://www.npmjs.com/package/eslint-plugin-typescript)\n[![TravisCI](https://img.shields.io/travis/bradzacher/eslint-plugin-typescript.svg)](https://travis-ci.com/bradzacher/eslint-plugin-typescript)\n\nTypeScript support for ESLint. (This is still in the very early stages, so please be patient.)\n\n### The below readme is for the upcoming 1.0.0 release. [Please see this tag for the current NPM version (0.14.0)](https://github.com/bradzacher/eslint-plugin-typescript/tree/0.14.0)\n\n## Installation\n\nYou'll first need to install [ESLint](http://eslint.org):\n\n```shellsession\n$ npm i eslint --save-dev\n```\n\nNext, install `typescript` if you haven’t already:\n\n```shellsession\n$ npm i typescript@~3.1.1 --save-dev\n```\n\nLast, install `eslint-plugin-typescript`:\n\n```shellsession\n$ npm install eslint-plugin-typescript --save-dev\n```\n\n**Note:** If you installed ESLint globally (using the `-g` flag) then you must also install `eslint-plugin-typescript` globally.\n\n## Usage\n\nAdd `eslint-plugin-typescript/parser` to the `parser` field and `typescript` to the plugins section of your `.eslintrc` configuration file:\n\n```json\n{\n    \"parser\": \"eslint-plugin-typescript/parser\",\n    \"plugins\": [\"typescript\"]\n}\n```\n\nNote: The plugin provides its own version of the `typescript-eslint-parser` via `eslint-plugin-typescript/parser`.\nThis helps us guarantee 100% compatibility between the plugin and the parser.\n\nThen configure the rules you want to use under the rules section.\n\n```json\n{\n    \"parser\": \"eslint-plugin-typescript/parser\",\n    \"plugins\": [\"typescript\"],\n    \"rules\": {\n        \"typescript/rule-name\": \"error\"\n    }\n}\n```\n\nYou can also enable all the recommended rules at once. Add `plugin:typescript/recommended` in extends:\n\n```json\n{\n    \"extends\": [\"plugin:typescript/recommended\"]\n}\n```\n\n## Supported Rules\n\n<!-- Please run `npm run docs` to update this section -->\n<!-- begin rule list -->\n\n**Key**: :heavy_check_mark: = recommended, :wrench: = fixable\n\n<!-- prettier-ignore -->\n| Name | Description | :heavy_check_mark: | :wrench: |\n| ---- | ----------- | ------------------ | -------- |\n| [`typescript/adjacent-overload-signatures`](./docs/rules/adjacent-overload-signatures.md) | Require that member overloads be consecutive (`adjacent-overload-signatures` from TSLint) | :heavy_check_mark: |  |\n| [`typescript/array-type`](./docs/rules/array-type.md) | Requires using either `T[]` or `Array<T>` for arrays (`array-type` from TSLint) | :heavy_check_mark: | :wrench: |\n| [`typescript/ban-types`](./docs/rules/ban-types.md) | Enforces that types will not to be used (`ban-types` from TSLint) | :heavy_check_mark: | :wrench: |\n| [`typescript/camelcase`](./docs/rules/camelcase.md) | Enforce camelCase naming convention | :heavy_check_mark: |  |\n| [`typescript/class-name-casing`](./docs/rules/class-name-casing.md) | Require PascalCased class and interface names (`class-name` from TSLint) | :heavy_check_mark: |  |\n| [`typescript/explicit-function-return-type`](./docs/rules/explicit-function-return-type.md) | Require explicit return types on functions and class methods | :heavy_check_mark: |  |\n| [`typescript/explicit-member-accessibility`](./docs/rules/explicit-member-accessibility.md) | Require explicit accessibility modifiers on class properties and methods (`member-access` from TSLint) | :heavy_check_mark: |  |\n| [`typescript/generic-type-naming`](./docs/rules/generic-type-naming.md) | Enforces naming of generic type variables |  |  |\n| [`typescript/indent`](./docs/rules/indent.md) | Enforce consistent indentation (`indent` from TSLint) | :heavy_check_mark: | :wrench: |\n| [`typescript/interface-name-prefix`](./docs/rules/interface-name-prefix.md) | Require that interface names be prefixed with `I` (`interface-name` from TSLint) | :heavy_check_mark: |  |\n| [`typescript/member-delimiter-style`](./docs/rules/member-delimiter-style.md) | Require a specific member delimiter style for interfaces and type literals | :heavy_check_mark: | :wrench: |\n| [`typescript/member-naming`](./docs/rules/member-naming.md) | Enforces naming conventions for class members by visibility. |  |  |\n| [`typescript/member-ordering`](./docs/rules/member-ordering.md) | Require a consistent member declaration order (`member-ordering` from TSLint) |  |  |\n| [`typescript/no-angle-bracket-type-assertion`](./docs/rules/no-angle-bracket-type-assertion.md) | Enforces the use of `as Type` assertions instead of `<Type>` assertions (`no-angle-bracket-type-assertion` from TSLint) | :heavy_check_mark: |  |\n| [`typescript/no-array-constructor`](./docs/rules/no-array-constructor.md) | Disallow generic `Array` constructors | :heavy_check_mark: | :wrench: |\n| [`typescript/no-empty-interface`](./docs/rules/no-empty-interface.md) | Disallow the declaration of empty interfaces (`no-empty-interface` from TSLint) | :heavy_check_mark: |  |\n| [`typescript/no-explicit-any`](./docs/rules/no-explicit-any.md) | Disallow usage of the `any` type (`no-any` from TSLint) | :heavy_check_mark: |  |\n| [`typescript/no-extraneous-class`](./docs/rules/no-extraneous-class.md) | Forbids the use of classes as namespaces (`no-unnecessary-class` from TSLint) |  |  |\n| [`typescript/no-inferrable-types`](./docs/rules/no-inferrable-types.md) | Disallows explicit type declarations for variables or parameters initialized to a number, string, or boolean. (`no-inferrable-types` from TSLint) | :heavy_check_mark: | :wrench: |\n| [`typescript/no-misused-new`](./docs/rules/no-misused-new.md) | Enforce valid definition of `new` and `constructor`. (`no-misused-new` from TSLint) | :heavy_check_mark: |  |\n| [`typescript/no-namespace`](./docs/rules/no-namespace.md) | Disallow the use of custom TypeScript modules and namespaces (`no-namespace` from TSLint) | :heavy_check_mark: |  |\n| [`typescript/no-non-null-assertion`](./docs/rules/no-non-null-assertion.md) | Disallows non-null assertions using the `!` postfix operator (`no-non-null-assertion` from TSLint) | :heavy_check_mark: |  |\n| [`typescript/no-object-literal-type-assertion`](./docs/rules/no-object-literal-type-assertion.md) | Forbids an object literal to appear in a type assertion expression (`no-object-literal-type-assertion` from TSLint) | :heavy_check_mark: |  |\n| [`typescript/no-parameter-properties`](./docs/rules/no-parameter-properties.md) | Disallow the use of parameter properties in class constructors. (`no-parameter-properties` from TSLint) | :heavy_check_mark: |  |\n| [`typescript/no-this-alias`](./docs/rules/no-this-alias.md) | Disallow aliasing `this` (`no-this-assignment` from TSLint) |  |  |\n| [`typescript/no-triple-slash-reference`](./docs/rules/no-triple-slash-reference.md) | Disallow `/// <reference path=\"\" />` comments (`no-reference` from TSLint) | :heavy_check_mark: |  |\n| [`typescript/no-type-alias`](./docs/rules/no-type-alias.md) | Disallow the use of type aliases (`interface-over-type-literal` from TSLint) |  |  |\n| [`typescript/no-unused-vars`](./docs/rules/no-unused-vars.md) | Disallow unused variables (`no-unused-variable` from TSLint) | :heavy_check_mark: |  |\n| [`typescript/no-use-before-define`](./docs/rules/no-use-before-define.md) | Disallow the use of variables before they are defined | :heavy_check_mark: |  |\n| [`typescript/no-var-requires`](./docs/rules/no-var-requires.md) | Disallows the use of require statements except in import statements (`no-var-requires` from TSLint) | :heavy_check_mark: |  |\n| [`typescript/prefer-interface`](./docs/rules/prefer-interface.md) | Prefer an interface declaration over a type literal (type T = { ... }) (`interface-over-type-literal` from TSLint) | :heavy_check_mark: | :wrench: |\n| [`typescript/prefer-namespace-keyword`](./docs/rules/prefer-namespace-keyword.md) | Require the use of the `namespace` keyword instead of the `module` keyword to declare custom TypeScript modules. (`no-internal-module` from TSLint) | :heavy_check_mark: | :wrench: |\n| [`typescript/type-annotation-spacing`](./docs/rules/type-annotation-spacing.md) | Require consistent spacing around type annotations (`typedef-whitespace` from TSLint) | :heavy_check_mark: | :wrench: |\n\n<!-- end rule list -->\n","readmeFilename":"README.md","gitHead":"4245290cb2b700c21a9c38adb318d6b12b8401bb","bugs":{"url":"https://github.com/bradzacher/eslint-plugin-typescript/issues"},"homepage":"https://github.com/bradzacher/eslint-plugin-typescript#readme","_id":"eslint-plugin-typescript@1.0.0-rc.2","_npmVersion":"6.2.0","_nodeVersion":"10.9.0","_npmUser":{"name":"bradzacher","email":"brad.zacher@gmail.com"},"dist":{"integrity":"sha512-q/F2EOSPDeGgIwqZ5MgQmOpbhQjkuW7ko3M0fsXJ/2DUarG+ASfE9L1xzyfDtCMV3nFXd5EtypEnNawInXmpLg==","shasum":"f6262e22627bdf7e1876716c0825353fca24e642","tarball":"https://registry.npmjs.org/eslint-plugin-typescript/-/eslint-plugin-typescript-1.0.0-rc.2.tgz","fileCount":73,"unpackedSize":269268,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcNUjqCRA9TVsSAnZWagAAtwoP/RNiv5dbZmk6LHC4Ns7e\nJXZGWe1j05uj0K93cQq3oIVsAd31NsCo2yK/KKXTgl2OAkg1Jp2yGaMWNnFv\nLEoC752zF7jb5JTsHyoVEjf5nTUT7znObC/tWUakB0ku6ZYxkotmhpWE1jVl\ndTYDaAArXApgNJfT1XZgIs9llp9zp3GpmNiEusPrPTHl3Am2plFEpFNBAeJ9\nMkSsUO4u0tzaVyWbD9W6IAhU3ZQHynhoETJKVTyKYqgR6KtBwfwnKGlB71IE\nt93rqaWUW7I9weXic65N3TQIczoYsv7c/xPMj9CFbsb4DyrrumMAVyVO2ATA\ne7x9f1/wU9KmcM0BGysfoovpGBr2TWtCQdWd/LbEJ/TJ9iK5pIZFsFUmCUHY\nqqQxidOC0zV+CHmZaI95DDLF0Q8jL/7qOGdRqihLTjvDm4gH5CkHTbnHaZuH\nYIazBd0RLGdYZETZSegmKyYz66XJdh3HwpllrvMLER7SLhyYAg6GTHVbwsal\ntHN9rfi8ZxUG/g2LGEH+uy4ISHEESXg3PzXnVIInYY4PQ6LK07m+PqlwsXVe\nh1vZ5lR1fjEGVebANZmae5BXSVctEx+Ehb7cNfgUNeSShvoZxZ+sLNbdn4s8\ntfAxYvsj9wu53QepTzPMzCAGmJRjqAsUpwq89/0LQwZoWqgG8JpQD6hLviFb\niQoP\r\n=WxHm\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"brad.zacher@gmail.com","name":"bradzacher"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eslint-plugin-typescript_1.0.0-rc.2_1546995945509_0.9172448906042168"},"_hasShrinkwrap":false},"1.0.0-rc.3":{"name":"eslint-plugin-typescript","version":"1.0.0-rc.3","description":"TypeScript plugin for ESLint","keywords":["eslint","eslintplugin","eslint-plugin","typescript"],"repository":{"type":"git","url":"git+https://github.com/bradzacher/eslint-plugin-typescript.git"},"author":{"name":"Brad Zacher"},"license":"MIT","main":"lib/index.js","scripts":{"lint":"eslint lib/ tests/ tools/","lint:fix":"eslint lib/ tests/ tools/ --fix","docs":"eslint-docs","docs:check":"eslint-docs check","prettier":"prettier **/*.{md,yml,json}","format-no-write":"prettier-eslint lib/**/*.js tests/**/*.js tools/**/*.js --eslint-config-path=.eslintrc --eslint-ignore --prettier-ignore --eslint-path=node_modules/eslint --config=.prettierrc","format":"yarn format-no-write --write && yarn prettier --write","format-check":"yarn format-no-write --list-different && yarn prettier --list-different","test":"nyc mocha tests --recursive --reporter=dot","test:coverage":"nyc check-coverage --lines 95 --per-file","recommended:update":"node tools/update-recommended.js","pre-commit":"yarn check --verify-tree && yarn lint && yarn format-check && yarn test && yarn docs:check"},"dependencies":{"requireindex":"^1.2.0","typescript-eslint-parser":"21.0.2"},"devDependencies":{"eslint":"^5.9.0","nyc":"^13.1.0","eslint-config-eslint":"^5.0.1","eslint-config-prettier":"^3.3.0","eslint-docs":"^0.2.6","eslint-plugin-eslint-plugin":"^2.0.0","eslint-plugin-node":"^8.0.0","eslint-plugin-prettier":"^3.0.0","husky":"^1.2.0","lint-staged":"^8.1.0","mocha":"^5.2.0","prettier-eslint-cli":"^4.7.1","typescript":"~3.1.1"},"peerDependencies":{"eslint":">=4.13.1 < 6","typescript":"~3.1.1"},"nyc":{"include":["lib"]},"lint-staged":{"*.js":["yarn format","git add"]},"husky":{"hooks":{"pre-commit":"yarn pre-commit && lint-staged"}},"engines":{"node":">=6"},"readme":"# eslint-plugin-typescript\n\n[![NPM version](https://img.shields.io/npm/v/eslint-plugin-typescript.svg)](https://www.npmjs.com/package/eslint-plugin-typescript)\n[![NPM downloads](https://img.shields.io/npm/dm/eslint-plugin-typescript.svg)](https://www.npmjs.com/package/eslint-plugin-typescript)\n[![TravisCI](https://img.shields.io/travis/bradzacher/eslint-plugin-typescript.svg)](https://travis-ci.com/bradzacher/eslint-plugin-typescript)\n\nTypeScript support for ESLint. (This is still in the very early stages, so please be patient.)\n\n### The below readme is for the upcoming 1.0.0 release. [Please see this tag for the current NPM version (0.14.0)](https://github.com/bradzacher/eslint-plugin-typescript/tree/0.14.0)\n\n## Installation\n\nYou'll first need to install [ESLint](http://eslint.org):\n\n```shellsession\n$ npm i eslint --save-dev\n```\n\nNext, install `typescript` if you haven’t already:\n\n```shellsession\n$ npm i typescript@~3.1.1 --save-dev\n```\n\nLast, install `eslint-plugin-typescript`:\n\n```shellsession\n$ npm install eslint-plugin-typescript --save-dev\n```\n\n**Note:** If you installed ESLint globally (using the `-g` flag) then you must also install `eslint-plugin-typescript` globally.\n\n## Usage\n\nAdd `eslint-plugin-typescript/parser` to the `parser` field and `typescript` to the plugins section of your `.eslintrc` configuration file:\n\n```json\n{\n    \"parser\": \"eslint-plugin-typescript/parser\",\n    \"plugins\": [\"typescript\"]\n}\n```\n\nNote: The plugin provides its own version of the `typescript-eslint-parser` via `eslint-plugin-typescript/parser`.\nThis helps us guarantee 100% compatibility between the plugin and the parser.\n\nThen configure the rules you want to use under the rules section.\n\n```json\n{\n    \"parser\": \"eslint-plugin-typescript/parser\",\n    \"plugins\": [\"typescript\"],\n    \"rules\": {\n        \"typescript/rule-name\": \"error\"\n    }\n}\n```\n\nYou can also enable all the recommended rules at once. Add `plugin:typescript/recommended` in extends:\n\n```json\n{\n    \"extends\": [\"plugin:typescript/recommended\"]\n}\n```\n\n## Supported Rules\n\n<!-- Please run `npm run docs` to update this section -->\n<!-- begin rule list -->\n\n**Key**: :heavy_check_mark: = recommended, :wrench: = fixable\n\n<!-- prettier-ignore -->\n| Name | Description | :heavy_check_mark: | :wrench: |\n| ---- | ----------- | ------------------ | -------- |\n| [`typescript/adjacent-overload-signatures`](./docs/rules/adjacent-overload-signatures.md) | Require that member overloads be consecutive (`adjacent-overload-signatures` from TSLint) | :heavy_check_mark: |  |\n| [`typescript/array-type`](./docs/rules/array-type.md) | Requires using either `T[]` or `Array<T>` for arrays (`array-type` from TSLint) | :heavy_check_mark: | :wrench: |\n| [`typescript/ban-types`](./docs/rules/ban-types.md) | Enforces that types will not to be used (`ban-types` from TSLint) | :heavy_check_mark: | :wrench: |\n| [`typescript/camelcase`](./docs/rules/camelcase.md) | Enforce camelCase naming convention | :heavy_check_mark: |  |\n| [`typescript/class-name-casing`](./docs/rules/class-name-casing.md) | Require PascalCased class and interface names (`class-name` from TSLint) | :heavy_check_mark: |  |\n| [`typescript/explicit-function-return-type`](./docs/rules/explicit-function-return-type.md) | Require explicit return types on functions and class methods | :heavy_check_mark: |  |\n| [`typescript/explicit-member-accessibility`](./docs/rules/explicit-member-accessibility.md) | Require explicit accessibility modifiers on class properties and methods (`member-access` from TSLint) | :heavy_check_mark: |  |\n| [`typescript/generic-type-naming`](./docs/rules/generic-type-naming.md) | Enforces naming of generic type variables |  |  |\n| [`typescript/indent`](./docs/rules/indent.md) | Enforce consistent indentation (`indent` from TSLint) | :heavy_check_mark: | :wrench: |\n| [`typescript/interface-name-prefix`](./docs/rules/interface-name-prefix.md) | Require that interface names be prefixed with `I` (`interface-name` from TSLint) | :heavy_check_mark: |  |\n| [`typescript/member-delimiter-style`](./docs/rules/member-delimiter-style.md) | Require a specific member delimiter style for interfaces and type literals | :heavy_check_mark: | :wrench: |\n| [`typescript/member-naming`](./docs/rules/member-naming.md) | Enforces naming conventions for class members by visibility. |  |  |\n| [`typescript/member-ordering`](./docs/rules/member-ordering.md) | Require a consistent member declaration order (`member-ordering` from TSLint) |  |  |\n| [`typescript/no-angle-bracket-type-assertion`](./docs/rules/no-angle-bracket-type-assertion.md) | Enforces the use of `as Type` assertions instead of `<Type>` assertions (`no-angle-bracket-type-assertion` from TSLint) | :heavy_check_mark: |  |\n| [`typescript/no-array-constructor`](./docs/rules/no-array-constructor.md) | Disallow generic `Array` constructors | :heavy_check_mark: | :wrench: |\n| [`typescript/no-empty-interface`](./docs/rules/no-empty-interface.md) | Disallow the declaration of empty interfaces (`no-empty-interface` from TSLint) | :heavy_check_mark: |  |\n| [`typescript/no-explicit-any`](./docs/rules/no-explicit-any.md) | Disallow usage of the `any` type (`no-any` from TSLint) | :heavy_check_mark: |  |\n| [`typescript/no-extraneous-class`](./docs/rules/no-extraneous-class.md) | Forbids the use of classes as namespaces (`no-unnecessary-class` from TSLint) |  |  |\n| [`typescript/no-inferrable-types`](./docs/rules/no-inferrable-types.md) | Disallows explicit type declarations for variables or parameters initialized to a number, string, or boolean. (`no-inferrable-types` from TSLint) | :heavy_check_mark: | :wrench: |\n| [`typescript/no-misused-new`](./docs/rules/no-misused-new.md) | Enforce valid definition of `new` and `constructor`. (`no-misused-new` from TSLint) | :heavy_check_mark: |  |\n| [`typescript/no-namespace`](./docs/rules/no-namespace.md) | Disallow the use of custom TypeScript modules and namespaces (`no-namespace` from TSLint) | :heavy_check_mark: |  |\n| [`typescript/no-non-null-assertion`](./docs/rules/no-non-null-assertion.md) | Disallows non-null assertions using the `!` postfix operator (`no-non-null-assertion` from TSLint) | :heavy_check_mark: |  |\n| [`typescript/no-object-literal-type-assertion`](./docs/rules/no-object-literal-type-assertion.md) | Forbids an object literal to appear in a type assertion expression (`no-object-literal-type-assertion` from TSLint) | :heavy_check_mark: |  |\n| [`typescript/no-parameter-properties`](./docs/rules/no-parameter-properties.md) | Disallow the use of parameter properties in class constructors. (`no-parameter-properties` from TSLint) | :heavy_check_mark: |  |\n| [`typescript/no-this-alias`](./docs/rules/no-this-alias.md) | Disallow aliasing `this` (`no-this-assignment` from TSLint) |  |  |\n| [`typescript/no-triple-slash-reference`](./docs/rules/no-triple-slash-reference.md) | Disallow `/// <reference path=\"\" />` comments (`no-reference` from TSLint) | :heavy_check_mark: |  |\n| [`typescript/no-type-alias`](./docs/rules/no-type-alias.md) | Disallow the use of type aliases (`interface-over-type-literal` from TSLint) |  |  |\n| [`typescript/no-unused-vars`](./docs/rules/no-unused-vars.md) | Disallow unused variables (`no-unused-variable` from TSLint) | :heavy_check_mark: |  |\n| [`typescript/no-use-before-define`](./docs/rules/no-use-before-define.md) | Disallow the use of variables before they are defined | :heavy_check_mark: |  |\n| [`typescript/no-var-requires`](./docs/rules/no-var-requires.md) | Disallows the use of require statements except in import statements (`no-var-requires` from TSLint) | :heavy_check_mark: |  |\n| [`typescript/prefer-interface`](./docs/rules/prefer-interface.md) | Prefer an interface declaration over a type literal (type T = { ... }) (`interface-over-type-literal` from TSLint) | :heavy_check_mark: | :wrench: |\n| [`typescript/prefer-namespace-keyword`](./docs/rules/prefer-namespace-keyword.md) | Require the use of the `namespace` keyword instead of the `module` keyword to declare custom TypeScript modules. (`no-internal-module` from TSLint) | :heavy_check_mark: | :wrench: |\n| [`typescript/type-annotation-spacing`](./docs/rules/type-annotation-spacing.md) | Require consistent spacing around type annotations (`typedef-whitespace` from TSLint) | :heavy_check_mark: | :wrench: |\n\n<!-- end rule list -->\n","readmeFilename":"README.md","gitHead":"162fddc10d6578805c6dc6b838ebcdbb7a4b336b","bugs":{"url":"https://github.com/bradzacher/eslint-plugin-typescript/issues"},"homepage":"https://github.com/bradzacher/eslint-plugin-typescript#readme","_id":"eslint-plugin-typescript@1.0.0-rc.3","_npmVersion":"6.2.0","_nodeVersion":"10.9.0","_npmUser":{"name":"bradzacher","email":"brad.zacher@gmail.com"},"dist":{"integrity":"sha512-urXH7sKqRkFLcDj6dP3tvQALfWIRGn8J8Kg9dYSoavXvy62FxfUv6JgjDAHQZudi9fSRQpEZA/LqdJXDOwKHPA==","shasum":"aa5359248dc6172ee261bc6574b5b540573e9b67","tarball":"https://registry.npmjs.org/eslint-plugin-typescript/-/eslint-plugin-typescript-1.0.0-rc.3.tgz","fileCount":73,"unpackedSize":269227,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcPnFXCRA9TVsSAnZWagAAS3MP/Rz+XvWXeq+fdZfYyned\nJayLsmANPyxkO2U+M8NMANVm/AVrUyXtwpiZ+s2Ahm6pjAHt5BACtJqZXbCg\nOLuZf/3D7nQuzkXaouTo08W4FVPIxR16l6H5asYpVlx2GSREqZ3d42LwBgZt\n16ZajGQDgyMLR/a3IeMtmnmzA83CAbxq+WZsjCnegRs1f2L/MlGCqc4WoDfE\nHXVXsoafJekrzm3+0bJg5bSDQ1FjTEyo6DOHgcqI1Si/5NsE2b4ygs5mpwV5\nmyTCgMbdImdvRY0QI+cz/g92jLEKLexKB1+6NnSWJIAhzTQh9i9UvYWh9zoD\n22yIAwA7uYV1+MIH1mnO5tNdzF4z+AnOLs5/T8lIKSRyhLtEbLGI7WMMCiUX\niK/OFcCofAnkKa6tOwJTwhMYY/KnyjnmXrqkfUfcnE7CZSRdq9oaDT2qhlhz\nUCH3Ft2uc1glYeYlDgv/ntdSVSuQdlck7PkPo9qFaF7P83PM+sPrgeKi5ZNB\nqNKFosAuKhvSFV+6o1xnNmG0XKgbHnOQVNf6gpUXuQRepsC6gbqRzEeD/P3V\ncK96TsZK6HaoXQMqQodxPzs6I3kuzTWqWLwnu2bDDRWnr8nVEuoTeNHt4jhK\n/SOVg8wDGLD20qjtIzDerjZTC5jxroaAzS7xWFWU0ceypB/p66FEw80tJKNP\nYE83\r\n=ztlW\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"brad.zacher@gmail.com","name":"bradzacher"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eslint-plugin-typescript_1.0.0-rc.3_1547596118869_0.1367340643784325"},"_hasShrinkwrap":false}},"readme":"","maintainers":[{"email":"brad.zacher@gmail.com","name":"bradzacher"}],"time":{"modified":"2019-01-23T00:11:37.074Z","created":"2016-08-22T19:06:35.270Z","0.0.1":"2016-08-22T19:06:35.270Z","0.1.0":"2016-10-03T22:30:16.963Z","0.3.0":"2017-07-11T11:29:13.793Z","0.4.0":"2017-08-09T19:52:22.415Z","0.5.0":"2017-08-12T13:41:30.349Z","0.6.0":"2017-08-22T11:25:08.278Z","0.7.0":"2017-08-26T20:07:32.739Z","0.8.0":"2017-10-05T22:02:04.930Z","0.8.1":"2017-11-23T17:35:23.758Z","0.9.0":"2018-02-22T17:52:22.176Z","0.10.0":"2018-03-08T22:32:00.402Z","0.11.0":"2018-03-27T17:23:41.191Z","0.12.0":"2018-04-26T16:41:50.315Z","0.13.0":"2018-11-01T00:45:18.913Z","0.14.0-rc.1":"2018-11-26T02:27:21.183Z","0.14.0":"2018-11-26T02:59:25.280Z","1.0.0-rc.0":"2018-12-22T20:15:24.346Z","1.0.0-rc.1":"2019-01-02T16:48:32.415Z","1.0.0-rc.2":"2019-01-09T01:05:45.723Z","1.0.0-rc.3":"2019-01-15T23:48:39.156Z"},"homepage":"https://github.com/nzakas/eslint-plugin-typescript#readme","keywords":["eslint","eslintplugin","eslint-plugin"],"repository":{"type":"git","url":"git+https://github.com/nzakas/eslint-plugin-typescript.git"},"author":{"name":"Nicholas C. Zakas"},"bugs":{"url":"https://github.com/nzakas/eslint-plugin-typescript/issues"},"license":"MIT","readmeFilename":"","users":{"recuencojones":true,"xueboren":true}}