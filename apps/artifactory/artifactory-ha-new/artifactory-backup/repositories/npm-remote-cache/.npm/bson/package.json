{"_id":"bson","_rev":"418-a6e8b5767ea532844779271641076a04","name":"bson","description":"A bson parser for node.js and the browser","dist-tags":{"latest":"4.0.4","stable":"1.1.4"},"versions":{"0.0.1":{"name":"bson","version":"0.0.1","description":"BSON library for node","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"contributors":[{"name":"Yuriy Bogdanov","email":"chinsay@gmail.com"}],"main":"bson.node","engines":{"node":">=0.4.0"},"scripts":{"install":"node-waf configure clean build"},"dependencies":{},"devDependencies":{},"_id":"bson@0.0.1","_engineSupported":true,"_npmVersion":"1.0.1rc7","_nodeVersion":"v0.4.5","_defaultsLoaded":true,"dist":{"shasum":"6acbeb2b8538032ddc4f15e79b49dd51a44a3d07","tarball":"https://registry.npmjs.org/bson/-/bson-0.0.1.tgz"},"directories":{}},"0.0.2":{"name":"bson","version":"0.0.2","repository":{"type":"git","url":"git://github.com/0ctave/node-bson.git"},"description":"BSON library for node","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"contributors":[{"name":"Yuriy Bogdanov","email":"chinsay@gmail.com"}],"scripts":{"install":"make all"},"main":"./bson.node","engines":{"node":">=0.4.0"},"dependencies":{},"devDependencies":{},"_id":"bson@0.0.2","_engineSupported":true,"_npmVersion":"1.0.1rc7","_nodeVersion":"v0.4.5","_defaultsLoaded":true,"dist":{"shasum":"e49c84d6521ca63b45cfdaf4c892517be932b6c2","tarball":"https://registry.npmjs.org/bson/-/bson-0.0.2.tgz"},"directories":{}},"0.0.3":{"name":"bson","version":"0.0.3","repository":{"type":"git","url":"git://github.com/0ctave/node-bson.git"},"description":"BSON library for node","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"contributors":[{"name":"Yuri Bogdanov","email":"chinsay@gmail.com"}],"scripts":{"install":"make all"},"main":"./bson.node","engines":{"node":">=0.4.0"},"dependencies":{},"devDependencies":{},"_id":"bson@0.0.3","_engineSupported":true,"_npmVersion":"1.0.1rc7","_nodeVersion":"v0.4.5","_defaultsLoaded":true,"dist":{"shasum":"b32bee9b60099274fec2359d93057c3c0f69741e","tarball":"https://registry.npmjs.org/bson/-/bson-0.0.3.tgz","bin":{"0.4-sunos-5.11":{"shasum":"122e6a4522771ed3a23af4f069c3c4e2551028c2","tarball":"http://registry.npmjs.org/bson/-/bson-0.0.3-0.4-sunos-5.11.tgz"}}},"directories":{}},"0.0.4":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"version":"0.0.4","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"contributors":[],"repository":{"type":"git","url":"git@github.com:christkv/bson.git"},"bugs":{"email":"node-mongodb-native@googlegroups.com","url":"https://github.com/christkv/bson/issues"},"devDependencies":{"nodeunit":"0.7.3","gleak":"0.2.3"},"config":{"native":false},"main":"./lib/bson/index","directories":{"lib":"./lib/bson"},"engines":{"node":">=0.4.0"},"scripts":{"install":"node install.js","test":"make test"},"licenses":[{"type":"Apache License, Version 2.0","url":"http://www.apache.org/licenses/LICENSE-2.0"}],"_npmUser":{"name":"christkv","email":"christkv@gmail.com"},"_id":"bson@0.0.4","dependencies":{},"optionalDependencies":{},"_engineSupported":true,"_npmVersion":"1.1.12","_nodeVersion":"v0.6.14","_defaultsLoaded":true,"dist":{"shasum":"601968e2a916ab58a82d5f5763a4f2ea84db448a","tarball":"https://registry.npmjs.org/bson/-/bson-0.0.4.tgz"},"maintainers":[{"name":"octave","email":"chinsay@gmail.com"},{"name":"christkv","email":"christkv@gmail.com"}]},"0.0.5":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"version":"0.0.5","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"contributors":[],"repository":{"type":"git","url":"git@github.com:christkv/bson.git"},"bugs":{"email":"node-mongodb-native@googlegroups.com","url":"https://github.com/christkv/bson/issues"},"devDependencies":{"nodeunit":"0.7.3","gleak":"0.2.3"},"config":{"native":false},"main":"./lib/bson/index","directories":{"lib":"./lib/bson"},"engines":{"node":">=0.4.0"},"scripts":{"install":"node install.js","test":"make test"},"licenses":[{"type":"Apache License, Version 2.0","url":"http://www.apache.org/licenses/LICENSE-2.0"}],"_npmUser":{"name":"christkv","email":"christkv@gmail.com"},"_id":"bson@0.0.5","dependencies":{},"optionalDependencies":{},"_engineSupported":true,"_npmVersion":"1.1.16","_nodeVersion":"v0.6.15","_defaultsLoaded":true,"dist":{"shasum":"e01bb8d673bebf118cbd6223f901ce82a7be2b34","tarball":"https://registry.npmjs.org/bson/-/bson-0.0.5.tgz"},"maintainers":[{"name":"octave","email":"chinsay@gmail.com"},{"name":"christkv","email":"christkv@gmail.com"}]},"0.0.6":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"version":"0.0.6","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"contributors":[],"repository":{"type":"git","url":"git@github.com:christkv/bson.git"},"bugs":{"email":"node-mongodb-native@googlegroups.com","url":"https://github.com/christkv/bson/issues"},"devDependencies":{"nodeunit":"0.7.3","gleak":"0.2.3"},"config":{"native":false},"main":"./lib/bson/index","directories":{"lib":"./lib/bson"},"engines":{"node":">=0.4.0"},"scripts":{"install":"node install.js","test":"make test"},"licenses":[{"type":"Apache License, Version 2.0","url":"http://www.apache.org/licenses/LICENSE-2.0"}],"_npmUser":{"name":"christkv","email":"christkv@gmail.com"},"_id":"bson@0.0.6","dependencies":{},"optionalDependencies":{},"_engineSupported":true,"_npmVersion":"1.1.16","_nodeVersion":"v0.6.15","_defaultsLoaded":true,"dist":{"shasum":"25039e789a2b813dc993bd3e6c31a3de31d08120","tarball":"https://registry.npmjs.org/bson/-/bson-0.0.6.tgz"},"maintainers":[{"name":"octave","email":"chinsay@gmail.com"},{"name":"christkv","email":"christkv@gmail.com"}]},"0.0.7":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"version":"0.0.7","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"contributors":[],"repository":{"type":"git","url":"git@github.com:christkv/bson.git"},"bugs":{"email":"node-mongodb-native@googlegroups.com","url":"https://github.com/christkv/bson/issues"},"devDependencies":{"nodeunit":"0.7.3","gleak":"0.2.3"},"config":{"native":false},"main":"./lib/bson/index","directories":{"lib":"./lib/bson"},"engines":{"node":">=0.4.0"},"scripts":{"install":"node install.js","test":"make test"},"licenses":[{"type":"Apache License, Version 2.0","url":"http://www.apache.org/licenses/LICENSE-2.0"}],"_npmUser":{"name":"christkv","email":"christkv@gmail.com"},"_id":"bson@0.0.7","dependencies":{},"optionalDependencies":{},"_engineSupported":true,"_npmVersion":"1.1.21","_nodeVersion":"v0.6.18","_defaultsLoaded":true,"dist":{"shasum":"aaac9fd032bad5d023a1839dc6fa93df77ac1557","tarball":"https://registry.npmjs.org/bson/-/bson-0.0.7.tgz"},"maintainers":[{"name":"octave","email":"chinsay@gmail.com"},{"name":"christkv","email":"christkv@gmail.com"}]},"0.0.8":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"version":"0.0.8","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"contributors":[],"repository":{"type":"git","url":"git@github.com:christkv/bson.git"},"bugs":{"email":"node-mongodb-native@googlegroups.com","url":"https://github.com/christkv/bson/issues"},"devDependencies":{"nodeunit":"0.7.3","gleak":"0.2.3"},"config":{"native":false},"main":"./lib/bson/index","directories":{"lib":"./lib/bson"},"engines":{"node":">=0.4.0"},"scripts":{"install":"node install.js","test":"make test"},"licenses":[{"type":"Apache License, Version 2.0","url":"http://www.apache.org/licenses/LICENSE-2.0"}],"_npmUser":{"name":"christkv","email":"christkv@gmail.com"},"_id":"bson@0.0.8","dependencies":{},"optionalDependencies":{},"_engineSupported":true,"_npmVersion":"1.1.21","_nodeVersion":"v0.6.18","_defaultsLoaded":true,"dist":{"shasum":"969c9b0ca84fe2f87d41b66cf6fabac9f4b1e6db","tarball":"https://registry.npmjs.org/bson/-/bson-0.0.8.tgz"},"maintainers":[{"name":"octave","email":"chinsay@gmail.com"},{"name":"christkv","email":"christkv@gmail.com"}]},"0.0.9":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"version":"0.0.9","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"contributors":[],"repository":{"type":"git","url":"git@github.com:christkv/bson.git"},"bugs":{"email":"node-mongodb-native@googlegroups.com","url":"https://github.com/christkv/bson/issues"},"devDependencies":{"nodeunit":"0.7.3","gleak":"0.2.3"},"config":{"native":false},"main":"./lib/bson/index","directories":{"lib":"./lib/bson"},"engines":{"node":">=0.4.0"},"scripts":{"install":"node install.js","test":"make test"},"licenses":[{"type":"Apache License, Version 2.0","url":"http://www.apache.org/licenses/LICENSE-2.0"}],"_npmUser":{"name":"christkv","email":"christkv@gmail.com"},"_id":"bson@0.0.9","dependencies":{},"optionalDependencies":{},"_engineSupported":true,"_npmVersion":"1.1.21","_nodeVersion":"v0.6.18","_defaultsLoaded":true,"dist":{"shasum":"49a841c05c07a71cbba46c981fc5e2c57272ea30","tarball":"https://registry.npmjs.org/bson/-/bson-0.0.9.tgz"},"maintainers":[{"name":"octave","email":"chinsay@gmail.com"},{"name":"christkv","email":"christkv@gmail.com"}]},"0.1.0":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"version":"0.1.0","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"contributors":[],"repository":{"type":"git","url":"git@github.com:christkv/bson.git"},"bugs":{"email":"node-mongodb-native@googlegroups.com","url":"https://github.com/christkv/bson/issues"},"devDependencies":{"nodeunit":"0.7.3","gleak":"0.2.3"},"config":{"native":false},"main":"./lib/bson/index","directories":{"lib":"./lib/bson"},"engines":{"node":">=0.4.0"},"scripts":{"install":"node install.js","test":"make test"},"licenses":[{"type":"Apache License, Version 2.0","url":"http://www.apache.org/licenses/LICENSE-2.0"}],"_npmUser":{"name":"christkv","email":"christkv@gmail.com"},"_id":"bson@0.1.0","dependencies":{},"optionalDependencies":{},"_engineSupported":true,"_npmVersion":"1.1.21","_nodeVersion":"v0.6.18","_defaultsLoaded":true,"dist":{"shasum":"d20ff63df674d002a77b506e391c3fc1903d02a0","tarball":"https://registry.npmjs.org/bson/-/bson-0.1.0.tgz"},"maintainers":[{"name":"octave","email":"chinsay@gmail.com"},{"name":"christkv","email":"christkv@gmail.com"}]},"0.1.1":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"version":"0.1.1","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"contributors":[],"repository":{"type":"git","url":"git@github.com:mongodb/js-bson.git"},"bugs":{"email":"node-mongodb-native@googlegroups.com","url":"https://github.com/mongodb/js-bson/issues"},"devDependencies":{"nodeunit":"0.7.3","gleak":"0.2.3"},"config":{"native":false},"main":"./lib/bson/index","directories":{"lib":"./lib/bson"},"engines":{"node":">=0.4.0"},"scripts":{"install":"node install.js","test":"make test"},"licenses":[{"type":"Apache License, Version 2.0","url":"http://www.apache.org/licenses/LICENSE-2.0"}],"_npmUser":{"name":"christkv","email":"christkv@gmail.com"},"_id":"bson@0.1.1","dependencies":{},"_engineSupported":true,"_npmVersion":"1.0.106","_nodeVersion":"v0.4.12","_defaultsLoaded":true,"dist":{"shasum":"d8f0ea36cef786ee05713508f6b1dcfdc44d5116","tarball":"https://registry.npmjs.org/bson/-/bson-0.1.1.tgz"},"maintainers":[{"name":"octave","email":"chinsay@gmail.com"},{"name":"christkv","email":"christkv@gmail.com"}]},"0.1.3":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"version":"0.1.3","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"contributors":[],"repository":{"type":"git","url":"git@github.com:mongodb/js-bson.git"},"bugs":{"mail":"node-mongodb-native@googlegroups.com","url":"https://github.com/mongodb/js-bson/issues"},"devDependencies":{"nodeunit":"0.7.3","gleak":"0.2.3"},"config":{"native":false},"main":"./lib/bson/index","directories":{"lib":"./lib/bson"},"engines":{"node":">=0.6.0"},"scripts":{"install":"node install.js","test":"make test"},"licenses":[{"type":"Apache License, Version 2.0","url":"http://www.apache.org/licenses/LICENSE-2.0"}],"_id":"bson@0.1.3","dist":{"shasum":"c8154328a3a38d8a99f5f11cb1100bf7bf27bf54","tarball":"https://registry.npmjs.org/bson/-/bson-0.1.3.tgz"},"_npmVersion":"1.1.61","_npmUser":{"name":"christkv","email":"christkv@gmail.com"},"maintainers":[{"name":"octave","email":"chinsay@gmail.com"},{"name":"christkv","email":"christkv@gmail.com"}]},"0.1.4":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"version":"0.1.4","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"contributors":[],"repository":{"type":"git","url":"git://github.com/mongodb/js-bson.git"},"bugs":{"mail":"node-mongodb-native@googlegroups.com","url":"https://github.com/mongodb/js-bson/issues"},"devDependencies":{"nodeunit":"0.7.3","gleak":"0.2.3"},"config":{"native":false},"main":"./lib/bson/index","directories":{"lib":"./lib/bson"},"engines":{"node":">=0.6.0"},"scripts":{"install":"node-gyp rebuild || (exit 0)","test":"nodeunit ./test/node && TEST_NATIVE=TRUE nodeunit ./test/node"},"licenses":[{"type":"Apache License, Version 2.0","url":"http://www.apache.org/licenses/LICENSE-2.0"}],"_id":"bson@0.1.4","dist":{"shasum":"00a19d8c5a417e4e13cf60b97474249f6ed080b8","tarball":"https://registry.npmjs.org/bson/-/bson-0.1.4.tgz"},"_npmVersion":"1.1.62","_npmUser":{"name":"christkv","email":"christkv@gmail.com"},"maintainers":[{"name":"octave","email":"chinsay@gmail.com"},{"name":"christkv","email":"christkv@gmail.com"}]},"0.1.5":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"version":"0.1.5","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"contributors":[],"repository":{"type":"git","url":"git://github.com/mongodb/js-bson.git"},"bugs":{"mail":"node-mongodb-native@googlegroups.com","url":"https://github.com/mongodb/js-bson/issues"},"devDependencies":{"nodeunit":"0.7.3","gleak":"0.2.3"},"config":{"native":false},"main":"./lib/bson/index","directories":{"lib":"./lib/bson"},"engines":{"node":">=0.6.0"},"scripts":{"install":"node install.js || (exit 0)","test":"nodeunit ./test/node && TEST_NATIVE=TRUE nodeunit ./test/node"},"licenses":[{"type":"Apache License, Version 2.0","url":"http://www.apache.org/licenses/LICENSE-2.0"}],"_id":"bson@0.1.5","dist":{"shasum":"8a7fe31f22f9b0aeab68313ce20e176c04da0b70","tarball":"https://registry.npmjs.org/bson/-/bson-0.1.5.tgz"},"_npmVersion":"1.1.65","_npmUser":{"name":"christkv","email":"christkv@gmail.com"},"maintainers":[{"name":"octave","email":"chinsay@gmail.com"},{"name":"christkv","email":"christkv@gmail.com"}]},"0.1.6":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"version":"0.1.6","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"contributors":[],"repository":{"type":"git","url":"git://github.com/mongodb/js-bson.git"},"bugs":{"mail":"node-mongodb-native@googlegroups.com","url":"https://github.com/mongodb/js-bson/issues"},"devDependencies":{"nodeunit":"0.7.3","gleak":"0.2.3"},"config":{"native":false},"main":"./lib/bson/index","directories":{"lib":"./lib/bson"},"engines":{"node":">=0.6.0"},"scripts":{"install":"node install.js || (exit 0)","test":"nodeunit ./test/node && TEST_NATIVE=TRUE nodeunit ./test/node"},"licenses":[{"type":"Apache License, Version 2.0","url":"http://www.apache.org/licenses/LICENSE-2.0"}],"_id":"bson@0.1.6","dist":{"shasum":"6faf99a42020f2762a6c35f0a44aa068cfd23760","tarball":"https://registry.npmjs.org/bson/-/bson-0.1.6.tgz"},"_npmVersion":"1.2.0","_npmUser":{"name":"christkv","email":"christkv@gmail.com"},"maintainers":[{"name":"octave","email":"chinsay@gmail.com"},{"name":"christkv","email":"christkv@gmail.com"}]},"0.1.7":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"version":"0.1.7","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"contributors":[],"repository":{"type":"git","url":"git://github.com/mongodb/js-bson.git"},"bugs":{"mail":"node-mongodb-native@googlegroups.com","url":"https://github.com/mongodb/js-bson/issues"},"devDependencies":{"nodeunit":"0.7.3","gleak":"0.2.3"},"config":{"native":false},"main":"./lib/bson/index","directories":{"lib":"./lib/bson"},"engines":{"node":">=0.6.0"},"scripts":{"install":"node install.js || (exit 0)","test":"nodeunit ./test/node && TEST_NATIVE=TRUE nodeunit ./test/node"},"licenses":[{"type":"Apache License, Version 2.0","url":"http://www.apache.org/licenses/LICENSE-2.0"}],"_id":"bson@0.1.7","dist":{"shasum":"8637ccfa89a3a41c2017ddf1b82ea4a2df5049ca","tarball":"https://registry.npmjs.org/bson/-/bson-0.1.7.tgz"},"_from":".","_npmVersion":"1.2.10","_npmUser":{"name":"christkv","email":"christkv@gmail.com"},"maintainers":[{"name":"octave","email":"chinsay@gmail.com"},{"name":"christkv","email":"christkv@gmail.com"}]},"0.1.8":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"version":"0.1.8","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"contributors":[],"repository":{"type":"git","url":"git://github.com/mongodb/js-bson.git"},"bugs":{"mail":"node-mongodb-native@googlegroups.com","url":"https://github.com/mongodb/js-bson/issues"},"devDependencies":{"nodeunit":"0.7.3","gleak":"0.2.3","one":"latest"},"config":{"native":false},"main":"./lib/bson/index","directories":{"lib":"./lib/bson"},"engines":{"node":">=0.6.19"},"scripts":{"install":"(node-gyp rebuild 2> builderror.log) || (exit 0)","test":"nodeunit ./test/node && TEST_NATIVE=TRUE nodeunit ./test/node"},"licenses":[{"type":"Apache License, Version 2.0","url":"http://www.apache.org/licenses/LICENSE-2.0"}],"_id":"bson@0.1.8","dist":{"shasum":"cf34fdcff081a189b589b4b3e5e9309cd6506c81","tarball":"https://registry.npmjs.org/bson/-/bson-0.1.8.tgz"},"_from":".","_npmVersion":"1.2.10","_npmUser":{"name":"christkv","email":"christkv@gmail.com"},"maintainers":[{"name":"octave","email":"chinsay@gmail.com"},{"name":"christkv","email":"christkv@gmail.com"}]},"0.1.9":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"version":"0.1.9","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"contributors":[],"repository":{"type":"git","url":"git://github.com/mongodb/js-bson.git"},"bugs":{"url":"https://github.com/mongodb/js-bson/issues"},"devDependencies":{"nodeunit":"0.7.3","gleak":"0.2.3","one":"latest"},"config":{"native":false},"main":"./lib/bson/index","directories":{"lib":"./lib/bson"},"engines":{"node":">=0.6.19"},"scripts":{"install":"(node-gyp rebuild 2> builderror.log) || (exit 0)","test":"nodeunit ./test/node && TEST_NATIVE=TRUE nodeunit ./test/node"},"licenses":[{"type":"Apache License, Version 2.0","url":"http://www.apache.org/licenses/LICENSE-2.0"}],"_id":"bson@0.1.9","dist":{"shasum":"7528f81ed770e6d630ca8c2ccdf5394a4096db14","tarball":"https://registry.npmjs.org/bson/-/bson-0.1.9.tgz"},"_from":".","_npmVersion":"1.2.23","_npmUser":{"name":"christkv","email":"christkv@gmail.com"},"maintainers":[{"name":"octave","email":"chinsay@gmail.com"},{"name":"christkv","email":"christkv@gmail.com"}]},"0.2.0":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"version":"0.2.0","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"contributors":[],"repository":{"type":"git","url":"git://github.com/mongodb/js-bson.git"},"bugs":{"url":"https://github.com/mongodb/js-bson/issues"},"devDependencies":{"nodeunit":"0.7.3","gleak":"0.2.3","one":"2.X.X"},"config":{"native":false},"main":"./lib/bson/index","directories":{"lib":"./lib/bson"},"engines":{"node":">=0.6.19"},"scripts":{"install":"(node-gyp rebuild 2> builderror.log) || (exit 0)","test":"nodeunit ./test/node && TEST_NATIVE=TRUE nodeunit ./test/node"},"licenses":[{"type":"Apache License, Version 2.0","url":"http://www.apache.org/licenses/LICENSE-2.0"}],"_id":"bson@0.2.0","dist":{"shasum":"60e1174f265e274f42407469f99ab8c0d9640f4b","tarball":"https://registry.npmjs.org/bson/-/bson-0.2.0.tgz"},"_from":".","_npmVersion":"1.2.23","_npmUser":{"name":"christkv","email":"christkv@gmail.com"},"maintainers":[{"name":"octave","email":"chinsay@gmail.com"},{"name":"christkv","email":"christkv@gmail.com"}]},"0.2.1":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"version":"0.2.1","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"contributors":[],"repository":{"type":"git","url":"git://github.com/mongodb/js-bson.git"},"bugs":{"url":"https://github.com/mongodb/js-bson/issues"},"devDependencies":{"nodeunit":"0.7.3","gleak":"0.2.3","one":"2.X.X"},"config":{"native":false},"main":"./lib/bson/index","directories":{"lib":"./lib/bson"},"engines":{"node":">=0.6.19"},"scripts":{"install":"(node-gyp rebuild 2> builderror.log) || (exit 0)","test":"nodeunit ./test/node && TEST_NATIVE=TRUE nodeunit ./test/node"},"licenses":[{"type":"Apache License, Version 2.0","url":"http://www.apache.org/licenses/LICENSE-2.0"}],"_id":"bson@0.2.1","dist":{"shasum":"9d044fa074c161cde974d6ba0f5e58617da9170a","tarball":"https://registry.npmjs.org/bson/-/bson-0.2.1.tgz"},"_from":".","_npmVersion":"1.2.23","_npmUser":{"name":"christkv","email":"christkv@gmail.com"},"maintainers":[{"name":"octave","email":"chinsay@gmail.com"},{"name":"christkv","email":"christkv@gmail.com"}]},"0.2.2":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"version":"0.2.2","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"contributors":[],"repository":{"type":"git","url":"git://github.com/mongodb/js-bson.git"},"bugs":{"url":"https://github.com/mongodb/js-bson/issues"},"devDependencies":{"nodeunit":"0.7.3","gleak":"0.2.3","one":"2.X.X"},"config":{"native":false},"main":"./lib/bson/index","directories":{"lib":"./lib/bson"},"engines":{"node":">=0.6.19"},"scripts":{"install":"(node-gyp rebuild 2> builderror.log) || (exit 0)","test":"nodeunit ./test/node && TEST_NATIVE=TRUE nodeunit ./test/node"},"licenses":[{"type":"Apache License, Version 2.0","url":"http://www.apache.org/licenses/LICENSE-2.0"}],"_id":"bson@0.2.2","dist":{"shasum":"3dbf984acb9d33a6878b46e6fb7afbd611856a60","tarball":"https://registry.npmjs.org/bson/-/bson-0.2.2.tgz"},"_from":".","_npmVersion":"1.2.23","_npmUser":{"name":"christkv","email":"christkv@gmail.com"},"maintainers":[{"name":"octave","email":"chinsay@gmail.com"},{"name":"christkv","email":"christkv@gmail.com"}]},"0.2.3":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"version":"0.2.3","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"contributors":[],"repository":{"type":"git","url":"git://github.com/mongodb/js-bson.git"},"bugs":{"url":"https://github.com/mongodb/js-bson/issues"},"dependencies":{"nan":"~0.4.1"},"devDependencies":{"nodeunit":"0.7.3","gleak":"0.2.3","one":"2.X.X"},"config":{"native":false},"main":"./lib/bson/index","directories":{"lib":"./lib/bson"},"engines":{"node":">=0.6.19"},"scripts":{"install":"(node-gyp rebuild 2> builderror.log) || (exit 0)","test":"nodeunit ./test/node && TEST_NATIVE=TRUE nodeunit ./test/node"},"browser":"lib/bson/bson.js","licenses":[{"type":"Apache License, Version 2.0","url":"http://www.apache.org/licenses/LICENSE-2.0"}],"_id":"bson@0.2.3","dist":{"shasum":"7651d2c4ec7cb90d10b5de0ef61663273b784839","tarball":"https://registry.npmjs.org/bson/-/bson-0.2.3.tgz"},"_from":".","_npmVersion":"1.3.5","_npmUser":{"name":"christkv","email":"christkv@gmail.com"},"maintainers":[{"name":"octave","email":"chinsay@gmail.com"},{"name":"christkv","email":"christkv@gmail.com"}]},"0.2.4":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"version":"0.2.4","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"contributors":[],"repository":{"type":"git","url":"git://github.com/mongodb/js-bson.git"},"bugs":{"url":"https://github.com/mongodb/js-bson/issues"},"dependencies":{"nan":"latest"},"devDependencies":{"nodeunit":"0.7.3","gleak":"0.2.3","one":"2.X.X"},"config":{"native":false},"main":"./lib/bson/index","directories":{"lib":"./lib/bson"},"engines":{"node":">=0.6.19"},"scripts":{"install":"(node-gyp rebuild 2> builderror.log) || (exit 0)","test":"nodeunit ./test/node && TEST_NATIVE=TRUE nodeunit ./test/node"},"browser":"lib/bson/bson.js","licenses":[{"type":"Apache License, Version 2.0","url":"http://www.apache.org/licenses/LICENSE-2.0"}],"_id":"bson@0.2.4","dist":{"shasum":"fcc631344950c0d6464b54b58d76ea899f74bac3","tarball":"https://registry.npmjs.org/bson/-/bson-0.2.4.tgz"},"_from":".","_npmVersion":"1.3.5","_npmUser":{"name":"christkv","email":"christkv@gmail.com"},"maintainers":[{"name":"octave","email":"chinsay@gmail.com"},{"name":"christkv","email":"christkv@gmail.com"}]},"0.2.5":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"version":"0.2.5","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"contributors":[],"repository":{"type":"git","url":"git://github.com/mongodb/js-bson.git"},"bugs":{"url":"https://github.com/mongodb/js-bson/issues"},"devDependencies":{"nodeunit":"0.8.2","gleak":"0.2.3","one":"2.X.X"},"config":{"native":false},"main":"./lib/bson/index","directories":{"lib":"./lib/bson"},"engines":{"node":">=0.6.19"},"scripts":{"install":"(node-gyp rebuild 2> builderror.log) || (exit 0)","test":"nodeunit ./test/node && TEST_NATIVE=TRUE nodeunit ./test/node"},"browser":"lib/bson/bson.js","licenses":[{"type":"Apache License, Version 2.0","url":"http://www.apache.org/licenses/LICENSE-2.0"}],"homepage":"https://github.com/mongodb/js-bson","_id":"bson@0.2.5","dist":{"shasum":"500d26d883ddc8e02f2c88011627636111c105c5","tarball":"https://registry.npmjs.org/bson/-/bson-0.2.5.tgz"},"_from":".","_npmVersion":"1.3.23","_npmUser":{"name":"christkv","email":"christkv@gmail.com"},"maintainers":[{"name":"christkv","email":"christkv@gmail.com"}]},"0.2.6":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"version":"0.2.6","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"contributors":[],"repository":{"type":"git","url":"git://github.com/mongodb/js-bson.git"},"bugs":{"url":"https://github.com/mongodb/js-bson/issues"},"dependencies":{"nan":"~0.8.0"},"devDependencies":{"nodeunit":"0.8.2","gleak":"0.2.3","one":"2.X.X"},"config":{"native":false},"main":"./lib/bson/index","directories":{"lib":"./lib/bson"},"engines":{"node":">=0.6.19"},"scripts":{"install":"(node-gyp rebuild 2> builderror.log) || (exit 0)","test":"nodeunit ./test/node && TEST_NATIVE=TRUE nodeunit ./test/node"},"browser":"lib/bson/bson.js","licenses":[{"type":"Apache License, Version 2.0","url":"http://www.apache.org/licenses/LICENSE-2.0"}],"homepage":"https://github.com/mongodb/js-bson","_id":"bson@0.2.6","dist":{"shasum":"d001aa3d20b92e3f9cbc19d542515a748586a743","tarball":"https://registry.npmjs.org/bson/-/bson-0.2.6.tgz"},"_from":".","_npmVersion":"1.3.24","_npmUser":{"name":"christkv","email":"christkv@gmail.com"},"maintainers":[{"name":"octave","email":"chinsay@gmail.com"},{"name":"christkv","email":"christkv@gmail.com"}]},"0.2.7":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"version":"0.2.7","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"contributors":[],"repository":{"type":"git","url":"git://github.com/mongodb/js-bson.git"},"bugs":{"url":"https://github.com/mongodb/js-bson/issues"},"dependencies":{"nan":"~0.8.0"},"devDependencies":{"nodeunit":"0.8.2","gleak":"0.2.3","one":"2.X.X"},"config":{"native":false},"main":"./lib/bson/index","directories":{"lib":"./lib/bson"},"engines":{"node":">=0.6.19"},"scripts":{"install":"(node-gyp rebuild 2> builderror.log) || (exit 0)","test":"nodeunit ./test/node && TEST_NATIVE=TRUE nodeunit ./test/node"},"browser":"lib/bson/bson.js","licenses":[{"type":"Apache License, Version 2.0","url":"http://www.apache.org/licenses/LICENSE-2.0"}],"homepage":"https://github.com/mongodb/js-bson","_id":"bson@0.2.7","dist":{"shasum":"6793161c40e5a9757091d7ee7d52a4717950236b","tarball":"https://registry.npmjs.org/bson/-/bson-0.2.7.tgz"},"_from":".","_npmVersion":"1.3.24","_npmUser":{"name":"christkv","email":"christkv@gmail.com"},"maintainers":[{"name":"octave","email":"chinsay@gmail.com"},{"name":"christkv","email":"christkv@gmail.com"}]},"0.2.8":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"version":"0.2.8","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"contributors":[],"repository":{"type":"git","url":"git://github.com/mongodb/js-bson.git"},"bugs":{"url":"https://github.com/mongodb/js-bson/issues"},"dependencies":{"nan":"~1.0.0"},"devDependencies":{"nodeunit":"0.8.2","gleak":"0.2.3","one":"2.X.X"},"config":{"native":false},"main":"./lib/bson/index","directories":{"lib":"./lib/bson"},"engines":{"node":">=0.6.19"},"scripts":{"install":"(node-gyp rebuild 2> builderror.log) || (exit 0)","test":"nodeunit ./test/node && TEST_NATIVE=TRUE nodeunit ./test/node"},"browser":"lib/bson/bson.js","licenses":[{"type":"Apache License, Version 2.0","url":"http://www.apache.org/licenses/LICENSE-2.0"}],"homepage":"https://github.com/mongodb/js-bson","_id":"bson@0.2.8","dist":{"shasum":"7ad6ddc15aafa63808942bd53c61387f825d64a1","tarball":"https://registry.npmjs.org/bson/-/bson-0.2.8.tgz"},"_from":".","_npmVersion":"1.4.3","_npmUser":{"name":"christkv","email":"christkv@gmail.com"},"maintainers":[{"name":"octave","email":"chinsay@gmail.com"},{"name":"christkv","email":"christkv@gmail.com"}]},"0.2.9":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"version":"0.2.9","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"contributors":[],"repository":{"type":"git","url":"git://github.com/mongodb/js-bson.git"},"bugs":{"url":"https://github.com/mongodb/js-bson/issues"},"dependencies":{"nan":"~1.0.0"},"devDependencies":{"nodeunit":"0.9.0","gleak":"0.2.3","one":"2.X.X"},"config":{"native":false},"main":"./lib/bson/index","directories":{"lib":"./lib/bson"},"engines":{"node":">=0.6.19"},"scripts":{"install":"(node-gyp rebuild 2> builderror.log) || (exit 0)","test":"nodeunit ./test/node && TEST_NATIVE=TRUE nodeunit ./test/node"},"browser":"lib/bson/bson.js","licenses":[{"type":"Apache License, Version 2.0","url":"http://www.apache.org/licenses/LICENSE-2.0"}],"homepage":"https://github.com/mongodb/js-bson","_id":"bson@0.2.9","dist":{"shasum":"ee3716a52c985ff3074b6ece3257c75ee12f3a05","tarball":"https://registry.npmjs.org/bson/-/bson-0.2.9.tgz"},"_from":".","_npmVersion":"1.4.3","_npmUser":{"name":"christkv","email":"christkv@gmail.com"},"maintainers":[{"name":"octave","email":"chinsay@gmail.com"},{"name":"christkv","email":"christkv@gmail.com"}]},"0.2.10":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"version":"0.2.10","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"contributors":[],"repository":{"type":"git","url":"git://github.com/mongodb/js-bson.git"},"bugs":{"url":"https://github.com/mongodb/js-bson/issues"},"dependencies":{"nan":"~1.0.0"},"devDependencies":{"nodeunit":"0.9.0","gleak":"0.2.3","one":"2.X.X"},"config":{"native":false},"main":"./lib/bson/index","directories":{"lib":"./lib/bson"},"engines":{"node":">=0.6.19"},"scripts":{"install":"(node-gyp rebuild 2> builderror.log) || (exit 0)","test":"nodeunit ./test/node && TEST_NATIVE=TRUE nodeunit ./test/node"},"browser":"lib/bson/bson.js","licenses":[{"type":"Apache License, Version 2.0","url":"http://www.apache.org/licenses/LICENSE-2.0"}],"homepage":"https://github.com/mongodb/js-bson","_id":"bson@0.2.10","dist":{"shasum":"36e0267897ef1ebc12994e22dfbf767b726f1b80","tarball":"https://registry.npmjs.org/bson/-/bson-0.2.10.tgz"},"_from":".","_npmVersion":"1.4.3","_npmUser":{"name":"christkv","email":"christkv@gmail.com"},"maintainers":[{"name":"octave","email":"chinsay@gmail.com"},{"name":"christkv","email":"christkv@gmail.com"}]},"0.2.11":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"version":"0.2.11","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"contributors":[],"repository":{"type":"git","url":"git://github.com/mongodb/js-bson.git"},"bugs":{"url":"https://github.com/mongodb/js-bson/issues"},"dependencies":{"nan":"1.2.0"},"devDependencies":{"nodeunit":"0.9.0","gleak":"0.2.3","one":"2.X.X"},"config":{"native":false},"main":"./lib/bson/index","directories":{"lib":"./lib/bson"},"engines":{"node":">=0.6.19"},"scripts":{"install":"(node-gyp rebuild 2> builderror.log) || (exit 0)","test":"nodeunit ./test/node && TEST_NATIVE=TRUE nodeunit ./test/node"},"browser":"lib/bson/bson.js","licenses":[{"type":"Apache License, Version 2.0","url":"http://www.apache.org/licenses/LICENSE-2.0"}],"homepage":"https://github.com/mongodb/js-bson","_id":"bson@0.2.11","dist":{"shasum":"7a1b9df70b36a247ada83d795e566a049f78bbb8","tarball":"https://registry.npmjs.org/bson/-/bson-0.2.11.tgz"},"_from":".","_npmVersion":"1.4.3","_npmUser":{"name":"christkv","email":"christkv@gmail.com"},"maintainers":[{"name":"octave","email":"chinsay@gmail.com"},{"name":"christkv","email":"christkv@gmail.com"}]},"0.2.12":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"version":"0.2.12","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"contributors":[],"repository":{"type":"git","url":"git://github.com/mongodb/js-bson.git"},"bugs":{"url":"https://github.com/mongodb/js-bson/issues"},"dependencies":{"nan":"1.2.0"},"devDependencies":{"nodeunit":"0.9.0","gleak":"0.2.3","one":"2.X.X"},"config":{"native":false},"main":"./lib/bson/index","directories":{"lib":"./lib/bson"},"engines":{"node":">=0.6.19"},"scripts":{"install":"(node-gyp rebuild 2> builderror.log) || (exit 0)","test":"nodeunit ./test/node && TEST_NATIVE=TRUE nodeunit ./test/node"},"browser":"lib/bson/bson.js","licenses":[{"type":"Apache License, Version 2.0","url":"http://www.apache.org/licenses/LICENSE-2.0"}],"homepage":"https://github.com/mongodb/js-bson","_id":"bson@0.2.12","dist":{"shasum":"78bedbef1fd1f629b1c3b8d2f2d1fd87b8d64dd2","tarball":"https://registry.npmjs.org/bson/-/bson-0.2.12.tgz"},"_from":".","_npmVersion":"1.4.3","_npmUser":{"name":"christkv","email":"christkv@gmail.com"},"maintainers":[{"name":"octave","email":"chinsay@gmail.com"},{"name":"christkv","email":"christkv@gmail.com"}]},"0.2.13":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"version":"0.2.13","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"contributors":[],"repository":{"type":"git","url":"git://github.com/mongodb/js-bson.git"},"bugs":{"url":"https://github.com/mongodb/js-bson/issues"},"dependencies":{"nan":"1.3.0"},"devDependencies":{"nodeunit":"0.9.0","gleak":"0.2.3","one":"2.X.X"},"config":{"native":false},"main":"./lib/bson/index","directories":{"lib":"./lib/bson"},"engines":{"node":">=0.6.19"},"scripts":{"install":"(node-gyp rebuild 2> builderror.log) || (exit 0)","test":"nodeunit ./test/node && TEST_NATIVE=TRUE nodeunit ./test/node"},"browser":"lib/bson/bson.js","licenses":[{"type":"Apache License, Version 2.0","url":"http://www.apache.org/licenses/LICENSE-2.0"}],"homepage":"https://github.com/mongodb/js-bson","_id":"bson@0.2.13","_shasum":"46c9d7905af26c1b8517268fcf451ed377e9f1af","_from":".","_npmVersion":"1.4.9","_npmUser":{"name":"christkv","email":"christkv@gmail.com"},"maintainers":[{"name":"octave","email":"chinsay@gmail.com"},{"name":"christkv","email":"christkv@gmail.com"}],"dist":{"shasum":"46c9d7905af26c1b8517268fcf451ed377e9f1af","tarball":"https://registry.npmjs.org/bson/-/bson-0.2.13.tgz"}},"0.2.14":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"version":"0.2.14","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"contributors":[],"repository":{"type":"git","url":"git://github.com/mongodb/js-bson.git"},"bugs":{"url":"https://github.com/mongodb/js-bson/issues"},"dependencies":{"nan":"1.3.0"},"devDependencies":{"nodeunit":"0.9.0","gleak":"0.2.3","one":"2.X.X"},"config":{"native":false},"main":"./lib/bson/index","directories":{"lib":"./lib/bson"},"engines":{"node":">=0.6.19"},"scripts":{"install":"(node-gyp rebuild 2> builderror.log) || (exit 0)","test":"nodeunit ./test/node && TEST_NATIVE=TRUE nodeunit ./test/node"},"browser":"lib/bson/bson.js","licenses":[{"type":"Apache License, Version 2.0","url":"http://www.apache.org/licenses/LICENSE-2.0"}],"homepage":"https://github.com/mongodb/js-bson","_id":"bson@0.2.14","_shasum":"f69cb0dc23129ca1bc30f50f3fc01baf0ba53d29","_from":".","_npmVersion":"1.4.9","_npmUser":{"name":"christkv","email":"christkv@gmail.com"},"maintainers":[{"name":"octave","email":"chinsay@gmail.com"},{"name":"christkv","email":"christkv@gmail.com"}],"dist":{"shasum":"f69cb0dc23129ca1bc30f50f3fc01baf0ba53d29","tarball":"https://registry.npmjs.org/bson/-/bson-0.2.14.tgz"}},"0.2.15":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"version":"0.2.15","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"contributors":[],"repository":{"type":"git","url":"git://github.com/mongodb/js-bson.git"},"bugs":{"url":"https://github.com/mongodb/js-bson/issues"},"dependencies":{"nan":"1.3.0"},"devDependencies":{"nodeunit":"0.9.0","gleak":"0.2.3","one":"2.X.X"},"config":{"native":false},"main":"./lib/bson/index","directories":{"lib":"./lib/bson"},"engines":{"node":">=0.6.19"},"scripts":{"install":"(node-gyp rebuild 2> builderror.log) || (exit 0)","test":"nodeunit ./test/node && TEST_NATIVE=TRUE nodeunit ./test/node"},"browser":"lib/bson/bson.js","licenses":[{"type":"Apache License, Version 2.0","url":"http://www.apache.org/licenses/LICENSE-2.0"}],"homepage":"https://github.com/mongodb/js-bson","_id":"bson@0.2.15","dist":{"shasum":"556402c74bf33d8008122cc3091dc8b3b90e330c","tarball":"https://registry.npmjs.org/bson/-/bson-0.2.15.tgz"},"_from":".","_npmVersion":"1.4.3","_npmUser":{"name":"christkv","email":"christkv@gmail.com"},"maintainers":[{"name":"octave","email":"chinsay@gmail.com"},{"name":"christkv","email":"christkv@gmail.com"}]},"0.2.16":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"version":"0.2.16","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"contributors":[],"repository":{"type":"git","url":"git://github.com/mongodb/js-bson.git"},"bugs":{"url":"https://github.com/mongodb/js-bson/issues"},"dependencies":{"nan":"1.3.0"},"devDependencies":{"nodeunit":"0.9.0","gleak":"0.2.3","one":"2.X.X"},"config":{"native":false},"main":"./lib/bson/index","directories":{"lib":"./lib/bson"},"engines":{"node":">=0.6.19"},"scripts":{"install":"(node-gyp rebuild 2> builderror.log) || (exit 0)","test":"nodeunit ./test/node && TEST_NATIVE=TRUE nodeunit ./test/node"},"browser":"lib/bson/bson.js","licenses":[{"type":"Apache License, Version 2.0","url":"http://www.apache.org/licenses/LICENSE-2.0"}],"homepage":"https://github.com/mongodb/js-bson","_id":"bson@0.2.16","dist":{"shasum":"c4d056d16631ec481e8ef33659c01e581d2b97ed","tarball":"https://registry.npmjs.org/bson/-/bson-0.2.16.tgz"},"_from":".","_npmVersion":"1.4.3","_npmUser":{"name":"christkv","email":"christkv@gmail.com"},"maintainers":[{"name":"octave","email":"chinsay@gmail.com"},{"name":"christkv","email":"christkv@gmail.com"}]},"0.2.17":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"version":"0.2.17","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"contributors":[],"repository":{"type":"git","url":"git://github.com/mongodb/js-bson.git"},"bugs":{"url":"https://github.com/mongodb/js-bson/issues"},"dependencies":{"nan":"1.3.0"},"devDependencies":{"nodeunit":"0.9.0","gleak":"0.2.3","one":"2.X.X"},"config":{"native":false},"main":"./lib/bson/index","directories":{"lib":"./lib/bson"},"engines":{"node":">=0.6.19"},"scripts":{"install":"(node-gyp rebuild 2> builderror.log) || (exit 0)","test":"nodeunit ./test/node && TEST_NATIVE=TRUE nodeunit ./test/node"},"browser":"lib/bson/bson.js","licenses":[{"type":"Apache License, Version 2.0","url":"http://www.apache.org/licenses/LICENSE-2.0"}],"gitHead":"c91d5e89910f0bac15554e6ff3a7d157a1d44d56","homepage":"https://github.com/mongodb/js-bson","_id":"bson@0.2.17","_shasum":"0d8b42366d65058de496a927e8b7318b62345803","_from":".","_npmVersion":"1.4.28","_npmUser":{"name":"christkv","email":"christkv@gmail.com"},"maintainers":[{"name":"octave","email":"chinsay@gmail.com"},{"name":"christkv","email":"christkv@gmail.com"}],"dist":{"shasum":"0d8b42366d65058de496a927e8b7318b62345803","tarball":"https://registry.npmjs.org/bson/-/bson-0.2.17.tgz"}},"0.2.18":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"version":"0.2.18","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"contributors":[],"repository":{"type":"git","url":"git://github.com/mongodb/js-bson.git"},"bugs":{"url":"https://github.com/mongodb/js-bson/issues"},"dependencies":{"nan":"1.5.1"},"devDependencies":{"nodeunit":"0.9.0","gleak":"0.2.3","one":"2.X.X"},"config":{"native":false},"main":"./lib/bson/index","directories":{"lib":"./lib/bson"},"engines":{"node":">=0.6.19"},"scripts":{"install":"(node-gyp rebuild 2> builderror.log) || (exit 0)","test":"nodeunit ./test/node && TEST_NATIVE=TRUE nodeunit ./test/node"},"browser":"lib/bson/bson.js","licenses":[{"type":"Apache License, Version 2.0","url":"http://www.apache.org/licenses/LICENSE-2.0"}],"gitHead":"2948f964dd25707759e1f425d91e649a6b11f1be","homepage":"https://github.com/mongodb/js-bson","_id":"bson@0.2.18","_shasum":"363adc4366bc582988213f3f58cb9a049add6f1c","_from":".","_npmVersion":"2.1.18","_nodeVersion":"1.0.2","_npmUser":{"name":"christkv","email":"christkv@gmail.com"},"maintainers":[{"name":"octave","email":"chinsay@gmail.com"},{"name":"christkv","email":"christkv@gmail.com"}],"dist":{"shasum":"363adc4366bc582988213f3f58cb9a049add6f1c","tarball":"https://registry.npmjs.org/bson/-/bson-0.2.18.tgz"}},"0.2.19":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"version":"0.2.19","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"contributors":[],"repository":{"type":"git","url":"git://github.com/mongodb/js-bson.git"},"bugs":{"url":"https://github.com/mongodb/js-bson/issues"},"dependencies":{"nan":"1.6.2"},"devDependencies":{"nodeunit":"0.9.0","gleak":"0.2.3","one":"2.X.X"},"config":{"native":false},"main":"./lib/bson/index","directories":{"lib":"./lib/bson"},"engines":{"node":">=0.6.19"},"scripts":{"install":"(node-gyp rebuild 2> builderror.log) || (exit 0)","test":"nodeunit ./test/node && TEST_NATIVE=TRUE nodeunit ./test/node"},"browser":"lib/bson/bson.js","licenses":[{"type":"Apache License, Version 2.0","url":"http://www.apache.org/licenses/LICENSE-2.0"}],"gitHead":"d8048869418ab9f88fd6b4f27f3200ee10eb6a40","homepage":"https://github.com/mongodb/js-bson","_id":"bson@0.2.19","_shasum":"b5ad9a5ed3c01354e410ff181cdf70bce838f493","_from":".","_npmVersion":"2.5.1","_nodeVersion":"0.12.0","_npmUser":{"name":"christkv","email":"christkv@gmail.com"},"maintainers":[{"name":"octave","email":"chinsay@gmail.com"},{"name":"christkv","email":"christkv@gmail.com"}],"dist":{"shasum":"b5ad9a5ed3c01354e410ff181cdf70bce838f493","tarball":"https://registry.npmjs.org/bson/-/bson-0.2.19.tgz"}},"0.2.20":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"version":"0.2.20","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"contributors":[],"repository":{"type":"git","url":"git://github.com/mongodb/js-bson.git"},"bugs":{"url":"https://github.com/mongodb/js-bson/issues"},"dependencies":{"nan":"1.6.2"},"devDependencies":{"nodeunit":"0.9.0","gleak":"0.2.3","one":"2.X.X"},"config":{"native":false},"main":"./lib/bson/index","directories":{"lib":"./lib/bson"},"engines":{"node":">=0.6.19"},"scripts":{"install":"(node-gyp rebuild 2> builderror.log) || (exit 0)","test":"nodeunit ./test/node && TEST_NATIVE=TRUE nodeunit ./test/node"},"browser":"lib/bson/bson.js","licenses":[{"type":"Apache License, Version 2.0","url":"http://www.apache.org/licenses/LICENSE-2.0"}],"gitHead":"580d95ce193f97c7d0f43b0618da98c3940ba7bf","homepage":"https://github.com/mongodb/js-bson","_id":"bson@0.2.20","_shasum":"71f6cfe665faa025bd97532418107e884379ec5c","_from":".","_npmVersion":"2.5.1","_nodeVersion":"0.12.0","_npmUser":{"name":"christkv","email":"christkv@gmail.com"},"maintainers":[{"name":"octave","email":"chinsay@gmail.com"},{"name":"christkv","email":"christkv@gmail.com"}],"dist":{"shasum":"71f6cfe665faa025bd97532418107e884379ec5c","tarball":"https://registry.npmjs.org/bson/-/bson-0.2.20.tgz"}},"0.2.21":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"version":"0.2.21","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"contributors":[],"repository":{"type":"git","url":"git://github.com/mongodb/js-bson.git"},"bugs":{"url":"https://github.com/mongodb/js-bson/issues"},"dependencies":{"nan":"1.7.0"},"devDependencies":{"nodeunit":"0.9.0","gleak":"0.2.3","one":"2.X.X"},"config":{"native":false},"main":"./lib/bson/index","directories":{"lib":"./lib/bson"},"engines":{"node":">=0.6.19"},"scripts":{"install":"(node-gyp rebuild 2> builderror.log) || (exit 0)","test":"nodeunit ./test/node && TEST_NATIVE=TRUE nodeunit ./test/node"},"browser":"lib/bson/bson.js","licenses":[{"type":"Apache License, Version 2.0","url":"http://www.apache.org/licenses/LICENSE-2.0"}],"gitHead":"a4b8ff14e3dcc92d144817a806f4c5ba536a7f2e","homepage":"https://github.com/mongodb/js-bson","_id":"bson@0.2.21","_shasum":"3755a5de71ac43f0e9a85f699c84d1ab73b0fcb3","_from":".","_npmVersion":"2.7.1","_nodeVersion":"1.6.1","_npmUser":{"name":"christkv","email":"christkv@gmail.com"},"maintainers":[{"name":"octave","email":"chinsay@gmail.com"},{"name":"christkv","email":"christkv@gmail.com"}],"dist":{"shasum":"3755a5de71ac43f0e9a85f699c84d1ab73b0fcb3","tarball":"https://registry.npmjs.org/bson/-/bson-0.2.21.tgz"}},"0.3.0":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"version":"0.3.0","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"contributors":[],"repository":{"type":"git","url":"git://github.com/mongodb/js-bson.git"},"bugs":{"url":"https://github.com/mongodb/js-bson/issues"},"devDependencies":{"nodeunit":"0.9.0","gleak":"0.2.3","one":"2.X.X"},"optionalDependencies":{"bson-ext":"~0.1"},"config":{"native":false},"main":"./lib/bson/index","directories":{"lib":"./lib/bson"},"engines":{"node":">=0.6.19"},"scripts":{"install":"(node-gyp rebuild 2> builderror.log) || (exit 0)","test":"nodeunit ./test/node && TEST_NATIVE=TRUE nodeunit ./test/node"},"browser":"lib/bson/bson.js","licenses":[{"type":"Apache License, Version 2.0","url":"http://www.apache.org/licenses/LICENSE-2.0"}],"gitHead":"6437b5294714c042ac6a62ac99d8985cbf842d07","homepage":"https://github.com/mongodb/js-bson","dependencies":{"bson-ext":"~0.1"},"_id":"bson@0.3.0","_shasum":"a30a0ea76fce326670c500832c7737a8577cf405","_from":".","_npmVersion":"1.4.28","_npmUser":{"name":"christkv","email":"christkv@gmail.com"},"maintainers":[{"name":"octave","email":"chinsay@gmail.com"},{"name":"christkv","email":"christkv@gmail.com"}],"dist":{"shasum":"a30a0ea76fce326670c500832c7737a8577cf405","tarball":"https://registry.npmjs.org/bson/-/bson-0.3.0.tgz"}},"0.3.1":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"version":"0.3.1","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"contributors":[],"repository":{"type":"git","url":"git://github.com/mongodb/js-bson.git"},"bugs":{"url":"https://github.com/mongodb/js-bson/issues"},"devDependencies":{"nodeunit":"0.9.0","gleak":"0.2.3","one":"2.X.X"},"optionalDependencies":{"bson-ext":"~0.1"},"config":{"native":false},"main":"./lib/bson/index","directories":{"lib":"./lib/bson"},"engines":{"node":">=0.6.19"},"scripts":{"install":"(node-gyp rebuild 2> builderror.log) || (exit 0)","test":"nodeunit ./test/node && TEST_NATIVE=TRUE nodeunit ./test/node"},"browser":"lib/bson/bson.js","licenses":[{"type":"Apache License, Version 2.0","url":"http://www.apache.org/licenses/LICENSE-2.0"}],"gitHead":"b750f1a374f594059f2634bfc476e98623f0c9c3","homepage":"https://github.com/mongodb/js-bson","dependencies":{"bson-ext":"~0.1"},"_id":"bson@0.3.1","_shasum":"08882fb3a29ee41738a2bcbff8af7081ad9f35bb","_from":".","_npmVersion":"1.4.28","_npmUser":{"name":"christkv","email":"christkv@gmail.com"},"maintainers":[{"name":"octave","email":"chinsay@gmail.com"},{"name":"christkv","email":"christkv@gmail.com"}],"dist":{"shasum":"08882fb3a29ee41738a2bcbff8af7081ad9f35bb","tarball":"https://registry.npmjs.org/bson/-/bson-0.3.1.tgz"}},"0.3.2":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"version":"0.3.2","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"contributors":[],"repository":{"type":"git","url":"git://github.com/mongodb/js-bson.git"},"bugs":{"url":"https://github.com/mongodb/js-bson/issues"},"devDependencies":{"nodeunit":"0.9.0","gleak":"0.2.3","one":"2.X.X"},"optionalDependencies":{"bson-ext":"~0.1"},"config":{"native":false},"main":"./lib/bson/index","directories":{"lib":"./lib/bson"},"engines":{"node":">=0.6.19"},"scripts":{"test":"nodeunit ./test/node && TEST_NATIVE=TRUE nodeunit ./test/node"},"browser":"lib/bson/bson.js","licenses":[{"type":"Apache License, Version 2.0","url":"http://www.apache.org/licenses/LICENSE-2.0"}],"gitHead":"42c18a3cb68ed5188f4e9653d04e341b06d31d6c","homepage":"https://github.com/mongodb/js-bson","dependencies":{"bson-ext":"~0.1"},"_id":"bson@0.3.2","_shasum":"56753c5e8d86d0f45744b93a9693e4f60a8bbd6c","_from":".","_npmVersion":"2.7.4","_nodeVersion":"0.12.2","_npmUser":{"name":"christkv","email":"christkv@gmail.com"},"maintainers":[{"name":"octave","email":"chinsay@gmail.com"},{"name":"christkv","email":"christkv@gmail.com"}],"dist":{"shasum":"56753c5e8d86d0f45744b93a9693e4f60a8bbd6c","tarball":"https://registry.npmjs.org/bson/-/bson-0.3.2.tgz"}},"0.4.0":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"version":"0.4.0","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"contributors":[],"repository":{"type":"git","url":"git://github.com/mongodb/js-bson.git"},"bugs":{"url":"https://github.com/mongodb/js-bson/issues"},"devDependencies":{"nodeunit":"0.9.0","gleak":"0.2.3","one":"2.X.X","benchmark":"1.0.0","colors":"1.1.0"},"config":{"native":false},"main":"./lib/bson/index","directories":{"lib":"./lib/bson"},"engines":{"node":">=0.6.19"},"scripts":{"test":"nodeunit ./test/node"},"browser":"lib/bson/bson.js","licenses":[{"type":"Apache License, Version 2.0","url":"http://www.apache.org/licenses/LICENSE-2.0"}],"gitHead":"348c1f4314f9b89313f1af10066b88c12e39f8f8","homepage":"https://github.com/mongodb/js-bson","_id":"bson@0.4.0","_shasum":"3a99dcd62626df9333e111fc0d5d5518c6abd323","_from":".","_npmVersion":"2.7.4","_nodeVersion":"0.12.2","_npmUser":{"name":"christkv","email":"christkv@gmail.com"},"maintainers":[{"name":"octave","email":"chinsay@gmail.com"},{"name":"christkv","email":"christkv@gmail.com"}],"dist":{"shasum":"3a99dcd62626df9333e111fc0d5d5518c6abd323","tarball":"https://registry.npmjs.org/bson/-/bson-0.4.0.tgz"}},"0.4.1":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"version":"0.4.1","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"contributors":[],"repository":{"type":"git","url":"git://github.com/mongodb/js-bson.git"},"bugs":{"url":"https://github.com/mongodb/js-bson/issues"},"devDependencies":{"nodeunit":"0.9.0","gleak":"0.2.3","one":"2.X.X","benchmark":"1.0.0","colors":"1.1.0"},"config":{"native":false},"main":"./lib/bson/index","directories":{"lib":"./lib/bson"},"engines":{"node":">=0.6.19"},"scripts":{"test":"nodeunit ./test/node"},"browser":"lib/bson/bson.js","licenses":[{"type":"Apache License, Version 2.0","url":"http://www.apache.org/licenses/LICENSE-2.0"}],"gitHead":"4aef54faf60fe12bfb1def3af0150a8732450c4c","homepage":"https://github.com/mongodb/js-bson","_id":"bson@0.4.1","_shasum":"4a3051788cb6ffc78fac909aa9775ef1db9a04be","_from":".","_npmVersion":"2.7.4","_nodeVersion":"0.12.2","_npmUser":{"name":"christkv","email":"christkv@gmail.com"},"maintainers":[{"name":"octave","email":"chinsay@gmail.com"},{"name":"christkv","email":"christkv@gmail.com"}],"dist":{"shasum":"4a3051788cb6ffc78fac909aa9775ef1db9a04be","tarball":"https://registry.npmjs.org/bson/-/bson-0.4.1.tgz"}},"0.4.2":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"version":"0.4.2","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"contributors":[],"repository":{"type":"git","url":"git://github.com/mongodb/js-bson.git"},"bugs":{"url":"https://github.com/mongodb/js-bson/issues"},"devDependencies":{"nodeunit":"0.9.0","gleak":"0.2.3","one":"2.X.X","benchmark":"1.0.0","colors":"1.1.0"},"config":{"native":false},"main":"./lib/bson/index","directories":{"lib":"./lib/bson"},"engines":{"node":">=0.6.19"},"scripts":{"test":"nodeunit ./test/node"},"browser":"lib/bson/bson.js","licenses":[{"type":"Apache License, Version 2.0","url":"http://www.apache.org/licenses/LICENSE-2.0"}],"gitHead":"0a82f7eeb7359ad6cae405e6d49457fc6d2bbab4","homepage":"https://github.com/mongodb/js-bson","_id":"bson@0.4.2","_shasum":"4fe0e8ba9de74c8b640fd1eb4682d99b85940814","_from":".","_npmVersion":"2.7.4","_nodeVersion":"0.12.2","_npmUser":{"name":"christkv","email":"christkv@gmail.com"},"maintainers":[{"name":"octave","email":"chinsay@gmail.com"},{"name":"christkv","email":"christkv@gmail.com"}],"dist":{"shasum":"4fe0e8ba9de74c8b640fd1eb4682d99b85940814","tarball":"https://registry.npmjs.org/bson/-/bson-0.4.2.tgz"}},"0.4.3":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"version":"0.4.3","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"contributors":[],"repository":{"type":"git","url":"git://github.com/mongodb/js-bson.git"},"bugs":{"url":"https://github.com/mongodb/js-bson/issues"},"devDependencies":{"nodeunit":"0.9.0","gleak":"0.2.3","one":"2.X.X","benchmark":"1.0.0","colors":"1.1.0"},"config":{"native":false},"main":"./lib/bson/index","directories":{"lib":"./lib/bson"},"engines":{"node":">=0.6.19"},"scripts":{"test":"nodeunit ./test/node"},"browser":"lib/bson/bson.js","licenses":[{"type":"Apache License, Version 2.0","url":"http://www.apache.org/licenses/LICENSE-2.0"}],"gitHead":"0dbe5bb378c69de17c216263a7aa9af078e187c4","homepage":"https://github.com/mongodb/js-bson","_id":"bson@0.4.3","_shasum":"a2288caee518976e56e147593e25b8fcc6598d0f","_from":".","_npmVersion":"2.7.4","_nodeVersion":"0.12.2","_npmUser":{"name":"christkv","email":"christkv@gmail.com"},"maintainers":[{"name":"octave","email":"chinsay@gmail.com"},{"name":"christkv","email":"christkv@gmail.com"}],"dist":{"shasum":"a2288caee518976e56e147593e25b8fcc6598d0f","tarball":"https://registry.npmjs.org/bson/-/bson-0.4.3.tgz"}},"0.4.4":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"version":"0.4.4","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"contributors":[],"repository":{"type":"git","url":"git://github.com/mongodb/js-bson.git"},"bugs":{"url":"https://github.com/mongodb/js-bson/issues"},"devDependencies":{"nodeunit":"0.9.0","gleak":"0.2.3","one":"2.X.X","benchmark":"1.0.0","colors":"1.1.0"},"config":{"native":false},"main":"./lib/bson/index","directories":{"lib":"./lib/bson"},"engines":{"node":">=0.6.19"},"scripts":{"test":"nodeunit ./test/node"},"browser":"lib/bson/bson.js","licenses":[{"type":"Apache License, Version 2.0","url":"http://www.apache.org/licenses/LICENSE-2.0"}],"gitHead":"4aefa810fe76e46aa3b9ff34ca5cfac0d1069172","homepage":"https://github.com/mongodb/js-bson","_id":"bson@0.4.4","_shasum":"991006c38f396f472df0623dd6f4deee071fae87","_from":".","_npmVersion":"2.7.4","_nodeVersion":"0.12.2","_npmUser":{"name":"christkv","email":"christkv@gmail.com"},"maintainers":[{"name":"octave","email":"chinsay@gmail.com"},{"name":"christkv","email":"christkv@gmail.com"}],"dist":{"shasum":"991006c38f396f472df0623dd6f4deee071fae87","tarball":"https://registry.npmjs.org/bson/-/bson-0.4.4.tgz"}},"0.4.5":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"version":"0.4.5","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"contributors":[],"repository":{"type":"git","url":"git://github.com/mongodb/js-bson.git"},"bugs":{"url":"https://github.com/mongodb/js-bson/issues"},"devDependencies":{"nodeunit":"0.9.0","gleak":"0.2.3","one":"2.X.X","benchmark":"1.0.0","colors":"1.1.0"},"config":{"native":false},"main":"./lib/bson/index","directories":{"lib":"./lib/bson"},"engines":{"node":">=0.6.19"},"scripts":{"test":"nodeunit ./test/node"},"browser":"lib/bson/bson.js","licenses":[{"type":"Apache License, Version 2.0","url":"http://www.apache.org/licenses/LICENSE-2.0"}],"gitHead":"bb9556580e50570c570b95ad75b5ce8e8b295c91","homepage":"https://github.com/mongodb/js-bson","_id":"bson@0.4.5","_shasum":"61f795d0040e6e4fad84c0e7b67908cab5138d5a","_from":".","_npmVersion":"1.4.28","_npmUser":{"name":"christkv","email":"christkv@gmail.com"},"maintainers":[{"name":"octave","email":"chinsay@gmail.com"},{"name":"christkv","email":"christkv@gmail.com"}],"dist":{"shasum":"61f795d0040e6e4fad84c0e7b67908cab5138d5a","tarball":"https://registry.npmjs.org/bson/-/bson-0.4.5.tgz"}},"0.4.6":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"version":"0.4.6","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"contributors":[],"repository":{"type":"git","url":"git://github.com/mongodb/js-bson.git"},"bugs":{"url":"https://github.com/mongodb/js-bson/issues"},"devDependencies":{"nodeunit":"0.9.0","gleak":"0.2.3","one":"2.X.X","benchmark":"1.0.0","colors":"1.1.0"},"config":{"native":false},"main":"./lib/bson/index","directories":{"lib":"./lib/bson"},"engines":{"node":">=0.6.19"},"scripts":{"test":"nodeunit ./test/node"},"browser":"lib/bson/bson.js","license":"Apache-2.0","gitHead":"fbbda01f0bd50bb7febfa900a5acf7b24d300c52","homepage":"https://github.com/mongodb/js-bson","_id":"bson@0.4.6","_shasum":"f0cdb3ec5dbab72eda030a06317b10d6102a3d96","_from":".","_npmVersion":"1.4.28","_npmUser":{"name":"christkv","email":"christkv@gmail.com"},"maintainers":[{"name":"octave","email":"chinsay@gmail.com"},{"name":"christkv","email":"christkv@gmail.com"}],"dist":{"shasum":"f0cdb3ec5dbab72eda030a06317b10d6102a3d96","tarball":"https://registry.npmjs.org/bson/-/bson-0.4.6.tgz"}},"0.4.7":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"version":"0.4.7","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"contributors":[],"repository":{"type":"git","url":"git://github.com/mongodb/js-bson.git"},"bugs":{"url":"https://github.com/mongodb/js-bson/issues"},"devDependencies":{"nodeunit":"0.9.0","gleak":"0.2.3","one":"2.X.X","benchmark":"1.0.0","colors":"1.1.0"},"config":{"native":false},"main":"./lib/bson/index","directories":{"lib":"./lib/bson"},"engines":{"node":">=0.6.19"},"scripts":{"test":"nodeunit ./test/node"},"browser":"lib/bson/bson.js","license":"Apache-2.0","gitHead":"a491ddef825e0609f8655c0a6f716477b47b6c98","homepage":"https://github.com/mongodb/js-bson","_id":"bson@0.4.7","_shasum":"44a369c2fafe2cd9cd08af0b157c891ebf7d90ad","_from":".","_npmVersion":"2.11.1","_nodeVersion":"2.3.0","_npmUser":{"name":"christkv","email":"christkv@gmail.com"},"maintainers":[{"name":"octave","email":"chinsay@gmail.com"},{"name":"christkv","email":"christkv@gmail.com"}],"dist":{"shasum":"44a369c2fafe2cd9cd08af0b157c891ebf7d90ad","tarball":"https://registry.npmjs.org/bson/-/bson-0.4.7.tgz"}},"0.4.8":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"version":"0.4.8","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"contributors":[],"repository":{"type":"git","url":"git://github.com/mongodb/js-bson.git"},"bugs":{"url":"https://github.com/mongodb/js-bson/issues"},"devDependencies":{"nodeunit":"0.9.0","gleak":"0.2.3","one":"2.X.X","benchmark":"1.0.0","colors":"1.1.0"},"config":{"native":false},"main":"./lib/bson/index","directories":{"lib":"./lib/bson"},"engines":{"node":">=0.6.19"},"scripts":{"test":"nodeunit ./test/node"},"browser":"lib/bson/bson.js","license":"Apache-2.0","gitHead":"b356ee449b83373833db40fabe1672ed39ce1630","homepage":"https://github.com/mongodb/js-bson","_id":"bson@0.4.8","_shasum":"006020eaee74f5897fb4985b1e413f251c765399","_from":".","_npmVersion":"1.4.28","_npmUser":{"name":"christkv","email":"christkv@gmail.com"},"maintainers":[{"name":"octave","email":"chinsay@gmail.com"},{"name":"christkv","email":"christkv@gmail.com"}],"dist":{"shasum":"006020eaee74f5897fb4985b1e413f251c765399","tarball":"https://registry.npmjs.org/bson/-/bson-0.4.8.tgz"}},"0.2.22":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"version":"0.2.22","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"contributors":[],"repository":{"type":"git","url":"git://github.com/mongodb/js-bson.git"},"bugs":{"url":"https://github.com/mongodb/js-bson/issues"},"dependencies":{"nan":"~1.8"},"devDependencies":{"nodeunit":"0.9.0","gleak":"0.2.3","one":"2.X.X"},"config":{"native":false},"main":"./lib/bson/index","directories":{"lib":"./lib/bson"},"engines":{"node":">=0.6.19"},"scripts":{"install":"(node-gyp rebuild 2> builderror.log) || (exit 0)","test":"nodeunit ./test/node && TEST_NATIVE=TRUE nodeunit ./test/node"},"browser":"lib/bson/bson.js","licenses":[{"type":"Apache License, Version 2.0","url":"http://www.apache.org/licenses/LICENSE-2.0"}],"gitHead":"34dd32f6a8dc71943be7129c60826b6e0d005a71","homepage":"https://github.com/mongodb/js-bson","_id":"bson@0.2.22","_shasum":"fcda103f26d0c074d5a52d50927db80fd02b4b39","_from":".","_npmVersion":"2.11.3","_nodeVersion":"2.3.3","_npmUser":{"name":"christkv","email":"christkv@gmail.com"},"maintainers":[{"name":"octave","email":"chinsay@gmail.com"},{"name":"christkv","email":"christkv@gmail.com"}],"dist":{"shasum":"fcda103f26d0c074d5a52d50927db80fd02b4b39","tarball":"https://registry.npmjs.org/bson/-/bson-0.2.22.tgz"}},"0.4.10":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"version":"0.4.10","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"contributors":[],"repository":{"type":"git","url":"git://github.com/mongodb/js-bson.git"},"bugs":{"url":"https://github.com/mongodb/js-bson/issues"},"devDependencies":{"nodeunit":"0.9.0","gleak":"0.2.3","one":"2.X.X","benchmark":"1.0.0","colors":"1.1.0"},"config":{"native":false},"main":"./lib/bson/index","directories":{"lib":"./lib/bson"},"engines":{"node":">=0.6.19"},"scripts":{"test":"nodeunit ./test/node"},"browser":"lib/bson/bson.js","license":"Apache-2.0","gitHead":"791aacc4de128dbdf5a274497639626ba1d3a484","homepage":"https://github.com/mongodb/js-bson","_id":"bson@0.4.10","_shasum":"ccff000c1f42ab8efbad699a09a403104bee8fb1","_from":".","_npmVersion":"2.13.0","_nodeVersion":"2.4.0","_npmUser":{"name":"christkv","email":"christkv@gmail.com"},"maintainers":[{"name":"octave","email":"chinsay@gmail.com"},{"name":"christkv","email":"christkv@gmail.com"}],"dist":{"shasum":"ccff000c1f42ab8efbad699a09a403104bee8fb1","tarball":"https://registry.npmjs.org/bson/-/bson-0.4.10.tgz"}},"0.4.12":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"version":"0.4.12","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"contributors":[],"repository":{"type":"git","url":"git://github.com/mongodb/js-bson.git"},"bugs":{"url":"https://github.com/mongodb/js-bson/issues"},"devDependencies":{"nodeunit":"0.9.0","gleak":"0.2.3","one":"2.X.X","benchmark":"1.0.0","colors":"1.1.0"},"config":{"native":false},"main":"./lib/bson/index","directories":{"lib":"./lib/bson"},"engines":{"node":">=0.6.19"},"scripts":{"test":"nodeunit ./test/node"},"browser":"lib/bson/bson.js","license":"Apache-2.0","gitHead":"9e95db71c4b256327b0c04daea4dfdde6fda9045","homepage":"https://github.com/mongodb/js-bson","_id":"bson@0.4.12","_shasum":"db412319245b35bd41eeb7e1876199d857dfc2f9","_from":".","_npmVersion":"2.11.3","_nodeVersion":"0.12.7","_npmUser":{"name":"christkv","email":"christkv@gmail.com"},"maintainers":[{"name":"octave","email":"chinsay@gmail.com"},{"name":"christkv","email":"christkv@gmail.com"}],"dist":{"shasum":"db412319245b35bd41eeb7e1876199d857dfc2f9","tarball":"https://registry.npmjs.org/bson/-/bson-0.4.12.tgz"}},"0.4.13":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"version":"0.4.13","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"contributors":[],"repository":{"type":"git","url":"git://github.com/mongodb/js-bson.git"},"bugs":{"url":"https://github.com/mongodb/js-bson/issues"},"devDependencies":{"nodeunit":"0.9.0","gleak":"0.2.3","one":"2.X.X","benchmark":"1.0.0","colors":"1.1.0"},"config":{"native":false},"main":"./lib/bson/index","directories":{"lib":"./lib/bson"},"engines":{"node":">=0.6.19"},"scripts":{"test":"nodeunit ./test/node"},"browser":"lib/bson/bson.js","license":"Apache-2.0","gitHead":"8a1e3da34f6de552e78e0eedf0eed8b9cd2e8d97","homepage":"https://github.com/mongodb/js-bson","_id":"bson@0.4.13","_shasum":"edc756babe5084a65b1b8bb3b3f7150e34c992df","_from":".","_npmVersion":"1.4.28","_npmUser":{"name":"christkv","email":"christkv@gmail.com"},"maintainers":[{"name":"octave","email":"chinsay@gmail.com"},{"name":"christkv","email":"christkv@gmail.com"}],"dist":{"shasum":"edc756babe5084a65b1b8bb3b3f7150e34c992df","tarball":"https://registry.npmjs.org/bson/-/bson-0.4.13.tgz"}},"0.4.14":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"version":"0.4.14","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"contributors":[],"repository":{"type":"git","url":"git://github.com/mongodb/js-bson.git"},"bugs":{"url":"https://github.com/mongodb/js-bson/issues"},"devDependencies":{"nodeunit":"0.9.0","gleak":"0.2.3","one":"2.X.X","benchmark":"1.0.0","colors":"1.1.0"},"config":{"native":false},"main":"./lib/bson/index","directories":{"lib":"./lib/bson"},"engines":{"node":">=0.6.19"},"scripts":{"test":"nodeunit ./test/node"},"browser":"lib/bson/bson.js","license":"Apache-2.0","gitHead":"050a6215b847a1cc237e9361b035bab1a8d14d99","homepage":"https://github.com/mongodb/js-bson","_id":"bson@0.4.14","_shasum":"230fc142a20a1ff88a434da47819b52493af6530","_from":".","_npmVersion":"2.14.4","_nodeVersion":"4.1.1","_npmUser":{"name":"christkv","email":"christkv@gmail.com"},"maintainers":[{"name":"octave","email":"chinsay@gmail.com"},{"name":"christkv","email":"christkv@gmail.com"}],"dist":{"shasum":"230fc142a20a1ff88a434da47819b52493af6530","tarball":"https://registry.npmjs.org/bson/-/bson-0.4.14.tgz"}},"0.4.15":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"version":"0.4.15","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"contributors":[],"repository":{"type":"git","url":"git://github.com/mongodb/js-bson.git"},"bugs":{"url":"https://github.com/mongodb/js-bson/issues"},"devDependencies":{"nodeunit":"0.9.0","gleak":"0.2.3","one":"2.X.X","benchmark":"1.0.0","colors":"1.1.0"},"config":{"native":false},"main":"./lib/bson/index","directories":{"lib":"./lib/bson"},"engines":{"node":">=0.6.19"},"scripts":{"test":"nodeunit ./test/node"},"browser":"lib/bson/bson.js","license":"Apache-2.0","gitHead":"820553907c208ed192b28cd55f7aa1cea18dfbcd","homepage":"https://github.com/mongodb/js-bson","_id":"bson@0.4.15","_shasum":"d729d5fe3accf99e5b1935b0279d1489fdc6b142","_from":".","_npmVersion":"2.14.4","_nodeVersion":"4.1.1","_npmUser":{"name":"christkv","email":"christkv@gmail.com"},"maintainers":[{"name":"octave","email":"chinsay@gmail.com"},{"name":"christkv","email":"christkv@gmail.com"}],"dist":{"shasum":"d729d5fe3accf99e5b1935b0279d1489fdc6b142","tarball":"https://registry.npmjs.org/bson/-/bson-0.4.15.tgz"}},"0.4.16":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"version":"0.4.16","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"contributors":[],"repository":{"type":"git","url":"git://github.com/mongodb/js-bson.git"},"bugs":{"url":"https://github.com/mongodb/js-bson/issues"},"devDependencies":{"nodeunit":"0.9.0","gleak":"0.2.3","one":"2.X.X","benchmark":"1.0.0","colors":"1.1.0"},"config":{"native":false},"main":"./lib/bson/index","directories":{"lib":"./lib/bson"},"engines":{"node":">=0.6.19"},"scripts":{"test":"nodeunit ./test/node"},"browser":"lib/bson/bson.js","license":"Apache-2.0","gitHead":"4166146d0539a050946c1cae9188f274dd751ed9","homepage":"https://github.com/mongodb/js-bson","_id":"bson@0.4.16","_shasum":"e78fb993535123851f857fb83c7f68b1cd7e6caa","_from":".","_npmVersion":"2.14.4","_nodeVersion":"4.1.1","_npmUser":{"name":"christkv","email":"christkv@gmail.com"},"maintainers":[{"name":"octave","email":"chinsay@gmail.com"},{"name":"christkv","email":"christkv@gmail.com"}],"dist":{"shasum":"e78fb993535123851f857fb83c7f68b1cd7e6caa","tarball":"https://registry.npmjs.org/bson/-/bson-0.4.16.tgz"}},"0.4.17":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"version":"0.4.17","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"contributors":[],"repository":{"type":"git","url":"git://github.com/mongodb/js-bson.git"},"bugs":{"url":"https://github.com/mongodb/js-bson/issues"},"devDependencies":{"nodeunit":"0.9.0","gleak":"0.2.3","one":"2.X.X","benchmark":"1.0.0","colors":"1.1.0"},"config":{"native":false},"main":"./lib/bson/index","directories":{"lib":"./lib/bson"},"engines":{"node":">=0.6.19"},"scripts":{"test":"nodeunit ./test/node"},"browser":"lib/bson/bson.js","license":"Apache-2.0","gitHead":"7e6938e7f72825a9009b8ea3cb2bdd6ad2292971","homepage":"https://github.com/mongodb/js-bson","_id":"bson@0.4.17","_shasum":"74a22b98ebf417fe885f8a1829242f800a9f4eed","_from":".","_npmVersion":"2.14.7","_nodeVersion":"4.2.1","_npmUser":{"name":"christkv","email":"christkv@gmail.com"},"maintainers":[{"name":"octave","email":"chinsay@gmail.com"},{"name":"christkv","email":"christkv@gmail.com"}],"dist":{"shasum":"74a22b98ebf417fe885f8a1829242f800a9f4eed","tarball":"https://registry.npmjs.org/bson/-/bson-0.4.17.tgz"}},"0.4.18":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"version":"0.4.18","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"contributors":[],"repository":{"type":"git","url":"git://github.com/mongodb/js-bson.git"},"bugs":{"url":"https://github.com/mongodb/js-bson/issues"},"devDependencies":{"nodeunit":"0.9.0","gleak":"0.2.3","one":"2.X.X","benchmark":"1.0.0","colors":"1.1.0"},"config":{"native":false},"main":"./lib/bson/index","directories":{"lib":"./lib/bson"},"engines":{"node":">=0.6.19"},"scripts":{"test":"nodeunit ./test/node"},"browser":"lib/bson/bson.js","license":"Apache-2.0","gitHead":"02ca96b06b6163d0afbbe8d09da4da0e2ed40903","homepage":"https://github.com/mongodb/js-bson","_id":"bson@0.4.18","_shasum":"c236d27a1342f1ce2c62aa9236c017495611fd03","_from":".","_npmVersion":"2.14.7","_nodeVersion":"4.2.1","_npmUser":{"name":"christkv","email":"christkv@gmail.com"},"maintainers":[{"name":"octave","email":"chinsay@gmail.com"},{"name":"christkv","email":"christkv@gmail.com"}],"dist":{"shasum":"c236d27a1342f1ce2c62aa9236c017495611fd03","tarball":"https://registry.npmjs.org/bson/-/bson-0.4.18.tgz"}},"0.4.19":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"version":"0.4.19","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"contributors":[],"repository":{"type":"git","url":"git://github.com/mongodb/js-bson.git"},"bugs":{"url":"https://github.com/mongodb/js-bson/issues"},"devDependencies":{"nodeunit":"0.9.0","gleak":"0.2.3","one":"2.X.X","benchmark":"1.0.0","colors":"1.1.0"},"config":{"native":false},"main":"./lib/bson/index","directories":{"lib":"./lib/bson"},"engines":{"node":">=0.6.19"},"scripts":{"test":"nodeunit ./test/node"},"browser":"lib/bson/bson.js","license":"Apache-2.0","gitHead":"70852794697af3ff6c08f922b6961e80af94e9f0","homepage":"https://github.com/mongodb/js-bson","_id":"bson@0.4.19","_shasum":"1a340f39a83d163c18af9c5ca92d2b697a35be41","_from":".","_npmVersion":"2.14.7","_nodeVersion":"4.2.1","_npmUser":{"name":"christkv","email":"christkv@gmail.com"},"maintainers":[{"name":"octave","email":"chinsay@gmail.com"},{"name":"christkv","email":"christkv@gmail.com"}],"dist":{"shasum":"1a340f39a83d163c18af9c5ca92d2b697a35be41","tarball":"https://registry.npmjs.org/bson/-/bson-0.4.19.tgz"}},"0.4.20":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"version":"0.4.20","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"contributors":[],"repository":{"type":"git","url":"git://github.com/mongodb/js-bson.git"},"bugs":{"url":"https://github.com/mongodb/js-bson/issues"},"devDependencies":{"nodeunit":"0.9.0","gleak":"0.2.3","one":"2.X.X","benchmark":"1.0.0","colors":"1.1.0"},"config":{"native":false},"main":"./lib/bson/index","directories":{"lib":"./lib/bson"},"engines":{"node":">=0.6.19"},"scripts":{"test":"nodeunit ./test/node"},"browser":"lib/bson/bson.js","license":"Apache-2.0","gitHead":"7a57dc553c82ff1754d04e85fbbbc45b1dbc24fe","homepage":"https://github.com/mongodb/js-bson","_id":"bson@0.4.20","_shasum":"39b7fa42ef49378f71f40cbc165e46b41c2ff79e","_from":".","_npmVersion":"2.14.7","_nodeVersion":"4.2.2","_npmUser":{"name":"christkv","email":"christkv@gmail.com"},"maintainers":[{"name":"octave","email":"chinsay@gmail.com"},{"name":"christkv","email":"christkv@gmail.com"}],"dist":{"shasum":"39b7fa42ef49378f71f40cbc165e46b41c2ff79e","tarball":"https://registry.npmjs.org/bson/-/bson-0.4.20.tgz"}},"0.4.21":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"version":"0.4.21","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"contributors":[],"repository":{"type":"git","url":"git://github.com/mongodb/js-bson.git"},"bugs":{"url":"https://github.com/mongodb/js-bson/issues"},"devDependencies":{"nodeunit":"0.9.0","gleak":"0.2.3","one":"2.X.X","benchmark":"1.0.0","colors":"1.1.0"},"config":{"native":false},"main":"./lib/bson/index","directories":{"lib":"./lib/bson"},"engines":{"node":">=0.6.19"},"scripts":{"test":"nodeunit ./test/node"},"browser":"lib/bson/bson.js","license":"Apache-2.0","gitHead":"d88c87a7924f8d6a8b37366d7b3b39531cad521c","homepage":"https://github.com/mongodb/js-bson","_id":"bson@0.4.21","_shasum":"b8eae38c5aa94f7b8e64e8cfed0f42e58308ed95","_from":".","_npmVersion":"2.14.12","_nodeVersion":"4.2.4","_npmUser":{"name":"christkv","email":"christkv@gmail.com"},"maintainers":[{"name":"octave","email":"chinsay@gmail.com"},{"name":"christkv","email":"christkv@gmail.com"}],"dist":{"shasum":"b8eae38c5aa94f7b8e64e8cfed0f42e58308ed95","tarball":"https://registry.npmjs.org/bson/-/bson-0.4.21.tgz"}},"0.4.22":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"version":"0.4.22","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"contributors":[],"repository":{"type":"git","url":"git://github.com/mongodb/js-bson.git"},"bugs":{"url":"https://github.com/mongodb/js-bson/issues"},"devDependencies":{"nodeunit":"0.9.0","gleak":"0.2.3","one":"2.X.X","benchmark":"1.0.0","colors":"1.1.0"},"config":{"native":false},"main":"./lib/bson/index","directories":{"lib":"./lib/bson"},"engines":{"node":">=0.6.19"},"scripts":{"test":"nodeunit ./test/node"},"browser":"lib/bson/bson.js","license":"Apache-2.0","gitHead":"d40aeb21e4319829a2ee53d1a6f7932f460cf2f8","homepage":"https://github.com/mongodb/js-bson","_id":"bson@0.4.22","_shasum":"3dee54807286363bdf921c22de54e8d920a052d1","_from":".","_npmVersion":"2.14.12","_nodeVersion":"4.2.4","_npmUser":{"name":"christkv","email":"christkv@gmail.com"},"maintainers":[{"name":"octave","email":"chinsay@gmail.com"},{"name":"christkv","email":"christkv@gmail.com"}],"dist":{"shasum":"3dee54807286363bdf921c22de54e8d920a052d1","tarball":"https://registry.npmjs.org/bson/-/bson-0.4.22.tgz"},"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/bson-0.4.22.tgz_1457124275045_0.9397505370434374"}},"0.4.23":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"version":"0.4.23","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"contributors":[],"repository":{"type":"git","url":"git://github.com/mongodb/js-bson.git"},"bugs":{"url":"https://github.com/mongodb/js-bson/issues"},"devDependencies":{"nodeunit":"0.9.0","gleak":"0.2.3","benchmark":"1.0.0","colors":"1.1.0"},"config":{"native":false},"main":"./lib/bson/index","directories":{"lib":"./lib/bson"},"engines":{"node":">=0.6.19"},"scripts":{"test":"nodeunit ./test/node"},"browser":"lib/bson/bson.js","license":"Apache-2.0","gitHead":"528680fa751300364f7a939258b621740613f8ae","homepage":"https://github.com/mongodb/js-bson","_id":"bson@0.4.23","_shasum":"e65a2e3c7507ffade4109bc7575a76e50f8da915","_from":".","_npmVersion":"2.15.0","_nodeVersion":"4.4.2","_npmUser":{"name":"christkv","email":"christkv@gmail.com"},"maintainers":[{"name":"octave","email":"chinsay@gmail.com"},{"name":"christkv","email":"christkv@gmail.com"}],"dist":{"shasum":"e65a2e3c7507ffade4109bc7575a76e50f8da915","tarball":"https://registry.npmjs.org/bson/-/bson-0.4.23.tgz"},"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/bson-0.4.23.tgz_1460102555550_0.1291605734732002"}},"0.5.0":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"files":["lib","browser_build","alternate_parsers","bower.json","tools","deserializer_bak.js"],"version":"0.5.0","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"contributors":[],"repository":{"type":"git","url":"https://github.com/mongodb/js-bson"},"bugs":{"url":"https://github.com/mongodb/js-bson/issues"},"devDependencies":{"benchmark":"1.0.0","colors":"1.1.0","gleak":"0.2.3","nodeunit":"0.9.0"},"config":{"native":false},"main":"./lib/bson/index","directories":{"lib":"./lib/bson"},"engines":{"node":">=0.6.19"},"scripts":{"test":"nodeunit ./test/node"},"browser":"lib/bson/bson.js","license":"Apache-2.0","gitHead":"323ad7ab19c30e318a367dce5d7859b4622a1e5b","homepage":"https://github.com/mongodb/js-bson","_id":"bson@0.5.0","_shasum":"eccdcda8517765f35bc2c3a4dbfc3ec6124e2d5e","_from":".","_npmVersion":"2.15.1","_nodeVersion":"4.4.4","_npmUser":{"name":"christkv","email":"christkv@gmail.com"},"maintainers":[{"name":"octave","email":"chinsay@gmail.com"},{"name":"christkv","email":"christkv@gmail.com"}],"dist":{"shasum":"eccdcda8517765f35bc2c3a4dbfc3ec6124e2d5e","tarball":"https://registry.npmjs.org/bson/-/bson-0.5.0.tgz"},"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/bson-0.5.0.tgz_1467711218603_0.7029287437908351"}},"0.5.1":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"files":["lib","browser_build","alternate_parsers","bower.json","tools","deserializer_bak.js"],"version":"0.5.1","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"contributors":[],"repository":{"type":"git","url":"https://github.com/mongodb/js-bson"},"bugs":{"url":"https://github.com/mongodb/js-bson/issues"},"devDependencies":{"benchmark":"1.0.0","colors":"1.1.0","gleak":"0.2.3","nodeunit":"0.9.0"},"config":{"native":false},"main":"./lib/bson/index","directories":{"lib":"./lib/bson"},"engines":{"node":">=0.6.19"},"scripts":{"test":"nodeunit ./test/node"},"browser":"lib/bson/bson.js","license":"Apache-2.0","gitHead":"d3cb58bbd161ed341f12ba34176f81c52ed927d1","homepage":"https://github.com/mongodb/js-bson","_id":"bson@0.5.1","_shasum":"e011d0d3144d4ad8ffb080a739fe86a88e07e598","_from":".","_npmVersion":"2.15.1","_nodeVersion":"4.4.4","_npmUser":{"name":"christkv","email":"christkv@gmail.com"},"maintainers":[{"name":"octave","email":"chinsay@gmail.com"},{"name":"christkv","email":"christkv@gmail.com"}],"dist":{"shasum":"e011d0d3144d4ad8ffb080a739fe86a88e07e598","tarball":"https://registry.npmjs.org/bson/-/bson-0.5.1.tgz"},"_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/bson-0.5.1.tgz_1468224734586_0.9255818012170494"}},"0.5.2":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"files":["lib","browser_build","alternate_parsers","bower.json","tools","deserializer_bak.js"],"version":"0.5.2","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"contributors":[],"repository":{"type":"git","url":"https://github.com/mongodb/js-bson"},"bugs":{"url":"https://github.com/mongodb/js-bson/issues"},"devDependencies":{"benchmark":"1.0.0","colors":"1.1.0","gleak":"0.2.3","nodeunit":"0.9.0"},"config":{"native":false},"main":"./lib/bson/index","directories":{"lib":"./lib/bson"},"engines":{"node":">=0.6.19"},"scripts":{"test":"nodeunit ./test/node"},"browser":"lib/bson/bson.js","license":"Apache-2.0","gitHead":"afc468f7119c8dcea19e82984ace3eaa9214134f","homepage":"https://github.com/mongodb/js-bson","_id":"bson@0.5.2","_shasum":"ff0fbbf90a99eee06bf33c42edf73e51690fbebd","_from":".","_npmVersion":"2.15.1","_nodeVersion":"4.4.4","_npmUser":{"name":"christkv","email":"christkv@gmail.com"},"maintainers":[{"name":"octave","email":"chinsay@gmail.com"},{"name":"christkv","email":"christkv@gmail.com"}],"dist":{"shasum":"ff0fbbf90a99eee06bf33c42edf73e51690fbebd","tarball":"https://registry.npmjs.org/bson/-/bson-0.5.2.tgz"},"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/bson-0.5.2.tgz_1468236520063_0.9097728193737566"}},"0.5.3":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"files":["lib","browser_build","alternate_parsers","bower.json","tools","deserializer_bak.js"],"version":"0.5.3","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"contributors":[],"repository":{"type":"git","url":"git+https://github.com/mongodb/js-bson.git"},"bugs":{"url":"https://github.com/mongodb/js-bson/issues"},"devDependencies":{"benchmark":"1.0.0","colors":"1.1.0","gleak":"0.2.3","nodeunit":"0.9.0"},"config":{"native":false},"main":"./lib/bson/index","directories":{"lib":"./lib/bson"},"engines":{"node":">=0.6.19"},"scripts":{"test":"nodeunit ./test/node"},"browser":"lib/bson/bson.js","license":"Apache-2.0","gitHead":"02449a639d123aec1ac77299d950240ece624ff8","homepage":"https://github.com/mongodb/js-bson#readme","_id":"bson@0.5.3","_shasum":"68752d6ff4001971e6bdea5dc6462bdef3ba53c4","_from":".","_npmVersion":"3.9.5","_nodeVersion":"6.2.2","_npmUser":{"name":"christkv","email":"christkv@gmail.com"},"dist":{"shasum":"68752d6ff4001971e6bdea5dc6462bdef3ba53c4","tarball":"https://registry.npmjs.org/bson/-/bson-0.5.3.tgz"},"maintainers":[{"name":"octave","email":"chinsay@gmail.com"},{"name":"christkv","email":"christkv@gmail.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/bson-0.5.3.tgz_1471337701195_0.4483831822872162"}},"0.5.4":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"files":["lib","browser_build","alternate_parsers","bower.json","tools","deserializer_bak.js"],"version":"0.5.4","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"contributors":[],"repository":{"type":"git","url":"git+https://github.com/mongodb/js-bson.git"},"bugs":{"url":"https://github.com/mongodb/js-bson/issues"},"devDependencies":{"benchmark":"1.0.0","colors":"1.1.0","gleak":"0.2.3","nodeunit":"0.9.0"},"config":{"native":false},"main":"./lib/bson/index","directories":{"lib":"./lib/bson"},"engines":{"node":">=0.6.19"},"scripts":{"test":"nodeunit ./test/node"},"browser":"lib/bson/bson.js","license":"Apache-2.0","gitHead":"d09c90975155fd581b4c09922dda493eeb9ab293","homepage":"https://github.com/mongodb/js-bson#readme","_id":"bson@0.5.4","_shasum":"5623d7c2670f687258e17fb99499d9fe6c4e1fc5","_from":".","_npmVersion":"3.9.5","_nodeVersion":"6.2.2","_npmUser":{"name":"christkv","email":"christkv@gmail.com"},"dist":{"shasum":"5623d7c2670f687258e17fb99499d9fe6c4e1fc5","tarball":"https://registry.npmjs.org/bson/-/bson-0.5.4.tgz"},"maintainers":[{"name":"octave","email":"chinsay@gmail.com"},{"name":"christkv","email":"christkv@gmail.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/bson-0.5.4.tgz_1471946387197_0.6965692224912345"}},"0.5.5":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"files":["lib","browser_build","alternate_parsers","bower.json","tools","deserializer_bak.js"],"version":"0.5.5","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"contributors":[],"repository":{"type":"git","url":"git+https://github.com/mongodb/js-bson.git"},"bugs":{"url":"https://github.com/mongodb/js-bson/issues"},"devDependencies":{"benchmark":"1.0.0","colors":"1.1.0","gleak":"0.2.3","nodeunit":"0.9.0"},"config":{"native":false},"main":"./lib/bson/index","directories":{"lib":"./lib/bson"},"engines":{"node":">=0.6.19"},"scripts":{"test":"nodeunit ./test/node"},"browser":"lib/bson/bson.js","license":"Apache-2.0","gitHead":"5034772f418aea3733f762fde2827a4ac55c4a10","homepage":"https://github.com/mongodb/js-bson#readme","_id":"bson@0.5.5","_shasum":"1d6725d400f0fbf0271bf6bafc8fa1126c29983b","_from":".","_npmVersion":"3.9.5","_nodeVersion":"6.2.2","_npmUser":{"name":"christkv","email":"christkv@gmail.com"},"dist":{"shasum":"1d6725d400f0fbf0271bf6bafc8fa1126c29983b","tarball":"https://registry.npmjs.org/bson/-/bson-0.5.5.tgz"},"maintainers":[{"name":"octave","email":"chinsay@gmail.com"},{"name":"christkv","email":"christkv@gmail.com"}],"_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/bson-0.5.5.tgz_1473930239067_0.13798079104162753"}},"0.5.6":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"files":["lib","browser_build","alternate_parsers","bower.json","tools","deserializer_bak.js"],"version":"0.5.6","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"contributors":[],"repository":{"type":"git","url":"git+https://github.com/mongodb/js-bson.git"},"bugs":{"url":"https://github.com/mongodb/js-bson/issues"},"devDependencies":{"benchmark":"1.0.0","colors":"1.1.0","gleak":"0.2.3","nodeunit":"0.9.0"},"config":{"native":false},"main":"./lib/bson/index","directories":{"lib":"./lib/bson"},"engines":{"node":">=0.6.19"},"scripts":{"test":"nodeunit ./test/node"},"browser":"lib/bson/bson.js","license":"Apache-2.0","gitHead":"026d2f473e662ac8d040a7c0ecb44a1d79f2eeba","homepage":"https://github.com/mongodb/js-bson#readme","_id":"bson@0.5.6","_shasum":"e03de80a692c28fca4396f0d14c97069bd2b73a6","_from":".","_npmVersion":"2.15.8","_nodeVersion":"4.4.7","_npmUser":{"name":"christkv","email":"christkv@gmail.com"},"dist":{"shasum":"e03de80a692c28fca4396f0d14c97069bd2b73a6","tarball":"https://registry.npmjs.org/bson/-/bson-0.5.6.tgz"},"maintainers":[{"name":"octave","email":"chinsay@gmail.com"},{"name":"christkv","email":"christkv@gmail.com"}],"_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/bson-0.5.6.tgz_1476886435661_0.06038503861054778"}},"0.5.7":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"files":["lib","browser_build","alternate_parsers","bower.json","tools","deserializer_bak.js"],"version":"0.5.7","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"contributors":[],"repository":{"type":"git","url":"git+https://github.com/mongodb/js-bson.git"},"bugs":{"url":"https://github.com/mongodb/js-bson/issues"},"devDependencies":{"benchmark":"1.0.0","colors":"1.1.0","gleak":"0.2.3","nodeunit":"0.9.0"},"config":{"native":false},"main":"./lib/bson/index","directories":{"lib":"./lib/bson"},"engines":{"node":">=0.6.19"},"scripts":{"test":"nodeunit ./test/node"},"browser":"lib/bson/bson.js","license":"Apache-2.0","gitHead":"c3bc67c4e89e795beca2d6d309e7a840b740574d","homepage":"https://github.com/mongodb/js-bson#readme","_id":"bson@0.5.7","_shasum":"0d11fe0936c1fee029e11f7063f5d0ab2422ea3e","_from":".","_npmVersion":"3.10.8","_nodeVersion":"6.9.1","_npmUser":{"name":"christkv","email":"christkv@gmail.com"},"dist":{"shasum":"0d11fe0936c1fee029e11f7063f5d0ab2422ea3e","tarball":"https://registry.npmjs.org/bson/-/bson-0.5.7.tgz"},"maintainers":[{"name":"octave","email":"chinsay@gmail.com"},{"name":"christkv","email":"christkv@gmail.com"}],"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/bson-0.5.7.tgz_1479477418380_0.5046395626850426"}},"1.0.0":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"files":["lib","index.js","browser_build","bower.json"],"version":"1.0.0","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"contributors":[],"repository":{"type":"git","url":"git+https://github.com/mongodb/js-bson.git"},"bugs":{"url":"https://github.com/mongodb/js-bson/issues"},"devDependencies":{"benchmark":"1.0.0","colors":"1.1.0","nodeunit":"0.9.0","babel-core":"^6.14.0","babel-loader":"^6.2.5","babel-polyfill":"^6.13.0","babel-preset-es2015":"^6.14.0","babel-preset-stage-0":"^6.5.0","babel-register":"^6.14.0","webpack":"^1.13.2","webpack-polyfills-plugin":"0.0.9"},"config":{"native":false},"main":"./index","directories":{"lib":"./lib/bson"},"engines":{"node":">=0.6.19"},"scripts":{"test":"nodeunit ./test/node","build":"webpack --config ./webpack.dist.config.js"},"browser":"lib/bson/bson.js","license":"Apache-2.0","gitHead":"4ca8e388f4b5a1aaa06a464dedc6a95fb2ab486c","homepage":"https://github.com/mongodb/js-bson#readme","_id":"bson@1.0.0","_shasum":"4d95affb53990c863b8fc9f5ba1fa8f478e7ebab","_from":".","_npmVersion":"3.10.8","_nodeVersion":"6.9.1","_npmUser":{"name":"christkv","email":"christkv@gmail.com"},"dist":{"shasum":"4d95affb53990c863b8fc9f5ba1fa8f478e7ebab","tarball":"https://registry.npmjs.org/bson/-/bson-1.0.0.tgz"},"maintainers":[{"name":"octave","email":"chinsay@gmail.com"},{"name":"christkv","email":"christkv@gmail.com"}],"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/bson-1.0.0.tgz_1480937271910_0.46201777923852205"}},"1.0.1":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"files":["lib","index.js","browser_build","bower.json"],"version":"1.0.1","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"contributors":[],"repository":{"type":"git","url":"git+https://github.com/mongodb/js-bson.git"},"bugs":{"url":"https://github.com/mongodb/js-bson/issues"},"devDependencies":{"benchmark":"1.0.0","colors":"1.1.0","nodeunit":"0.9.0","babel-core":"^6.14.0","babel-loader":"^6.2.5","babel-polyfill":"^6.13.0","babel-preset-es2015":"^6.14.0","babel-preset-stage-0":"^6.5.0","babel-register":"^6.14.0","webpack":"^1.13.2","webpack-polyfills-plugin":"0.0.9"},"config":{"native":false},"main":"./index","directories":{"lib":"./lib/bson"},"engines":{"node":">=0.6.19"},"scripts":{"test":"nodeunit ./test/node","build":"webpack --config ./webpack.dist.config.js"},"browser":"lib/bson/bson.js","license":"Apache-2.0","gitHead":"5870bf5bd6550fc6cf795c70f52d15815bd9202a","homepage":"https://github.com/mongodb/js-bson#readme","_id":"bson@1.0.1","_shasum":"3a5addb0f2ff88bc3436e708e4bdb8637602d72d","_from":".","_npmVersion":"3.10.3","_nodeVersion":"6.6.0","_npmUser":{"name":"christkv","email":"christkv@gmail.com"},"dist":{"shasum":"3a5addb0f2ff88bc3436e708e4bdb8637602d72d","tarball":"https://registry.npmjs.org/bson/-/bson-1.0.1.tgz"},"maintainers":[{"name":"octave","email":"chinsay@gmail.com"},{"name":"christkv","email":"christkv@gmail.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/bson-1.0.1.tgz_1481115456320_0.12347691180184484"}},"1.0.2":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"files":["lib","index.js","browser_build","bower.json"],"version":"1.0.2","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"contributors":[],"repository":{"type":"git","url":"git+https://github.com/mongodb/js-bson.git"},"bugs":{"url":"https://github.com/mongodb/js-bson/issues"},"devDependencies":{"benchmark":"1.0.0","colors":"1.1.0","nodeunit":"0.9.0","babel-core":"^6.14.0","babel-loader":"^6.2.5","babel-polyfill":"^6.13.0","babel-preset-es2015":"^6.14.0","babel-preset-stage-0":"^6.5.0","babel-register":"^6.14.0","webpack":"^1.13.2","webpack-polyfills-plugin":"0.0.9"},"config":{"native":false},"main":"./index","directories":{"lib":"./lib/bson"},"engines":{"node":">=0.6.19"},"scripts":{"test":"nodeunit ./test/node","build":"webpack --config ./webpack.dist.config.js"},"browser":"lib/bson/bson.js","license":"Apache-2.0","gitHead":"e2fb5d9adfd1525b80814c203759a9598df99c94","homepage":"https://github.com/mongodb/js-bson#readme","_id":"bson@1.0.2","_shasum":"7e8a8066379f4faa2e4795dbe7ee2d595b3c4ae1","_from":".","_npmVersion":"3.10.8","_nodeVersion":"6.9.1","_npmUser":{"name":"christkv","email":"christkv@gmail.com"},"dist":{"shasum":"7e8a8066379f4faa2e4795dbe7ee2d595b3c4ae1","tarball":"https://registry.npmjs.org/bson/-/bson-1.0.2.tgz"},"maintainers":[{"name":"octave","email":"chinsay@gmail.com"},{"name":"christkv","email":"christkv@gmail.com"}],"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/bson-1.0.2.tgz_1483371724203_0.9188052278477699"}},"1.0.3":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"files":["lib","index.js","browser_build","bower.json"],"version":"1.0.3","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"contributors":[],"repository":{"type":"git","url":"git+https://github.com/mongodb/js-bson.git"},"bugs":{"url":"https://github.com/mongodb/js-bson/issues"},"devDependencies":{"benchmark":"1.0.0","colors":"1.1.0","nodeunit":"0.9.0","babel-core":"^6.14.0","babel-loader":"^6.2.5","babel-polyfill":"^6.13.0","babel-preset-es2015":"^6.14.0","babel-preset-stage-0":"^6.5.0","babel-register":"^6.14.0","webpack":"^1.13.2","webpack-polyfills-plugin":"0.0.9"},"config":{"native":false},"main":"./index","directories":{"lib":"./lib/bson"},"engines":{"node":">=0.6.19"},"scripts":{"test":"nodeunit ./test/node","build":"webpack --config ./webpack.dist.config.js"},"browser":"lib/bson/bson.js","license":"Apache-2.0","gitHead":"ca1447ab59f3bb6253e6b89aaab413030962ebd2","homepage":"https://github.com/mongodb/js-bson#readme","_id":"bson@1.0.3","_shasum":"a3b66f724b1673067efc32249e1151205d3ba854","_from":".","_npmVersion":"3.10.8","_nodeVersion":"6.9.1","_npmUser":{"name":"christkv","email":"christkv@gmail.com"},"dist":{"shasum":"a3b66f724b1673067efc32249e1151205d3ba854","tarball":"https://registry.npmjs.org/bson/-/bson-1.0.3.tgz"},"maintainers":[{"name":"octave","email":"chinsay@gmail.com"},{"name":"christkv","email":"christkv@gmail.com"}],"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/bson-1.0.3.tgz_1483449501323_0.2401381623931229"}},"1.0.4":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"files":["lib","index.js","browser_build","bower.json"],"version":"1.0.4","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"contributors":[],"repository":{"type":"git","url":"git+https://github.com/mongodb/js-bson.git"},"bugs":{"url":"https://github.com/mongodb/js-bson/issues"},"devDependencies":{"benchmark":"1.0.0","colors":"1.1.0","nodeunit":"0.9.0","babel-core":"^6.14.0","babel-loader":"^6.2.5","babel-polyfill":"^6.13.0","babel-preset-es2015":"^6.14.0","babel-preset-stage-0":"^6.5.0","babel-register":"^6.14.0","webpack":"^1.13.2","webpack-polyfills-plugin":"0.0.9"},"config":{"native":false},"main":"./index","directories":{"lib":"./lib/bson"},"engines":{"node":">=0.6.19"},"scripts":{"test":"nodeunit ./test/node","build":"webpack --config ./webpack.dist.config.js"},"browser":"lib/bson/bson.js","license":"Apache-2.0","gitHead":"8dd35ca73c30a2bcab61615ccc5edd053aeb868b","homepage":"https://github.com/mongodb/js-bson#readme","_id":"bson@1.0.4","_shasum":"93c10d39eaa5b58415cbc4052f3e53e562b0b72c","_from":".","_npmVersion":"2.14.20","_nodeVersion":"4.4.0","_npmUser":{"name":"christkv","email":"christkv@gmail.com"},"dist":{"shasum":"93c10d39eaa5b58415cbc4052f3e53e562b0b72c","tarball":"https://registry.npmjs.org/bson/-/bson-1.0.4.tgz"},"maintainers":[{"name":"octave","email":"chinsay@gmail.com"},{"name":"christkv","email":"christkv@gmail.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/bson-1.0.4.tgz_1484130635725_0.12069115601480007"}},"2.0.0":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"files":["lib","index.js","browser_build","bower.json"],"version":"2.0.0","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"license":"Apache-2.0","contributors":[],"repository":{"type":"git","url":"git+https://github.com/mongodb/js-bson.git"},"bugs":{"url":"https://github.com/mongodb/js-bson/issues"},"devDependencies":{"benchmark":"^2.1.4","babel-core":"^6.26.0","babel-loader":"^7.1.2","babel-polyfill":"^6.26.0","babel-preset-env":"^1.6.0","babel-preset-stage-0":"^6.24.1","babel-register":"^6.26.0","chai":"^4.1.2","conventional-changelog-cli":"^1.3.5","eslint":"^4.7.2","eslint-plugin-prettier":"^2.3.1","istanbul":"^0.4.5","mocha":"^3.5.3","prettier":"^1.7.0","webpack":"^3.6.0","webpack-polyfills-plugin":"0.1.0"},"config":{"native":false},"main":"./index","directories":{"lib":"./lib/bson"},"engines":{"node":">=4.0.0"},"scripts":{"test":"mocha ./test/node","build":"webpack --config ./webpack.dist.config.js","lint":"eslint lib test","format":"prettier --print-width 100 --tab-width 2 --single-quote --write 'test/**/*.js' 'lib/**/*.js'","changelog":"conventional-changelog -p angular -i HISTORY.md -s","coverage":"istanbul cover _mocha -- --recursive --ui tdd test/node","prepublishOnly":"npm run build"},"browser":"browser_build/bson.js","gitHead":"edc05927faa7f2f2d7ec54bab765ecc2e988e448","homepage":"https://github.com/mongodb/js-bson#readme","_id":"bson@2.0.0","_npmVersion":"5.6.0","_nodeVersion":"8.9.4","_npmUser":{"name":"mbroadst","email":"mbroadst@gmail.com"},"dist":{"integrity":"sha512-/4AkyMesjwo5BHoqt+qLcDXrqOF5lcIR34rWQCDYNNwCk8VdGPxDVvOrjV+PODIp85nKPpr0Vtu4VR2IkPbV5w==","shasum":"83707926a9970685cca2d892dde7782cd8540113","tarball":"https://registry.npmjs.org/bson/-/bson-2.0.0.tgz","fileCount":27,"unpackedSize":680229},"maintainers":[{"name":"christkv","email":"christkv@gmail.com"},{"name":"daprahamian","email":"dan.aprahamian@gmail.com"},{"name":"mbroadst","email":"mbroadst@gmail.com"},{"name":"octave","email":"chinsay@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/bson_2.0.0_1519676130663_0.41362809041984594"},"_hasShrinkwrap":false},"1.0.5":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"files":["lib","index.js","browser_build","bower.json"],"version":"1.0.5","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"contributors":[],"repository":{"type":"git","url":"git+https://github.com/mongodb/js-bson.git"},"bugs":{"url":"https://github.com/mongodb/js-bson/issues"},"devDependencies":{"benchmark":"1.0.0","colors":"1.1.0","nodeunit":"0.9.0","babel-core":"^6.14.0","babel-loader":"^6.2.5","babel-polyfill":"^6.13.0","babel-preset-es2015":"^6.14.0","babel-preset-stage-0":"^6.5.0","babel-register":"^6.14.0","conventional-changelog-cli":"^1.3.5","webpack":"^1.13.2","webpack-polyfills-plugin":"0.0.9"},"config":{"native":false},"main":"./index","directories":{"lib":"./lib/bson"},"engines":{"node":">=0.6.19"},"scripts":{"test":"nodeunit ./test/node","build":"webpack --config ./webpack.dist.config.js","changelog":"conventional-changelog -p angular -i HISTORY.md -s","lint":"eslint lib test","format":"prettier --print-width 100 --tab-width 2 --single-quote --write 'test/**/*.js' 'lib/**/*.js'"},"browser":"lib/bson/bson.js","license":"Apache-2.0","readme":"# BSON parser\n\nBSON is short for Bin­ary JSON and is the bin­ary-en­coded seri­al­iz­a­tion of JSON-like doc­u­ments. You can learn more about it in [the specification](http://bsonspec.org).\n\nThis browser version of the BSON parser is compiled using [webpack](https://webpack.js.org/) and the current version is pre-compiled in the `browser_build` directory.\n\nThis is the default BSON parser, however, there is a C++ Node.js addon version as well that does not support the browser. It can be found at [mongod-js/bson-ext](https://github.com/mongodb-js/bson-ext).\n\n## Usage\n\nTo build a new version perform the following operations:\n\n```\nnpm install\nnpm run build\n```\n\nA simple example of how to use BSON in the browser:\n\n```html\n<script src=\"./browser_build/bson.js\"></script>\n\n<script>\n  function start() {\n    // Get the Long type\n    var Long = BSON.Long;\n    // Create a bson parser instance\n    var bson = new BSON();\n\n    // Serialize document\n    var doc = { long: Long.fromNumber(100) }\n\n    // Serialize a document\n    var data = bson.serialize(doc)\n    // De serialize it again\n    var doc_2 = bson.deserialize(data)\n  }\n</script>\n```\n\nA simple example of how to use BSON in `Node.js`:\n\n```js\n// Get BSON parser class\nvar BSON = require('bson')\n// Get the Long type\nvar Long = BSON.Long;\n// Create a bson parser instance\nvar bson = new BSON();\n\n// Serialize document\nvar doc = { long: Long.fromNumber(100) }\n\n// Serialize a document\nvar data = bson.serialize(doc)\nconsole.log('data:', data)\n\n// Deserialize the resulting Buffer\nvar doc_2 = bson.deserialize(data)\nconsole.log('doc_2:', doc_2)\n```\n\n## Installation\n\n`npm install bson`\n\n## API\n\n### BSON types\n\nFor all BSON types documentation, please refer to the documentation for the [MongoDB Node.js driver](https://github.com/mongodb/node-mongodb-native).\n\n### BSON serialization and deserialiation\n\n**`new BSON()`** - Creates a new BSON serializer/deserializer you can use to serialize and deserialize BSON.\n\n#### BSON.serialize\n\nThe BSON `serialize` method takes a JavaScript object and an optional options object and returns a Node.js Buffer.\n\n  * `BSON.serialize(object, options)`\n    * @param {Object} object the JavaScript object to serialize.\n    * @param {Boolean} [options.checkKeys=false] the serializer will check if keys are valid.\n    * @param {Boolean} [options.serializeFunctions=false] serialize the JavaScript functions.\n    * @param {Boolean} [options.ignoreUndefined=true]\n    * @return {Buffer} returns a Buffer instance.\n\n#### BSON.serializeWithBufferAndIndex\n\nThe BSON `serializeWithBufferAndIndex` method takes an object, a target buffer instance and an optional options object and returns the end serialization index in the final buffer.\n\n  * `BSON.serializeWithBufferAndIndex(object, buffer, options)`\n    * @param {Object} object the JavaScript object to serialize.\n    * @param {Buffer} buffer the Buffer you pre-allocated to store the serialized BSON object.\n    * @param {Boolean} [options.checkKeys=false] the serializer will check if keys are valid.\n    * @param {Boolean} [options.serializeFunctions=false] serialize the JavaScript functions.\n    * @param {Boolean} [options.ignoreUndefined=true] ignore undefined fields.\n    * @param {Number} [options.index=0] the index in the buffer where we wish to start serializing into.\n    * @return {Number} returns the index pointing to the last written byte in the buffer.\n\n#### BSON.calculateObjectSize\n\nThe BSON `calculateObjectSize` method takes a JavaScript object and an optional options object and returns the size of the BSON object.\n\n  * `BSON.calculateObjectSize(object, options)`\n    * @param {Object} object the JavaScript object to serialize.\n    * @param {Boolean} [options.serializeFunctions=false] serialize the JavaScript functions.\n    * @param {Boolean} [options.ignoreUndefined=true]\n    * @return {Buffer} returns a Buffer instance.\n\n#### BSON.deserialize\n\nThe BSON `deserialize` method takes a Node.js Buffer and an optional options object and returns a deserialized JavaScript object.\n\n  * `BSON.deserialize(buffer, options)`\n    * @param {Object} [options.evalFunctions=false] evaluate functions in the BSON document scoped to the object deserialized.\n    * @param {Object} [options.cacheFunctions=false] cache evaluated functions for reuse.\n    * @param {Object} [options.cacheFunctionsCrc32=false] use a crc32 code for caching, otherwise use the string of the function.\n    * @param {Object} [options.promoteLongs=true] when deserializing a Long will fit it into a Number if it's smaller than 53 bits\n    * @param {Object} [options.promoteBuffers=false] when deserializing a Binary will return it as a Node.js Buffer instance.\n    * @param {Object} [options.promoteValues=false] when deserializing will promote BSON values to their Node.js closest equivalent types.\n    * @param {Object} [options.fieldsAsRaw=null] allow to specify if there what fields we wish to return as unserialized raw buffer.\n    * @param {Object} [options.bsonRegExp=false] return BSON regular expressions as BSONRegExp instances.\n    * @return {Number} returns the next index in the buffer after deserialization **x** numbers of documents.\n\n#### BSON.deserializeStream\n\nThe BSON `deserializeStream` method takes a Node.js Buffer, `startIndex` and allow more control over deserialization of a Buffer containing concatenated BSON documents.\n\n  * `BSON.deserializeStream(buffer, startIndex, numberOfDocuments, documents, docStartIndex, options)`\n    * @param {Buffer} buffer the buffer containing the serialized set of BSON documents.\n    * @param {Number} startIndex the start index in the data Buffer where the deserialization is to start.\n    * @param {Number} numberOfDocuments number of documents to deserialize.\n    * @param {Array} documents an array where to store the deserialized documents.\n    * @param {Number} docStartIndex the index in the documents array from where to start inserting documents.\n    * @param {Object} [options.evalFunctions=false] evaluate functions in the BSON document scoped to the object deserialized.\n    * @param {Object} [options.cacheFunctions=false] cache evaluated functions for reuse.\n    * @param {Object} [options.cacheFunctionsCrc32=false] use a crc32 code for caching, otherwise use the string of the function.\n    * @param {Object} [options.promoteLongs=true] when deserializing a Long will fit it into a Number if it's smaller than 53 bits\n    * @param {Object} [options.promoteBuffers=false] when deserializing a Binary will return it as a Node.js Buffer instance.\n    * @param {Object} [options.promoteValues=false] when deserializing will promote BSON values to their Node.js closest equivalent types.\n    * @param {Object} [options.fieldsAsRaw=null] allow to specify if there what fields we wish to return as unserialized raw buffer.\n    * @param {Object} [options.bsonRegExp=false] return BSON regular expressions as BSONRegExp instances.\n    * @return {Object} returns the deserialized JavaScript Object.\n\n## FAQ\n\n#### Why does `undefined` get converted to `null`?\n\nThe `undefined` BSON type has been [deprecated for many years](http://bsonspec.org/spec.html), so this library has dropped support for it. Use the `ignoreUndefined` option (for example, from the [driver](http://mongodb.github.io/node-mongodb-native/2.2/api/MongoClient.html#connect) ) to instead remove `undefined` keys.\n","readmeFilename":"README.md","gitHead":"0ea96bd7177839f652393deea69f992136c86f67","homepage":"https://github.com/mongodb/js-bson#readme","_id":"bson@1.0.5","_npmVersion":"5.6.0","_nodeVersion":"8.9.4","_npmUser":{"name":"mbroadst","email":"mbroadst@gmail.com"},"dist":{"integrity":"sha512-D4SCtud6mlEb48kXdTHU31DRU0bsgOJ+4St1Dcx30uYNnf/aGc+hC9gHB/z0Eth8HYYs/hr0SFdyZViht19SwA==","shasum":"34563b73ff1fde9387c1b9fb5afd845ecc4ba623","tarball":"https://registry.npmjs.org/bson/-/bson-1.0.5.tgz","fileCount":27,"unpackedSize":777918},"maintainers":[{"name":"christkv","email":"christkv@gmail.com"},{"name":"daprahamian","email":"dan.aprahamian@gmail.com"},{"name":"mbroadst","email":"mbroadst@gmail.com"},{"name":"octave","email":"chinsay@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/bson_1.0.5_1519676598907_0.8047262649671723"},"_hasShrinkwrap":false},"2.0.1":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"files":["lib","index.js","browser_build","bower.json"],"version":"2.0.1","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"license":"Apache-2.0","contributors":[],"repository":{"type":"git","url":"git+https://github.com/mongodb/js-bson.git"},"bugs":{"url":"https://github.com/mongodb/js-bson/issues"},"devDependencies":{"benchmark":"^2.1.4","babel-core":"^6.26.0","babel-loader":"^7.1.2","babel-polyfill":"^6.26.0","babel-preset-env":"^1.6.0","babel-preset-stage-0":"^6.24.1","babel-register":"^6.26.0","chai":"^4.1.2","conventional-changelog-cli":"^1.3.5","eslint":"^4.7.2","eslint-plugin-prettier":"^2.3.1","istanbul":"^0.4.5","mocha":"^3.5.3","prettier":"^1.7.0","webpack":"^3.6.0","webpack-polyfills-plugin":"0.1.0"},"config":{"native":false},"main":"./index","directories":{"lib":"./lib/bson"},"engines":{"node":">=4.0.0"},"scripts":{"test":"mocha ./test/node","build":"webpack --config ./webpack.dist.config.js","lint":"eslint lib test","format":"prettier --print-width 100 --tab-width 2 --single-quote --write 'test/**/*.js' 'lib/**/*.js'","changelog":"conventional-changelog -p angular -i HISTORY.md -s","coverage":"istanbul cover _mocha -- --recursive --ui tdd test/node","prepublishOnly":"npm run build"},"browser":"browser_build/bson.js","gitHead":"1289516f25aad2a5ede7c092d87805bcced1f755","homepage":"https://github.com/mongodb/js-bson#readme","_id":"bson@2.0.1","_npmVersion":"5.6.0","_nodeVersion":"8.9.4","_npmUser":{"name":"mbroadst","email":"mbroadst@gmail.com"},"dist":{"integrity":"sha512-O60ZqfNHLG6QyoObcC0VbT4vudL4KQORrUmFzZ8qMVdNjSBV5HduESSq5h7v8xzsZ+TYaaB1VZ4XWapINWvu7w==","shasum":"3d4e0cdb5fed8894585f830e9ce7e82fa0a386e5","tarball":"https://registry.npmjs.org/bson/-/bson-2.0.1.tgz","fileCount":27,"unpackedSize":680728},"maintainers":[{"name":"christkv","email":"christkv@gmail.com"},{"name":"daprahamian","email":"dan.aprahamian@gmail.com"},{"name":"mbroadst","email":"mbroadst@gmail.com"},{"name":"octave","email":"chinsay@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/bson_2.0.1_1519854200343_0.9457738171203811"},"_hasShrinkwrap":false},"2.0.2":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"files":["lib","index.js","browser_build","bower.json"],"version":"2.0.2","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"license":"Apache-2.0","contributors":[],"repository":{"type":"git","url":"git+https://github.com/mongodb/js-bson.git"},"bugs":{"url":"https://github.com/mongodb/js-bson/issues"},"devDependencies":{"benchmark":"^2.1.4","babel-core":"^6.26.0","babel-loader":"^7.1.2","babel-polyfill":"^6.26.0","babel-preset-env":"^1.6.0","babel-preset-stage-0":"^6.24.1","babel-register":"^6.26.0","chai":"^4.1.2","conventional-changelog-cli":"^1.3.5","eslint":"^4.7.2","eslint-plugin-prettier":"^2.3.1","istanbul":"^0.4.5","mocha":"^3.5.3","prettier":"^1.7.0","webpack":"^3.6.0","webpack-polyfills-plugin":"0.1.0"},"config":{"native":false},"main":"./index","directories":{"lib":"./lib/bson"},"engines":{"node":">=4.0.0"},"scripts":{"test":"mocha ./test/node","build":"webpack --config ./webpack.dist.config.js","lint":"eslint lib test","format":"prettier --print-width 100 --tab-width 2 --single-quote --write 'test/**/*.js' 'lib/**/*.js'","changelog":"conventional-changelog -p angular -i HISTORY.md -s","coverage":"istanbul cover _mocha -- --recursive --ui tdd test/node","prepublishOnly":"npm run build"},"browser":"browser_build/bson.js","gitHead":"88f66d0c31dd8d10a981ce4599145aa12c904afd","homepage":"https://github.com/mongodb/js-bson#readme","_id":"bson@2.0.2","_npmVersion":"5.6.0","_nodeVersion":"8.9.4","_npmUser":{"name":"mbroadst","email":"mbroadst@gmail.com"},"dist":{"integrity":"sha512-4heflDraJJ1LzdM8isRTM1GQd75dwlTW8c7R0RNNCgzSlxHuuUmCXILrqWqc1fHocQC6Do8+27ufFX2bCngIbQ==","shasum":"72e4d00a158732f41947757c535c780dc77d166f","tarball":"https://registry.npmjs.org/bson/-/bson-2.0.2.tgz","fileCount":27,"unpackedSize":680844},"maintainers":[{"name":"christkv","email":"christkv@gmail.com"},{"name":"daprahamian","email":"dan.aprahamian@gmail.com"},{"name":"mbroadst","email":"mbroadst@gmail.com"},{"name":"octave","email":"chinsay@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/bson_2.0.2_1520002677626_0.3504702118607206"},"_hasShrinkwrap":false},"1.0.6":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"files":["lib","index.js","browser_build","bower.json"],"version":"1.0.6","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"contributors":[],"repository":{"type":"git","url":"git+https://github.com/mongodb/js-bson.git"},"bugs":{"url":"https://github.com/mongodb/js-bson/issues"},"devDependencies":{"benchmark":"1.0.0","colors":"1.1.0","nodeunit":"0.9.0","babel-core":"^6.14.0","babel-loader":"^6.2.5","babel-polyfill":"^6.13.0","babel-preset-es2015":"^6.14.0","babel-preset-stage-0":"^6.5.0","babel-register":"^6.14.0","conventional-changelog-cli":"^1.3.5","webpack":"^1.13.2","webpack-polyfills-plugin":"0.0.9"},"config":{"native":false},"main":"./index","directories":{"lib":"./lib/bson"},"engines":{"node":">=0.6.19"},"scripts":{"test":"nodeunit ./test/node","build":"webpack --config ./webpack.dist.config.js","changelog":"conventional-changelog -p angular -i HISTORY.md -s","lint":"eslint lib test","format":"prettier --print-width 100 --tab-width 2 --single-quote --write 'test/**/*.js' 'lib/**/*.js'"},"browser":"lib/bson/bson.js","license":"Apache-2.0","readme":"# BSON parser\n\nBSON is short for Bin­ary JSON and is the bin­ary-en­coded seri­al­iz­a­tion of JSON-like doc­u­ments. You can learn more about it in [the specification](http://bsonspec.org).\n\nThis browser version of the BSON parser is compiled using [webpack](https://webpack.js.org/) and the current version is pre-compiled in the `browser_build` directory.\n\nThis is the default BSON parser, however, there is a C++ Node.js addon version as well that does not support the browser. It can be found at [mongod-js/bson-ext](https://github.com/mongodb-js/bson-ext).\n\n## Usage\n\nTo build a new version perform the following operations:\n\n```\nnpm install\nnpm run build\n```\n\nA simple example of how to use BSON in the browser:\n\n```html\n<script src=\"./browser_build/bson.js\"></script>\n\n<script>\n  function start() {\n    // Get the Long type\n    var Long = BSON.Long;\n    // Create a bson parser instance\n    var bson = new BSON();\n\n    // Serialize document\n    var doc = { long: Long.fromNumber(100) }\n\n    // Serialize a document\n    var data = bson.serialize(doc)\n    // De serialize it again\n    var doc_2 = bson.deserialize(data)\n  }\n</script>\n```\n\nA simple example of how to use BSON in `Node.js`:\n\n```js\n// Get BSON parser class\nvar BSON = require('bson')\n// Get the Long type\nvar Long = BSON.Long;\n// Create a bson parser instance\nvar bson = new BSON();\n\n// Serialize document\nvar doc = { long: Long.fromNumber(100) }\n\n// Serialize a document\nvar data = bson.serialize(doc)\nconsole.log('data:', data)\n\n// Deserialize the resulting Buffer\nvar doc_2 = bson.deserialize(data)\nconsole.log('doc_2:', doc_2)\n```\n\n## Installation\n\n`npm install bson`\n\n## API\n\n### BSON types\n\nFor all BSON types documentation, please refer to the following sources:\n  * [MongoDB BSON Type Reference](https://docs.mongodb.com/manual/reference/bson-types/)\n  * [BSON Spec](https://bsonspec.org/)\n\n### BSON serialization and deserialiation\n\n**`new BSON()`** - Creates a new BSON serializer/deserializer you can use to serialize and deserialize BSON.\n\n#### BSON.serialize\n\nThe BSON `serialize` method takes a JavaScript object and an optional options object and returns a Node.js Buffer.\n\n  * `BSON.serialize(object, options)`\n    * @param {Object} object the JavaScript object to serialize.\n    * @param {Boolean} [options.checkKeys=false] the serializer will check if keys are valid.\n    * @param {Boolean} [options.serializeFunctions=false] serialize the JavaScript functions.\n    * @param {Boolean} [options.ignoreUndefined=true]\n    * @return {Buffer} returns a Buffer instance.\n\n#### BSON.serializeWithBufferAndIndex\n\nThe BSON `serializeWithBufferAndIndex` method takes an object, a target buffer instance and an optional options object and returns the end serialization index in the final buffer.\n\n  * `BSON.serializeWithBufferAndIndex(object, buffer, options)`\n    * @param {Object} object the JavaScript object to serialize.\n    * @param {Buffer} buffer the Buffer you pre-allocated to store the serialized BSON object.\n    * @param {Boolean} [options.checkKeys=false] the serializer will check if keys are valid.\n    * @param {Boolean} [options.serializeFunctions=false] serialize the JavaScript functions.\n    * @param {Boolean} [options.ignoreUndefined=true] ignore undefined fields.\n    * @param {Number} [options.index=0] the index in the buffer where we wish to start serializing into.\n    * @return {Number} returns the index pointing to the last written byte in the buffer.\n\n#### BSON.calculateObjectSize\n\nThe BSON `calculateObjectSize` method takes a JavaScript object and an optional options object and returns the size of the BSON object.\n\n  * `BSON.calculateObjectSize(object, options)`\n    * @param {Object} object the JavaScript object to serialize.\n    * @param {Boolean} [options.serializeFunctions=false] serialize the JavaScript functions.\n    * @param {Boolean} [options.ignoreUndefined=true]\n    * @return {Buffer} returns a Buffer instance.\n\n#### BSON.deserialize\n\nThe BSON `deserialize` method takes a Node.js Buffer and an optional options object and returns a deserialized JavaScript object.\n\n  * `BSON.deserialize(buffer, options)`\n    * @param {Object} [options.evalFunctions=false] evaluate functions in the BSON document scoped to the object deserialized.\n    * @param {Object} [options.cacheFunctions=false] cache evaluated functions for reuse.\n    * @param {Object} [options.cacheFunctionsCrc32=false] use a crc32 code for caching, otherwise use the string of the function.\n    * @param {Object} [options.promoteLongs=true] when deserializing a Long will fit it into a Number if it's smaller than 53 bits\n    * @param {Object} [options.promoteBuffers=false] when deserializing a Binary will return it as a Node.js Buffer instance.\n    * @param {Object} [options.promoteValues=false] when deserializing will promote BSON values to their Node.js closest equivalent types.\n    * @param {Object} [options.fieldsAsRaw=null] allow to specify if there what fields we wish to return as unserialized raw buffer.\n    * @param {Object} [options.bsonRegExp=false] return BSON regular expressions as BSONRegExp instances.\n    * @return {Number} returns the next index in the buffer after deserialization **x** numbers of documents.\n\n#### BSON.deserializeStream\n\nThe BSON `deserializeStream` method takes a Node.js Buffer, `startIndex` and allow more control over deserialization of a Buffer containing concatenated BSON documents.\n\n  * `BSON.deserializeStream(buffer, startIndex, numberOfDocuments, documents, docStartIndex, options)`\n    * @param {Buffer} buffer the buffer containing the serialized set of BSON documents.\n    * @param {Number} startIndex the start index in the data Buffer where the deserialization is to start.\n    * @param {Number} numberOfDocuments number of documents to deserialize.\n    * @param {Array} documents an array where to store the deserialized documents.\n    * @param {Number} docStartIndex the index in the documents array from where to start inserting documents.\n    * @param {Object} [options.evalFunctions=false] evaluate functions in the BSON document scoped to the object deserialized.\n    * @param {Object} [options.cacheFunctions=false] cache evaluated functions for reuse.\n    * @param {Object} [options.cacheFunctionsCrc32=false] use a crc32 code for caching, otherwise use the string of the function.\n    * @param {Object} [options.promoteLongs=true] when deserializing a Long will fit it into a Number if it's smaller than 53 bits\n    * @param {Object} [options.promoteBuffers=false] when deserializing a Binary will return it as a Node.js Buffer instance.\n    * @param {Object} [options.promoteValues=false] when deserializing will promote BSON values to their Node.js closest equivalent types.\n    * @param {Object} [options.fieldsAsRaw=null] allow to specify if there what fields we wish to return as unserialized raw buffer.\n    * @param {Object} [options.bsonRegExp=false] return BSON regular expressions as BSONRegExp instances.\n    * @return {Object} returns the deserialized JavaScript Object.\n\n## FAQ\n\n#### Why does `undefined` get converted to `null`?\n\nThe `undefined` BSON type has been [deprecated for many years](http://bsonspec.org/spec.html), so this library has dropped support for it. Use the `ignoreUndefined` option (for example, from the [driver](http://mongodb.github.io/node-mongodb-native/2.2/api/MongoClient.html#connect) ) to instead remove `undefined` keys.\n","readmeFilename":"README.md","gitHead":"36e328e9b99644966b03717dbdfd1615ecffd2ef","homepage":"https://github.com/mongodb/js-bson#readme","_id":"bson@1.0.6","_npmVersion":"5.5.1","_nodeVersion":"8.9.1","_npmUser":{"name":"mbroadst","email":"mbroadst@gmail.com"},"dist":{"integrity":"sha512-D8zmlb46xfuK2gGvKmUjIklQEouN2nQ0LEHHeZ/NoHM2LDiMk2EYzZ5Ntw/Urk+bgMDosOZxaRzXxvhI5TcAVQ==","shasum":"444db59ddd4c24f0cb063aabdc5c8c7b0ceca912","tarball":"https://registry.npmjs.org/bson/-/bson-1.0.6.tgz","fileCount":27,"unpackedSize":732581},"maintainers":[{"name":"christkv","email":"christkv@gmail.com"},{"name":"daprahamian","email":"dan.aprahamian@gmail.com"},{"name":"mbroadst","email":"mbroadst@gmail.com"},{"name":"octave","email":"chinsay@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/bson_1.0.6_1520882354503_0.7432598006108444"},"_hasShrinkwrap":false},"2.0.3":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"files":["lib","index.js","browser_build","bower.json"],"version":"2.0.3","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"license":"Apache-2.0","contributors":[],"repository":{"type":"git","url":"git+https://github.com/mongodb/js-bson.git"},"bugs":{"url":"https://github.com/mongodb/js-bson/issues"},"devDependencies":{"benchmark":"^2.1.4","babel-core":"^6.26.0","babel-loader":"^7.1.2","babel-polyfill":"^6.26.0","babel-preset-env":"^1.6.0","babel-preset-stage-0":"^6.24.1","babel-register":"^6.26.0","chai":"^4.1.2","conventional-changelog-cli":"^1.3.5","eslint":"^4.7.2","eslint-plugin-prettier":"^2.3.1","istanbul":"^0.4.5","mocha":"^3.5.3","prettier":"^1.7.0","webpack":"^3.6.0","webpack-polyfills-plugin":"0.1.0"},"config":{"native":false},"main":"./index","directories":{"lib":"./lib/bson"},"engines":{"node":">=4.0.0"},"scripts":{"test":"mocha ./test/node","build":"webpack --config ./webpack.dist.config.js","lint":"eslint lib test","format":"prettier --print-width 100 --tab-width 2 --single-quote --write 'test/**/*.js' 'lib/**/*.js'","changelog":"conventional-changelog -p angular -i HISTORY.md -s","coverage":"istanbul cover _mocha -- --recursive --ui tdd test/node","prepublishOnly":"npm run build"},"browser":"browser_build/bson.js","gitHead":"e04ee15163f14e63200d9d8d77f267f88f1c8759","homepage":"https://github.com/mongodb/js-bson#readme","_id":"bson@2.0.3","_npmVersion":"5.5.1","_nodeVersion":"8.9.1","_npmUser":{"name":"mbroadst","email":"mbroadst@gmail.com"},"dist":{"integrity":"sha512-fUXHBLjzZpk6CnyizFStQbWzrxh9rgTCaCJrAjT/dzaQ8YeAQW2HT0y8B98mHHf35akejPzYFxJGsmyxyvSrww==","shasum":"325293a71503dd3b6dd2e60e6883f6ad25e25513","tarball":"https://registry.npmjs.org/bson/-/bson-2.0.3.tgz","fileCount":27,"unpackedSize":681930},"maintainers":[{"name":"christkv","email":"christkv@gmail.com"},{"name":"daprahamian","email":"dan.aprahamian@gmail.com"},{"name":"mbroadst","email":"mbroadst@gmail.com"},{"name":"octave","email":"chinsay@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/bson_2.0.3_1520882515121_0.17853676009149888"},"_hasShrinkwrap":false},"2.0.4":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"files":["lib","index.js","browser_build","bower.json"],"version":"2.0.4","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"license":"Apache-2.0","contributors":[],"repository":{"type":"git","url":"git+https://github.com/mongodb/js-bson.git"},"bugs":{"url":"https://github.com/mongodb/js-bson/issues"},"devDependencies":{"benchmark":"^2.1.4","babel-core":"^6.26.0","babel-loader":"^7.1.2","babel-polyfill":"^6.26.0","babel-preset-env":"^1.6.0","babel-preset-stage-0":"^6.24.1","babel-register":"^6.26.0","chai":"^4.1.2","conventional-changelog-cli":"^1.3.5","eslint":"^4.7.2","eslint-plugin-prettier":"^2.3.1","istanbul":"^0.4.5","mocha":"^3.5.3","prettier":"^1.7.0","webpack":"^3.6.0","webpack-polyfills-plugin":"0.1.0"},"config":{"native":false},"main":"./index","directories":{"lib":"./lib/bson"},"engines":{"node":">=4.0.0"},"scripts":{"test":"mocha ./test/node","build":"webpack --config ./webpack.dist.config.js","lint":"eslint lib test","format":"prettier --print-width 100 --tab-width 2 --single-quote --write 'test/**/*.js' 'lib/**/*.js'","changelog":"conventional-changelog -p angular -i HISTORY.md -s","coverage":"istanbul cover _mocha -- --recursive --ui tdd test/node","prepublishOnly":"npm run build"},"browser":"browser_build/bson.js","gitHead":"78d0c9f2aa77925f9a01a6a2a2ed1d664df948c6","homepage":"https://github.com/mongodb/js-bson#readme","_id":"bson@2.0.4","_npmVersion":"5.5.1","_nodeVersion":"8.9.1","_npmUser":{"name":"mbroadst","email":"mbroadst@gmail.com"},"dist":{"integrity":"sha512-e/GPy6CE0xL7MOYYRMIEwPGKF21WNaQdPIpV0YvaQDoR7oc47KUZ8c2P/TlRJVQP8RZ4CEsArGBC1NbkCRvl1w==","shasum":"5b8e40f80d3d1b96a2ae55311c6612c25e586e50","tarball":"https://registry.npmjs.org/bson/-/bson-2.0.4.tgz","fileCount":27,"unpackedSize":682152},"maintainers":[{"name":"christkv","email":"christkv@gmail.com"},{"name":"daprahamian","email":"dan.aprahamian@gmail.com"},{"name":"mbroadst","email":"mbroadst@gmail.com"},{"name":"octave","email":"chinsay@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/bson_2.0.4_1520898764087_0.7390639622831627"},"_hasShrinkwrap":false},"2.0.5":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"files":["lib","index.js","browser_build","bower.json"],"version":"2.0.5","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"license":"Apache-2.0","contributors":[],"repository":{"type":"git","url":"git+https://github.com/mongodb/js-bson.git"},"bugs":{"url":"https://github.com/mongodb/js-bson/issues"},"devDependencies":{"benchmark":"^2.1.4","babel-core":"^6.26.0","babel-loader":"^7.1.2","babel-polyfill":"^6.26.0","babel-preset-env":"^1.6.0","babel-preset-stage-0":"^6.24.1","babel-register":"^6.26.0","chai":"^4.1.2","conventional-changelog-cli":"^1.3.5","eslint":"^4.7.2","eslint-plugin-prettier":"^2.3.1","istanbul":"^0.4.5","mocha":"^3.5.3","prettier":"^1.7.0","webpack":"^3.6.0","webpack-polyfills-plugin":"0.1.0"},"config":{"native":false},"main":"./index","directories":{"lib":"./lib/bson"},"engines":{"node":">=4.0.0"},"scripts":{"test":"mocha ./test/node","build":"webpack --config ./webpack.dist.config.js","lint":"eslint lib test","format":"prettier --print-width 100 --tab-width 2 --single-quote --write 'test/**/*.js' 'lib/**/*.js'","changelog":"conventional-changelog -p angular -i HISTORY.md -s","coverage":"istanbul cover _mocha -- --recursive --ui tdd test/node","prepublishOnly":"npm run build"},"browser":"browser_build/bson.js","gitHead":"9c9e027c5e66ef53d5a33e9953dfcc6687c828e0","homepage":"https://github.com/mongodb/js-bson#readme","_id":"bson@2.0.5","_npmVersion":"5.5.1","_nodeVersion":"8.9.1","_npmUser":{"name":"mbroadst","email":"mbroadst@gmail.com"},"dist":{"integrity":"sha512-4gGFIV/DJXPUY5ZhpE7CjG5Z+N73gEnNalLvJ99nqXLPj+RlVQ+wz1FVDUj/F7TDrJe/zXx6GFDLUkYeK5SDGg==","shasum":"d101ec8b0575fbe4ecb862d9cb51551f22083d49","tarball":"https://registry.npmjs.org/bson/-/bson-2.0.5.tgz","fileCount":27,"unpackedSize":682616},"maintainers":[{"name":"christkv","email":"christkv@gmail.com"},{"name":"daprahamian","email":"dan.aprahamian@gmail.com"},{"name":"mbroadst","email":"mbroadst@gmail.com"},{"name":"octave","email":"chinsay@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/bson_2.0.5_1523022035069_0.4216314902027076"},"_hasShrinkwrap":false},"2.0.6":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"files":["lib","index.js","browser_build","bower.json"],"version":"2.0.6","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"license":"Apache-2.0","contributors":[],"repository":{"type":"git","url":"git+https://github.com/mongodb/js-bson.git"},"bugs":{"url":"https://github.com/mongodb/js-bson/issues"},"devDependencies":{"benchmark":"^2.1.4","babel-core":"^6.26.0","babel-loader":"^7.1.2","babel-polyfill":"^6.26.0","babel-preset-env":"^1.6.0","babel-preset-stage-0":"^6.24.1","babel-register":"^6.26.0","chai":"^4.1.2","conventional-changelog-cli":"^1.3.5","eslint":"^4.7.2","eslint-plugin-prettier":"^2.3.1","istanbul":"^0.4.5","mocha":"^3.5.3","prettier":"^1.7.0","webpack":"^3.6.0","webpack-polyfills-plugin":"0.1.0"},"config":{"native":false},"main":"./index","directories":{"lib":"./lib/bson"},"engines":{"node":">=4.0.0"},"scripts":{"test":"mocha ./test/node","build":"webpack --config ./webpack.dist.config.js","lint":"eslint lib test","format":"prettier --print-width 100 --tab-width 2 --single-quote --write 'test/**/*.js' 'lib/**/*.js'","changelog":"conventional-changelog -p angular -i HISTORY.md -s","coverage":"istanbul cover _mocha -- --recursive --ui tdd test/node","prepublishOnly":"npm run build"},"browser":"browser_build/bson.js","gitHead":"e7a85586f89f81e608500c16bf20f18d88ed6238","homepage":"https://github.com/mongodb/js-bson#readme","_id":"bson@2.0.6","_npmVersion":"5.6.0","_nodeVersion":"8.11.1","_npmUser":{"name":"daprahamian","email":"dan.aprahamian@gmail.com"},"dist":{"integrity":"sha512-DH9Xvo+zN7PnS6rmQauNWLZqICiwOXygoh0nppbJrcpGv6XUyon6S/rGSvUkR3SdyqHQ6YjSkxmSnmqOhUZNew==","shasum":"d829f8c26797174ec435219901cbc05a13def410","tarball":"https://registry.npmjs.org/bson/-/bson-2.0.6.tgz","fileCount":27,"unpackedSize":683469,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJa45fmCRA9TVsSAnZWagAAeroP/22Nafcio5jXZ56wOOnr\n2a7uCC+EYQydiRkmjhjUgPfOIySc357IZbp7vaK2n66Zg8M7clyVyuYwNpau\nfQl6r8scoR9s5vHu52P8Z8KiY0qmvF7eNQI9Gqs2Q03gtAVfzgUlS0lAzydE\nWT6DsooiD0fKvxMla6Ua5E+VKBIEE3x1whVXOn0uvTgJDbobb3CiodcWV2EN\nCKY2kNqcPa9M5IRz3xg7gH6MFEYTFbflhQoOMzwlURzTJhYOJcvzKLyZW7Rh\naq6bggiXTrKcQR1dnO5Uw2Nzcks208X1tFDvjGd1SU8xX9oC1jLlCNaPwt1+\nCtewBeLCczKnfPNZYxrpl27q/eVR0GzyKcl76ta6MoJ6oq3ueRFNqJE+Fdtq\na2NQaWoq3Rv23/rLb26Wi97R5XOqHaVtnrxZ7Jj/H91Qm5KHrGA/vALeOlPw\n+fQGkw9c7WbTVuEBWouqAaDzvVkD8UpQtiCiPemkXiwReZRokshoPXE3cqtm\n/RIZcsVJ9UAiGKx0pIWpt9RtP8ql0gD+qCwbpxH47f+rJWNwLeYlaP+OGE8V\nKVxNT+jD2hWwlUj5+pSq0pOtYGrj6vhB+uDCgK6o8HBdTt1gJFGJrxg629+V\n3iwoUuh/yn0upIN+VJ69XYZ4s6jBYqSaBiMmpeSwALWtDpE3C/3A9krQuPqu\nVRvg\r\n=eoPp\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"christkv","email":"christkv@gmail.com"},{"name":"daprahamian","email":"dan.aprahamian@gmail.com"},{"name":"mbroadst","email":"mbroadst@gmail.com"},{"name":"octave","email":"chinsay@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/bson_2.0.6_1524864996274_0.1634685511859939"},"_hasShrinkwrap":false},"2.0.7":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"files":["lib","index.js","browser_build","bower.json"],"version":"2.0.7","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"license":"Apache-2.0","contributors":[],"repository":{"type":"git","url":"git+https://github.com/mongodb/js-bson.git"},"bugs":{"url":"https://github.com/mongodb/js-bson/issues"},"devDependencies":{"benchmark":"^2.1.4","babel-core":"^6.26.0","babel-loader":"^7.1.2","babel-polyfill":"^6.26.0","babel-preset-env":"^1.6.0","babel-preset-stage-0":"^6.24.1","babel-register":"^6.26.0","chai":"^4.1.2","conventional-changelog-cli":"^1.3.5","eslint":"^4.7.2","eslint-plugin-prettier":"^2.3.1","istanbul":"^0.4.5","mocha":"^3.5.3","prettier":"~1.12.0","webpack":"^3.6.0","webpack-polyfills-plugin":"0.1.0"},"config":{"native":false},"main":"./index","directories":{"lib":"./lib/bson"},"engines":{"node":">=4.0.0"},"scripts":{"test":"mocha ./test/node","build":"webpack --config ./webpack.dist.config.js","lint":"eslint lib test","format":"prettier --print-width 100 --tab-width 2 --single-quote --write 'test/**/*.js' 'lib/**/*.js'","changelog":"conventional-changelog -p angular -i HISTORY.md -s","coverage":"istanbul cover _mocha -- --recursive --ui tdd test/node","prepublishOnly":"npm run build"},"browser":"browser_build/bson.js","gitHead":"492670df53bcda931ed36cf434a93b5e886504bf","homepage":"https://github.com/mongodb/js-bson#readme","_id":"bson@2.0.7","_npmVersion":"5.6.0","_nodeVersion":"8.11.1","_npmUser":{"name":"daprahamian","email":"dan.aprahamian@gmail.com"},"dist":{"integrity":"sha512-xow7P+tDWHJNNgUt8j7xYH/uUAAkinRmM7hOEl5JajXq7Yj+0xA8HNN4i+oQku1y/m6KzU9AChaWHctvwZVI6Q==","shasum":"4eff5829837ab79940f203a25cd94c3036a42c8f","tarball":"https://registry.npmjs.org/bson/-/bson-2.0.7.tgz","fileCount":27,"unpackedSize":686550,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbECCfCRA9TVsSAnZWagAA9E0P/3gkEag4PV8N5e4Bt8lG\naRUoSPPRXMCjElNHizm5UQEyJQag9BoYxzaKvlYdyvZJyYN2IH1sgGdXrsKL\nKWPT/BraUpO2ub5if6KnQnsFc+la5ZJj07MeSV3jMPR5grahiG0WgyaFLbb9\nMlI4c4ieUwuOjetgHxjhMEWkc0WiPq7SG4QtdeUR32s5tCNnm+D5bac7It9s\ndBh8Fd2hT7dca+j33CM0epZeQwjoPJVFLwazp5rMxwSFsZDjgrzL5bBN7Zir\nDEWw9z2KJBPeByb/AvhDZqxKj6VwC8pT0HsraNgW6+DaZHUJeQzVbQRaJl1j\nRtb+3QAxKc8tC6rdCGSJncXIGT4SS0AwzaPcBrBTPNsrCHueWv/386BZz94L\nizpDwP20OPUA5iGuf78bImQN78QdzVy31oaAogagna7Dh1WM94jyzIaJJPSm\njw7A1SAoxU+/lgRwMcc9GgCpMryH8aVoTdVAWmQKSLd0AC1xCigNbiRoXNjk\npOU4rrJWgNJUfk+d5E2KjJYjwDl0IZ3THzlD53TxVLUn0Chai+DwkOzlFYwm\nkqIH/iV9WhaaOKJk31DMKW5QXtQdMYjb88cuKgnlCIG5Jnz1P9cW/N2cChyJ\nrikqwNL2oqzErGSjkdxMUwgqiYknzQHru4SVAXtXkBzm+9u0sUiE7B+0HFBw\n3K3x\r\n=3LL4\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"christkv","email":"christkv@gmail.com"},{"name":"daprahamian","email":"dan.aprahamian@gmail.com"},{"name":"mbroadst","email":"mbroadst@gmail.com"},{"name":"octave","email":"chinsay@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/bson_2.0.7_1527783582203_0.1599931350724988"},"_hasShrinkwrap":false},"1.0.7":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"files":["lib","index.js","browser_build","bower.json"],"version":"1.0.7","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"contributors":[],"repository":{"type":"git","url":"git+https://github.com/mongodb/js-bson.git"},"bugs":{"url":"https://github.com/mongodb/js-bson/issues"},"devDependencies":{"benchmark":"1.0.0","colors":"1.1.0","nodeunit":"0.9.0","babel-core":"^6.14.0","babel-loader":"^6.2.5","babel-polyfill":"^6.13.0","babel-preset-es2015":"^6.14.0","babel-preset-stage-0":"^6.5.0","babel-register":"^6.14.0","conventional-changelog-cli":"^1.3.5","webpack":"^1.13.2","webpack-polyfills-plugin":"0.0.9"},"config":{"native":false},"main":"./index","directories":{"lib":"./lib/bson"},"engines":{"node":">=0.6.19"},"scripts":{"test":"nodeunit ./test/node","build":"webpack --config ./webpack.dist.config.js","changelog":"conventional-changelog -p angular -i HISTORY.md -s","lint":"eslint lib test","format":"prettier --print-width 100 --tab-width 2 --single-quote --write 'test/**/*.js' 'lib/**/*.js'"},"browser":"lib/bson/bson.js","license":"Apache-2.0","gitHead":"bf4391c3bd4a5cd9062fb0f892174d3ab0c26dbd","homepage":"https://github.com/mongodb/js-bson#readme","_id":"bson@1.0.7","_npmVersion":"5.6.0","_nodeVersion":"8.11.2","_npmUser":{"name":"mbroadst","email":"mbroadst@gmail.com"},"dist":{"integrity":"sha512-SWADJU+pwqDgNeZSVTBOa6s4rzcObH9IAZw3ankacmM+fFHk1bz5xZvLBmZmp99CKpfoJo2Iw5Bz3CAMaKgKeQ==","shasum":"09e42d26c809ab4de09e323ead202d2755ee1650","tarball":"https://registry.npmjs.org/bson/-/bson-1.0.7.tgz","fileCount":28,"unpackedSize":754552,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbF/1lCRA9TVsSAnZWagAAgJQP/1gKiyGC76zCstVOiVS0\nj4HSOuY5TC/A6VQejodIHikN6g2hle2TrrbJyfl7MKw/09pp7wKnjn5ZU4f9\nG5OBrlYMYHnd4AWXLCD/U/b0bU3DGOBFSr8EKqqPf1AOn5sosBfe0HxIENr6\ngW24CO4c+ChbZfZIRvgNgepU/lNYWQtJR7lqhA8atGeeFUClYJadXIcao36L\n7k53ORTyvNUID4QOXM6RrQErAcaCSOkcS9/5DwyqeTiG1F3Eo8rhjBLJNiAu\nRT2jOj6qSNhWk7RTHBeNzDP8cppTjA9tkEAvCnX/m28VazgvLWhcRVzALnWp\nwh2Li9a3zcKFvY+RoCykvc41JZguO+wQ8U7q/4lq687a9suxH9hMFPS0BRVw\nFbdo4DZmOzW7SJj8PaTyHHpXjGwhtZ30NHQw0pP/1NMt5Ia/QezuRlE+yZOP\n9FT/FYyuC1N9rnnFscQHZoWC3wLbmEN1I5Jqubl6XlzFFxSZf5LckfKHQi4Z\nBq5i+JqvCLLDxvkThoWcJpfywTf0WMu4+62D+3EPAWWdX43WSqZpbRhCchti\n8YBwnZmOBTyAKih4j886NbFTEKXEVGSamd3wEighmgPk5HlZUEUgM3PevIfs\nSzQqiDGsoDbClz5Xp+ZHGbLpfBLO7RBxp2pUdOs14kD16jSehah2h3VwHv1p\n31xu\r\n=XFin\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"christkv","email":"christkv@gmail.com"},{"name":"daprahamian","email":"dan.aprahamian@gmail.com"},{"name":"mbroadst","email":"mbroadst@gmail.com"},{"name":"octave","email":"chinsay@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/bson_1.0.7_1528298851226_0.7413164046678702"},"_hasShrinkwrap":false},"2.0.8":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"files":["lib","index.js","browser_build","bower.json"],"version":"2.0.8","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"license":"Apache-2.0","contributors":[],"repository":{"type":"git","url":"git+https://github.com/mongodb/js-bson.git"},"bugs":{"url":"https://github.com/mongodb/js-bson/issues"},"devDependencies":{"benchmark":"^2.1.4","babel-core":"^6.26.0","babel-loader":"^7.1.2","babel-polyfill":"^6.26.0","babel-preset-env":"^1.6.0","babel-preset-stage-0":"^6.24.1","babel-register":"^6.26.0","chai":"^4.1.2","conventional-changelog-cli":"^1.3.5","eslint":"^4.7.2","eslint-plugin-prettier":"^2.3.1","istanbul":"^0.4.5","mocha":"^3.5.3","prettier":"~1.12.0","webpack":"^3.6.0","webpack-polyfills-plugin":"0.1.0"},"config":{"native":false},"main":"./index","directories":{"lib":"./lib/bson"},"engines":{"node":">=4.0.0"},"scripts":{"test":"mocha ./test/node","build":"webpack --config ./webpack.dist.config.js","lint":"eslint lib test","format":"prettier --print-width 100 --tab-width 2 --single-quote --write 'test/**/*.js' 'lib/**/*.js'","changelog":"conventional-changelog -p angular -i HISTORY.md -s","coverage":"istanbul cover _mocha -- --recursive --ui tdd test/node","prepublishOnly":"npm run build"},"browser":"browser_build/bson.js","gitHead":"8cb0cf72d6b91f25c7ef15092c20f4bd6b88a745","homepage":"https://github.com/mongodb/js-bson#readme","_id":"bson@2.0.8","_npmVersion":"5.6.0","_nodeVersion":"8.11.2","_npmUser":{"name":"mbroadst","email":"mbroadst@gmail.com"},"dist":{"integrity":"sha512-0F0T3gHeOwJzHWcN60BZomqj5hCBDRk4b3fANuruvDTnyJJ8sggABKSaePM2F34THNZZSIlB2P1mk2nQWgBr9w==","shasum":"e3bcc115e486bdcb222de7568c43b0b43292761e","tarball":"https://registry.npmjs.org/bson/-/bson-2.0.8.tgz","fileCount":28,"unpackedSize":697700,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbF/3WCRA9TVsSAnZWagAAIUkP+wYiV5Vqpbth6jMq/oVM\nWmC0hdMRojQCjQEY2ZLCEWBo2hnBzHzYVRskfbhKckywRYFiAGigZLeiEONn\nG5HAY9O6jWWJvPJnFA+9Po7uY14qUMWN1zarmXufq5Ycbs6QRQFhcTL/+mIm\nwqNgL8gWGoYsq0zo8hFD2eOgb55OlK8ltxdZOtVvSYSU+1c+b55qcDvkW+eA\nHtsJg4+f/A/KaJ+hQe4nlAVXKcCeavRR3Wyu/ZVC1mFodQaVljAh7CI/hwsD\nYFuXZZYhlGSInajDJNpAhYxLdKG726Rmwyn91Suy4Yi2e8kNMuVbCnA8OTD9\nFuxvRD4gZNc78mf/G0gnn86YM3Y8DaqeFyQoVsv7fQT9gtx3kZigqc0m5jm7\n2sfpHJuGTFnHLh9cT3HTgb6Rbb9mE4o/U3o6bBIrzS8bdDr0pYTv1Qs1AsCO\nUnKljjmEmY65YrVwjOHKNtd1V9MKEOqotJxu8ED1dxlAiAWGmO427AEjwMUL\nPzQXgI0zKddhI9GLZ8FCDVsF82/Eq/DNb8u3fqWoRJvhLbTHB5U0xf2yQAHy\n++48U2Vgvjd+5cTt8tGrYmY2K5INFx7lG+xFoleZSZPjtol3SHFCbd0Z1yWD\noLFQqm0wd5qoeqGmzJ+usTwwInDfTk9BWp4cuznH+uhu9YpsmWd5/qgYSw1F\nlNo+\r\n=9WSa\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"christkv","email":"christkv@gmail.com"},{"name":"daprahamian","email":"dan.aprahamian@gmail.com"},{"name":"mbroadst","email":"mbroadst@gmail.com"},{"name":"octave","email":"chinsay@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/bson_2.0.8_1528298964212_0.21575729042823522"},"_hasShrinkwrap":false},"1.0.8":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"files":["lib","index.js","browser_build","bower.json"],"version":"1.0.8","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"contributors":[],"repository":{"type":"git","url":"git+https://github.com/mongodb/js-bson.git"},"bugs":{"url":"https://github.com/mongodb/js-bson/issues"},"devDependencies":{"benchmark":"1.0.0","colors":"1.1.0","nodeunit":"0.9.0","babel-core":"^6.14.0","babel-loader":"^6.2.5","babel-polyfill":"^6.13.0","babel-preset-es2015":"^6.14.0","babel-preset-stage-0":"^6.5.0","babel-register":"^6.14.0","conventional-changelog-cli":"^1.3.5","webpack":"^1.13.2","webpack-polyfills-plugin":"0.0.9"},"config":{"native":false},"main":"./index","directories":{"lib":"./lib/bson"},"engines":{"node":">=0.6.19"},"scripts":{"test":"nodeunit ./test/node","build":"webpack --config ./webpack.dist.config.js","changelog":"conventional-changelog -p angular -i HISTORY.md -s","lint":"eslint lib test","format":"prettier --print-width 100 --tab-width 2 --single-quote --write 'test/**/*.js' 'lib/**/*.js'"},"browser":"lib/bson/bson.js","license":"Apache-2.0","gitHead":"889799bc2e40d0418a57d3848432eea585275254","homepage":"https://github.com/mongodb/js-bson#readme","_id":"bson@1.0.8","_npmVersion":"5.6.0","_nodeVersion":"8.11.2","_npmUser":{"name":"mbroadst","email":"mbroadst@gmail.com"},"dist":{"integrity":"sha512-qUGWfoltVTndpB5reMWhEz5GmCuzVJ95iYYvaGyf9OgCsIsZ1zqeze85OuqV2tFfl31fkAmcocj6sQKv/iV1hg==","shasum":"bcb37b62c7c09c33972377497401e4e63d6ad2ca","tarball":"https://registry.npmjs.org/bson/-/bson-1.0.8.tgz","fileCount":28,"unpackedSize":754611,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbGT3DCRA9TVsSAnZWagAA39UP/iJkDieUGh3n/Y1/RgHk\nIXajMHLjbTd+2YLO2mhElZzcXpziqcya+LnG7nkpXuR0sad7lyliAHAXuPVG\n1fqF9H5OfzVsg5tgWkZ2oQqDAvLy/eA/5p2U+OAjYsqT3Y5zbHC42PM8vBqk\nTgf5b4RUckUlMr71c9huIKqO6LYvDDhMFpEM/p3JC24gx6x6r+6AqEi8F6jJ\nqEYCiV9gwKreNS1D/UhFxIoVWkmYz0YNK4jjScA3c5jpLtOKbltefbp3ahKP\ntF9UK3EnBEn4sedjRyyhxI/za7NMjr8MOgusoacY55Jw+SKEKUA81njlw+vz\nFcAfkVv/xMcCpQ7zKVvltRpDmL/X6tyUt/rtdp5SPj5M548aOsaVJp2U9Iy/\nPT0IHMwyHDuR7yIQNCtB0qjJrkuXNu/s8+8SMIXUl1f8eSyW6E0H5EXwFsbZ\nhWj0wL+UaRjgHISzHbqP6v6ljEUoR+VkC1ofVZxX5y1QJbBXMgP07rFCKVoZ\nhFQyscGhEKPyby2gxVp9nejq1D84k01NB/ZXgeQmzHx441s4rurSnqrbLVER\nRCE9IcEf0mk8Tw4MRR8oCEAyKe/mZELfDHigLtmAfQvKsHT2+jl5ivBfZp+k\n48SoP/GrcebpfN0JYdo0Sk3UFU0PH5UdQ1tL4ceafTw/ZPZs9UOFKKMEkNlS\nQ7Bz\r\n=U2ct\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"christkv","email":"christkv@gmail.com"},{"name":"daprahamian","email":"dan.aprahamian@gmail.com"},{"name":"mbroadst","email":"mbroadst@gmail.com"},{"name":"octave","email":"chinsay@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/bson_1.0.8_1528380866488_0.9254902724491101"},"_hasShrinkwrap":false},"1.0.9":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"files":["lib","index.js","browser_build","bower.json"],"version":"1.0.9","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"contributors":[],"repository":{"type":"git","url":"git+https://github.com/mongodb/js-bson.git"},"bugs":{"url":"https://github.com/mongodb/js-bson/issues"},"devDependencies":{"benchmark":"1.0.0","colors":"1.1.0","nodeunit":"0.9.0","babel-core":"^6.14.0","babel-loader":"^6.2.5","babel-polyfill":"^6.13.0","babel-preset-es2015":"^6.14.0","babel-preset-stage-0":"^6.5.0","babel-register":"^6.14.0","conventional-changelog-cli":"^1.3.5","webpack":"^1.13.2","webpack-polyfills-plugin":"0.0.9"},"config":{"native":false},"main":"./index","directories":{"lib":"./lib/bson"},"engines":{"node":">=0.6.19"},"scripts":{"test":"nodeunit ./test/node","build":"webpack --config ./webpack.dist.config.js","changelog":"conventional-changelog -p angular -i HISTORY.md -s","lint":"eslint lib test","format":"prettier --print-width 100 --tab-width 2 --single-quote --write 'test/**/*.js' 'lib/**/*.js'"},"browser":"lib/bson/bson.js","license":"Apache-2.0","gitHead":"765680420a5b83b9e2e50f3d9635a549a28fe6ad","homepage":"https://github.com/mongodb/js-bson#readme","_id":"bson@1.0.9","_npmVersion":"5.6.0","_nodeVersion":"8.11.2","_npmUser":{"name":"mbroadst","email":"mbroadst@gmail.com"},"dist":{"integrity":"sha512-IQX9/h7WdMBIW/q/++tGd+emQr0XMdeZ6icnT/74Xk9fnabWn+gZgpE+9V+gujL3hhJOoNrnDVY7tWdzc7NUTg==","shasum":"12319f8323b1254739b7c6bef8d3e89ae05a2f57","tarball":"https://registry.npmjs.org/bson/-/bson-1.0.9.tgz","fileCount":28,"unpackedSize":754837,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbGZO6CRA9TVsSAnZWagAA2WUP/R875rMa6BcSWT15f+qg\n//DAqJJYivhc/zsTN39ihwsGu9VS4d1iwpsbufZYY2lJ1KdYh3NRXPLwRZRs\nfVKMJdojQY9cwtYbsMsL19khqLFnkY9QDIRmY2KTmitNSKkSD4k6YZVT7g7M\nlo0UdF3loN+1Y22Y2bivO1a6XhhuAJPOQ78j5HcNvLWp80Wt78yBSmgAVL31\nJlddf7MJfQqc8zlxheM1uBCIzPfkd189ARNbWeQgRkRRUol58NWi/LuD4oJu\ntXREkHpXd7LDVBBhFKoEyYl+Nw4ATEoWyQBvxcdcPL5KRxD1tLALTpvWtr/r\na900ALDzxareZmrjltmD7r1hAhw6cdOBwMj3TZoWTAKps8GOI+35E7tmHGJQ\n7ARH7gzKuEDNPXE90p3hY/sWvEsuW9ws9tOwn/kHYnz7hP7Zmswkt6XnjTG4\nuiKgtP9yHdljU44u4RCv6NXJEP3N5KvZ45mv28GsBTegNjFW+3pAoj/JLgPW\nbF5l5hwC++wNXlBH9kuIuk8P0/9/SzTzDD7pwTWQAbm6VUNnWvivdolqMSHG\njcB0WEdhJOBVPeY2S00sQDePxGV4ryp6JQDgzSnTN5fvuJgJ/fpQGglXN9Aj\niqtr56bcdFZHNJRP8EI10wXgP8tnzF7dWsxGZBpZovRgBdjEoCgGAQONe7Tk\n4qml\r\n=WvDJ\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"christkv","email":"christkv@gmail.com"},{"name":"daprahamian","email":"dan.aprahamian@gmail.com"},{"name":"mbroadst","email":"mbroadst@gmail.com"},{"name":"octave","email":"chinsay@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/bson_1.0.9_1528402872903_0.7149811147510177"},"_hasShrinkwrap":false},"3.0.0":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"files":["lib","index.js","dist","bower.json"],"version":"3.0.0","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"license":"Apache-2.0","contributors":[],"repository":{"type":"git","url":"git+https://github.com/mongodb/js-bson.git"},"bugs":{"url":"https://github.com/mongodb/js-bson/issues"},"devDependencies":{"benchmark":"^2.1.4","babel-core":"^6.26.0","babel-plugin-external-helpers":"^6.22.0","babel-preset-env":"^1.6.0","chai":"^4.1.2","conventional-changelog-cli":"^1.3.5","eslint":"^4.7.2","eslint-plugin-prettier":"^2.3.1","istanbul":"^0.4.5","mocha":"^3.5.3","prettier":"~1.12.0","rollup":"^0.56.2","rollup-plugin-babel":"^3.0.3","rollup-plugin-commonjs":"^8.3.0","rollup-plugin-node-builtins":"^2.1.2","rollup-plugin-node-resolve":"^3.0.3"},"config":{"native":false},"main":"./index","directories":{"lib":"./lib/bson"},"browser":"dist/bson.js","engines":{"node":">=4.0.0"},"scripts":{"test":"mocha ./test/node","build":"rollup -c","lint":"eslint lib test","format":"prettier --print-width 100 --tab-width 2 --single-quote --write 'test/**/*.js' 'lib/**/*.js'","changelog":"conventional-changelog -p angular -i HISTORY.md -s","coverage":"istanbul cover _mocha -- --recursive --ui tdd test/node","prepublishOnly":"npm run build"},"gitHead":"7f8d1b62bca9163856b44dc744bdc4a45193443a","homepage":"https://github.com/mongodb/js-bson#readme","_id":"bson@3.0.0","_npmVersion":"5.6.0","_nodeVersion":"8.11.2","_npmUser":{"name":"mbroadst","email":"mbroadst@gmail.com"},"dist":{"integrity":"sha512-i+j5KlptBfGLR8kE6OriNbqylIv+MsFn8Y5Vf/S9DQbNF6zDidaW9CH6ZyX6Whb5KAsle3ro4DPkLJ3XFc16gw==","shasum":"2521fe6a9b88f3af155c27359a3847a80d50237b","tarball":"https://registry.npmjs.org/bson/-/bson-3.0.0.tgz","fileCount":28,"unpackedSize":418471,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbIUizCRA9TVsSAnZWagAAUt0QAJJWykkjiTC6x/3xWNTK\nqYuabcGfsYAY2VZbUbjmYBfBtW8Q1DF/bGrnkz3z9OLKuwm/jYLSlSDN05Ed\nMGGDGWLD1bZzgwAf2Pil+b144bTRNQzUcKNpxGMtS8wzdVzBPn7MPLiu8Dvt\nGKT8TlBfY7DkxylDybJU3yGUhYkH/ycYL4kmK4SKZKgjEN0XlBu9oRQqBjkt\nXkuj+JUFeBwF6yLIL2xchT8cu+6OZfP6PhdGA1iZrf3ErNmrMILebSDkDYUW\nxS/JbadaC/CGq50OfSWTsNqnqlyuPFuQMWwaxv5g4HcxYfXLNeb1aDG4ARUD\nMMYCmfW7ReWrScdCe0aRUbxSUGABw60+eD4CJLdv92OQjYvvJ7151ps8cAET\n1ZzJZvUp2IH8UBRpASHBJoMEyxoh/1F9n0mFlDWAnlijpoJnkKMQ9fneuEPn\n0o65xfqkJQk8I3+SYcdUe9fzCuzl+7QinJNGoBpX16FAQhrpQRuoiSAibvAb\nOJwAkKSziTXGMeLhV+NznyphEQ+OnSL/VZQqh5fEaEEXini77xNYR+4YA2jw\nnprCYaVjazMN2vzfYdObP808jQsHAcyNAxQMfaCQ05dwW1LiMBXONxuEn050\ninsGk34UA2R7MI3V0LDFgwCtg0UR+iU9uBRcDrVzxKbkmvOyxASgiPjHXbZJ\nkdkv\r\n=HN7p\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"christkv","email":"christkv@gmail.com"},{"name":"daprahamian","email":"dan.aprahamian@gmail.com"},{"name":"mbroadst","email":"mbroadst@gmail.com"},{"name":"octave","email":"chinsay@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/bson_3.0.0_1528907953990_0.8844406683259218"},"_hasShrinkwrap":false},"3.0.1":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"files":["lib","index.js","dist","bower.json"],"version":"3.0.1","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"license":"Apache-2.0","contributors":[],"repository":{"type":"git","url":"git+https://github.com/mongodb/js-bson.git"},"bugs":{"url":"https://github.com/mongodb/js-bson/issues"},"devDependencies":{"babel-core":"^6.26.0","babel-plugin-external-helpers":"^6.22.0","babel-preset-env":"^1.6.1","benchmark":"^2.1.4","chai":"^4.1.2","conventional-changelog-cli":"^1.3.5","eslint":"^4.7.2","eslint-plugin-prettier":"^2.3.1","istanbul":"^0.4.5","karma":"^2.0.4","karma-chrome-launcher":"^2.2.0","karma-mocha":"^1.3.0","karma-mocha-reporter":"^2.2.5","karma-rollup-preprocessor":"^6.0.0","mocha":"^3.5.3","prettier":"~1.12.0","rollup":"^0.56.2","rollup-plugin-babel":"^3.0.3","rollup-plugin-commonjs":"^8.3.0","rollup-plugin-json":"^3.0.0","rollup-plugin-node-builtins":"^2.1.2","rollup-plugin-node-globals":"^1.2.1","rollup-plugin-node-resolve":"^3.0.3"},"config":{"native":false},"main":"index.js","module":"dist/bson.esm.js","browser":{"./index.js":"./dist/bson.browser.umd.js","./dist/bson.esm.js":"./dist/bson.browser.esm.js"},"directories":{"lib":"./lib/bson"},"engines":{"node":">=4.0.0"},"scripts":{"test":"npm run-script test-node && npm run-script test-browser","test-node":"mocha ./test/node","test-browser":"npm run-script build && karma start","build":"rollup -c","lint":"eslint lib test","format":"prettier --print-width 100 --tab-width 2 --single-quote --write 'test/**/*.js' 'lib/**/*.js'","changelog":"conventional-changelog -p angular -i HISTORY.md -s","coverage":"istanbul cover _mocha -- --recursive --ui tdd test/node","prepublishOnly":"npm run build"},"dependencies":{"buffer":"^5.1.0"},"gitHead":"b858f508b57250eddb01c7bc2ec34f7967af590b","homepage":"https://github.com/mongodb/js-bson#readme","_id":"bson@3.0.1","_npmVersion":"5.6.0","_nodeVersion":"8.11.3","_npmUser":{"name":"mbroadst","email":"mbroadst@gmail.com"},"dist":{"integrity":"sha512-2A1ZmVNDx+feng1bS1vIt0Kaiug3KcI8FuZPOvP0gUsl7QbzI8+WkomAWi22/kVbwj43pwKWXt+A7JUraR9drA==","shasum":"0e6d3a4e3358f94f23efc76deba298402d7ad723","tarball":"https://registry.npmjs.org/bson/-/bson-3.0.1.tgz","fileCount":32,"unpackedSize":925993,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbR1A6CRA9TVsSAnZWagAAh2UP/iAn1WHkkITUSgf74cdH\niDM13WOK6o869nhAbemH177V6YhRkydvVvxTh9vzzce86HWUzYjtux42QgRw\nEd1YkivDM3wZqxJQJYal63BauZ3TKjnVfYEgSrmKcNltuRnYofIGTFk11ryN\np8Jf6Hlqupt+iYaKaiMor7cNB2EGQJf+qEIjjXbyTO4T3Vju30sRjsNE0vQm\nar7ZJre9j+pFWa+gjdmuJy5DZg+Ijx8gm5zLNnp9Oy8Pct5gSGrcuT7V61z6\nrhksAItddG8l5uuegthUX3Y/D5mPTqbl9ee7Xr5qBzD8DTbNvspzlyFIy/L+\nDb58quV2rZdutAr2E5KON+f1KaXucTahhVRF2ENvLn7MnohQ2xFKygaD30vO\nYVRribtOtazotgB4MhioOstTi/arMYMKiEKAIg+OnmKLvDV2Ho3Lo+TZ0FDE\nCmwln9Hosh0k67XykwWdDCLx5/PcgS5eQgaetRydZl8KtRf50IA/4Yhw+bps\nA4h/qtOmQC02UYUlN7FGmHsRkFAYVaAX31CLOpAHHJRBZoBLQK8ySwpXmDxp\n7tDNv8Nir6tSc36hYrhUUcWxomc6y+S/ZAxXlGHXN5sn2I0xhPoX8oGWZkWV\nx7E22qqcnewKumuVGR0fufe8lz1xJJO9x1scE1+57wScSQdnBPsrEUYs413S\nL+W3\r\n=0Who\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"christkv","email":"christkv@gmail.com"},{"name":"daprahamian","email":"dan.aprahamian@gmail.com"},{"name":"mbroadst","email":"mbroadst@gmail.com"},{"name":"octave","email":"chinsay@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/bson_3.0.1_1531400250576_0.17483592139831772"},"_hasShrinkwrap":false},"3.0.2":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"files":["lib","index.js","dist","bower.json"],"version":"3.0.2","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"license":"Apache-2.0","contributors":[],"repository":{"type":"git","url":"git+https://github.com/mongodb/js-bson.git"},"bugs":{"url":"https://github.com/mongodb/js-bson/issues"},"devDependencies":{"benchmark":"^2.1.4","babel-core":"^6.26.0","babel-plugin-external-helpers":"^6.22.0","babel-preset-env":"^1.6.0","chai":"^4.1.2","conventional-changelog-cli":"^1.3.5","eslint":"^4.7.2","eslint-plugin-prettier":"^2.3.1","istanbul":"^0.4.5","mocha":"^3.5.3","prettier":"~1.12.0","rollup":"^0.56.2","rollup-plugin-babel":"^3.0.3","rollup-plugin-commonjs":"^8.3.0","rollup-plugin-node-builtins":"^2.1.2","rollup-plugin-node-resolve":"^3.0.3"},"config":{"native":false},"main":"./index","directories":{"lib":"./lib/bson"},"browser":"dist/bson.js","engines":{"node":">=4.0.0"},"scripts":{"test":"mocha ./test/node","build":"rollup -c","lint":"eslint lib test","format":"prettier --print-width 100 --tab-width 2 --single-quote --write 'test/**/*.js' 'lib/**/*.js'","changelog":"conventional-changelog -p angular -i HISTORY.md -s","coverage":"istanbul cover _mocha -- --recursive --ui tdd test/node","prepublishOnly":"npm run build"},"gitHead":"ae8afd14913c3b1d54c96552ccfa60f50c2f4498","homepage":"https://github.com/mongodb/js-bson#readme","_id":"bson@3.0.2","_npmVersion":"5.6.0","_nodeVersion":"8.11.3","_npmUser":{"name":"daprahamian","email":"dan.aprahamian@gmail.com"},"dist":{"integrity":"sha512-HrDzr7y/ZkgyEVancPVDmfbaD8j81GzSNr6h6yUd/yZfavkrlrqI8aUZMCHrhyMoCW2/I+vEJDat1xDWRwVR6A==","shasum":"2467a76507a98c63ce34072f9965f4024e753dfc","tarball":"https://registry.npmjs.org/bson/-/bson-3.0.2.tgz","fileCount":28,"unpackedSize":418690,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbSQIHCRA9TVsSAnZWagAArC4P/irejIAQIIGCzhuokidD\nHbAbwcCw3FSzQbVfcx2/aXjaiEUQD/1Oeuh6i0/3P/PVv9jmds5VDWNPcdXo\nRk7y0azyy8VNkBEXXgxqDbZCI+ZdYAwZkIjzH9wbwyafhAz/o1yBH6GrOlGb\nx1UnQWUYhLWLNdzpFWOKCqutledN8fuvd5tlsntuMm7UYh2TRN57K2pfZQpm\nqm79Ntg133ZzceBDGC5S5QBQyUqUPF7gsB5NOYqqlNXHv9r77TxKRj72xYwh\nmi5vJZzQO0LUEUQYBZWFVHadBMrCFNX645p+0Y3zHpjbIJIuDMV/KxoGyuqA\nYZv/aY+CCL4JUzyjvckqIHrbaZW3bP0BowrcUjD2p5IUMwI+ifV28/5i7YiT\n7Wh5UzYVYLiEA/99yuTkfwwS0PIf4DV1ZvJB/hUtuE7Qzovyq91ibyTYIYQD\n6Mj9uMVFDhZ1y/9TOyBYgLVG/Cjrq1texTIw5PopoCKxfSI0veuhZiUW2MwA\n7ejRK1MecN5auzhM1jR+ZLIHb0RhOw9Es4+DuDzxw8NoLQQw0jxJwvLlylFI\nCw79fMDIkKS01xUDo0v7jVd5l0XghkQ5ydXDNXTKpgKlTRdgIDVJu/808Hfv\nIlFMBmGAkyLVzyMsMeC1W74pmYk6wARs5q1CTZxU7+2yy6w9BlXQwbSG02GA\ncsGG\r\n=8Ell\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"christkv","email":"christkv@gmail.com"},{"name":"daprahamian","email":"dan.aprahamian@gmail.com"},{"name":"mbroadst","email":"mbroadst@gmail.com"},{"name":"octave","email":"chinsay@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/bson_3.0.2_1531511302951_0.33508164585569733"},"_hasShrinkwrap":false},"1.1.0":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"files":["lib","index.js","browser_build","bower.json"],"version":"1.1.0","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"contributors":[],"repository":{"type":"git","url":"git+https://github.com/mongodb/js-bson.git"},"bugs":{"url":"https://github.com/mongodb/js-bson/issues"},"devDependencies":{"benchmark":"1.0.0","colors":"1.1.0","nodeunit":"0.9.0","babel-core":"^6.14.0","babel-loader":"^6.2.5","babel-polyfill":"^6.13.0","babel-preset-es2015":"^6.14.0","babel-preset-stage-0":"^6.5.0","babel-register":"^6.14.0","conventional-changelog-cli":"^1.3.5","webpack":"^1.13.2","webpack-polyfills-plugin":"0.0.9"},"config":{"native":false},"main":"./index","directories":{"lib":"./lib/bson"},"engines":{"node":">=0.6.19"},"scripts":{"test":"nodeunit ./test/node","build":"webpack --config ./webpack.dist.config.js","changelog":"conventional-changelog -p angular -i HISTORY.md -s","lint":"eslint lib test","format":"prettier --print-width 100 --tab-width 2 --single-quote --write 'test/**/*.js' 'lib/**/*.js'"},"browser":"lib/bson/bson.js","license":"Apache-2.0","readme":"# BSON parser\n\nBSON is short for Bin­ary JSON and is the bin­ary-en­coded seri­al­iz­a­tion of JSON-like doc­u­ments. You can learn more about it in [the specification](http://bsonspec.org).\n\nThis browser version of the BSON parser is compiled using [webpack](https://webpack.js.org/) and the current version is pre-compiled in the `browser_build` directory.\n\nThis is the default BSON parser, however, there is a C++ Node.js addon version as well that does not support the browser. It can be found at [mongod-js/bson-ext](https://github.com/mongodb-js/bson-ext).\n\n## Usage\n\nTo build a new version perform the following operations:\n\n```\nnpm install\nnpm run build\n```\n\nA simple example of how to use BSON in the browser:\n\n```html\n<script src=\"./browser_build/bson.js\"></script>\n\n<script>\n  function start() {\n    // Get the Long type\n    var Long = BSON.Long;\n    // Create a bson parser instance\n    var bson = new BSON();\n\n    // Serialize document\n    var doc = { long: Long.fromNumber(100) }\n\n    // Serialize a document\n    var data = bson.serialize(doc)\n    // De serialize it again\n    var doc_2 = bson.deserialize(data)\n  }\n</script>\n```\n\nA simple example of how to use BSON in `Node.js`:\n\n```js\n// Get BSON parser class\nvar BSON = require('bson')\n// Get the Long type\nvar Long = BSON.Long;\n// Create a bson parser instance\nvar bson = new BSON();\n\n// Serialize document\nvar doc = { long: Long.fromNumber(100) }\n\n// Serialize a document\nvar data = bson.serialize(doc)\nconsole.log('data:', data)\n\n// Deserialize the resulting Buffer\nvar doc_2 = bson.deserialize(data)\nconsole.log('doc_2:', doc_2)\n```\n\n## Installation\n\n`npm install bson`\n\n## API\n\n### BSON types\n\nFor all BSON types documentation, please refer to the following sources:\n  * [MongoDB BSON Type Reference](https://docs.mongodb.com/manual/reference/bson-types/)\n  * [BSON Spec](https://bsonspec.org/)\n\n### BSON serialization and deserialiation\n\n**`new BSON()`** - Creates a new BSON serializer/deserializer you can use to serialize and deserialize BSON.\n\n#### BSON.serialize\n\nThe BSON `serialize` method takes a JavaScript object and an optional options object and returns a Node.js Buffer.\n\n  * `BSON.serialize(object, options)`\n    * @param {Object} object the JavaScript object to serialize.\n    * @param {Boolean} [options.checkKeys=false] the serializer will check if keys are valid.\n    * @param {Boolean} [options.serializeFunctions=false] serialize the JavaScript functions.\n    * @param {Boolean} [options.ignoreUndefined=true]\n    * @return {Buffer} returns a Buffer instance.\n\n#### BSON.serializeWithBufferAndIndex\n\nThe BSON `serializeWithBufferAndIndex` method takes an object, a target buffer instance and an optional options object and returns the end serialization index in the final buffer.\n\n  * `BSON.serializeWithBufferAndIndex(object, buffer, options)`\n    * @param {Object} object the JavaScript object to serialize.\n    * @param {Buffer} buffer the Buffer you pre-allocated to store the serialized BSON object.\n    * @param {Boolean} [options.checkKeys=false] the serializer will check if keys are valid.\n    * @param {Boolean} [options.serializeFunctions=false] serialize the JavaScript functions.\n    * @param {Boolean} [options.ignoreUndefined=true] ignore undefined fields.\n    * @param {Number} [options.index=0] the index in the buffer where we wish to start serializing into.\n    * @return {Number} returns the index pointing to the last written byte in the buffer.\n\n#### BSON.calculateObjectSize\n\nThe BSON `calculateObjectSize` method takes a JavaScript object and an optional options object and returns the size of the BSON object.\n\n  * `BSON.calculateObjectSize(object, options)`\n    * @param {Object} object the JavaScript object to serialize.\n    * @param {Boolean} [options.serializeFunctions=false] serialize the JavaScript functions.\n    * @param {Boolean} [options.ignoreUndefined=true]\n    * @return {Buffer} returns a Buffer instance.\n\n#### BSON.deserialize\n\nThe BSON `deserialize` method takes a Node.js Buffer and an optional options object and returns a deserialized JavaScript object.\n\n  * `BSON.deserialize(buffer, options)`\n    * @param {Object} [options.evalFunctions=false] evaluate functions in the BSON document scoped to the object deserialized.\n    * @param {Object} [options.cacheFunctions=false] cache evaluated functions for reuse.\n    * @param {Object} [options.cacheFunctionsCrc32=false] use a crc32 code for caching, otherwise use the string of the function.\n    * @param {Object} [options.promoteLongs=true] when deserializing a Long will fit it into a Number if it's smaller than 53 bits\n    * @param {Object} [options.promoteBuffers=false] when deserializing a Binary will return it as a Node.js Buffer instance.\n    * @param {Object} [options.promoteValues=false] when deserializing will promote BSON values to their Node.js closest equivalent types.\n    * @param {Object} [options.fieldsAsRaw=null] allow to specify if there what fields we wish to return as unserialized raw buffer.\n    * @param {Object} [options.bsonRegExp=false] return BSON regular expressions as BSONRegExp instances.\n    * @return {Object} returns the deserialized Javascript Object.\n\n#### BSON.deserializeStream\n\nThe BSON `deserializeStream` method takes a Node.js Buffer, `startIndex` and allow more control over deserialization of a Buffer containing concatenated BSON documents.\n\n  * `BSON.deserializeStream(buffer, startIndex, numberOfDocuments, documents, docStartIndex, options)`\n    * @param {Buffer} buffer the buffer containing the serialized set of BSON documents.\n    * @param {Number} startIndex the start index in the data Buffer where the deserialization is to start.\n    * @param {Number} numberOfDocuments number of documents to deserialize.\n    * @param {Array} documents an array where to store the deserialized documents.\n    * @param {Number} docStartIndex the index in the documents array from where to start inserting documents.\n    * @param {Object} [options.evalFunctions=false] evaluate functions in the BSON document scoped to the object deserialized.\n    * @param {Object} [options.cacheFunctions=false] cache evaluated functions for reuse.\n    * @param {Object} [options.cacheFunctionsCrc32=false] use a crc32 code for caching, otherwise use the string of the function.\n    * @param {Object} [options.promoteLongs=true] when deserializing a Long will fit it into a Number if it's smaller than 53 bits\n    * @param {Object} [options.promoteBuffers=false] when deserializing a Binary will return it as a Node.js Buffer instance.\n    * @param {Object} [options.promoteValues=false] when deserializing will promote BSON values to their Node.js closest equivalent types.\n    * @param {Object} [options.fieldsAsRaw=null] allow to specify if there what fields we wish to return as unserialized raw buffer.\n    * @param {Object} [options.bsonRegExp=false] return BSON regular expressions as BSONRegExp instances.\n    * @return {Number} returns the next index in the buffer after deserialization **x** numbers of documents.\n\n## FAQ\n\n#### Why does `undefined` get converted to `null`?\n\nThe `undefined` BSON type has been [deprecated for many years](http://bsonspec.org/spec.html), so this library has dropped support for it. Use the `ignoreUndefined` option (for example, from the [driver](http://mongodb.github.io/node-mongodb-native/2.2/api/MongoClient.html#connect) ) to instead remove `undefined` keys.\n\n#### How do I add custom serialization logic?\n\nThis library looks for `toBSON()` functions on every path, and calls the `toBSON()` function to get the value to serialize.\n\n```javascript\nvar bson = new BSON();\n\nclass CustomSerialize {\n  toBSON() {\n    return 42;\n  }\n}\n\nconst obj = { answer: new CustomSerialize() };\n// \"{ answer: 42 }\"\nconsole.log(bson.deserialize(bson.serialize(obj)));\n```\n","readmeFilename":"README.md","gitHead":"39215f038b6787d015bdd1525e4b9db060603350","homepage":"https://github.com/mongodb/js-bson#readme","_id":"bson@1.1.0","_npmVersion":"5.6.0","_nodeVersion":"8.11.3","_npmUser":{"name":"mbroadst","email":"mbroadst@gmail.com"},"dist":{"integrity":"sha512-9Aeai9TacfNtWXOYarkFJRW2CWo+dRon+fuLZYJmvLV3+MiUp0bEI6IAZfXEIg7/Pl/7IWlLaDnhzTsD81etQA==","shasum":"bee57d1fb6a87713471af4e32bcae36de814b5b0","tarball":"https://registry.npmjs.org/bson/-/bson-1.1.0.tgz","fileCount":28,"unpackedSize":755155,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbcaTKCRA9TVsSAnZWagAAVVUQAIE4L99uDdW0YvzxkYLy\nkRadaW4t9wjT44xQe0y+lYePZE9DVXKlwdq4wJUHLtL2zeZk8e/3IfQp4tZK\ng0rZ12VJFOvZ7JvIcyQC2npJTaPzvwtJmihNWp2RM5rzBQHgLNRNe8UpqIC3\nA5UTPgoAMIN/OCDOrix9A3pdp1V51M8C5zrs8xsS2kK+iwxYe/zwJIi9X9rY\nZGg/fpD+XeBFvZuO3Tcz9HuB2Vo+BV2wvF4/FbDeYBJ9SlJ0ojFHbtP/av2k\nZ+RRJPukl6ODenzwMnIKMX4wSqV2bobqwE8iQpKAXGjGnYw23ZaZ81joFS7m\ngSsWdmTpAtUKbri9B6+l+qfjgJ+Jygs4Xh4lTzle+zOPeoDBmigJwWm4UV7I\nmlsMEifCITkEyambPgnT04lRIpWps5vmcUuJiRZml8rd3ik2zq7tIUQ0hs1c\nJguDACTigsoTidmeF3QPrzJ6mwKSE54OXlmmANIZ2WQ7p9D7obAO/U+qOAaK\nGdRs904u+YwBMHd7R8tcgKj93y/3wXRso1gI9dnzZnM0nChLYo+H3xG0Ham8\n69eBwDg+5PQ5QEXdecoWo2N0sw4LLFVAUcU5YSxLV7drGDRDULYWRFtuMzMW\n5J7FoazJwuEnOh93VHLQEXb7YAde3BakvZHMoKvLfLc/AaSn8KammzjxfxPb\naI7T\r\n=6+1t\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"christkv","email":"christkv@gmail.com"},{"name":"daprahamian","email":"dan.aprahamian@gmail.com"},{"name":"mbroadst","email":"mbroadst@gmail.com"},{"name":"octave","email":"chinsay@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/bson_1.1.0_1534174410289_0.38470476348971694"},"_hasShrinkwrap":false},"4.0.0-rc1":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"version":"4.0.0-rc1","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"license":"Apache-2.0","contributors":[],"repository":{"type":"git","url":"git+https://github.com/mongodb/js-bson.git"},"bugs":{"url":"https://github.com/mongodb/js-bson/issues"},"devDependencies":{"babel-core":"^6.26.0","babel-plugin-external-helpers":"^6.22.0","babel-preset-env":"^1.6.1","benchmark":"^2.1.4","chai":"^4.1.2","conventional-changelog-cli":"^1.3.5","dmd-clear":"^0.1.2","eslint":"^4.7.2","eslint-plugin-prettier":"^2.3.1","istanbul":"^0.4.5","jsdoc-to-markdown":"^4.0.1","karma":"^2.0.4","karma-chrome-launcher":"^2.2.0","karma-mocha":"^1.3.0","karma-mocha-reporter":"^2.2.5","karma-rollup-preprocessor":"^6.0.0","mocha":"^3.5.3","prettier":"~1.12.0","rollup":"^0.56.2","rollup-plugin-babel":"^3.0.3","rollup-plugin-commonjs":"^8.3.0","rollup-plugin-json":"^3.0.0","rollup-plugin-node-builtins":"^2.1.2","rollup-plugin-node-globals":"^1.2.1","rollup-plugin-node-resolve":"^3.0.3"},"config":{"native":false},"main":"lib/bson.js","module":"dist/bson.esm.js","browser":{"./index.js":"./dist/bson.browser.umd.js","./dist/bson.esm.js":"./dist/bson.browser.esm.js"},"engines":{"node":">=4.0.0"},"scripts":{"docs":"jsdoc2md --heading-depth 3 --template tools/README.hbs --plugin dmd-clear --files lib/bson.js > README.md","test":"npm run-script test-node && npm run-script test-browser","test-node":"mocha ./test/node","test-browser":"karma start","build":"rollup -c","lint":"eslint lib test","format":"prettier --print-width 100 --tab-width 2 --single-quote --write 'test/**/*.js' 'lib/**/*.js'","changelog":"conventional-changelog -p angular -i HISTORY.md -s","coverage":"istanbul cover _mocha -- --recursive --ui tdd test/node","prepublishOnly":"npm run build"},"dependencies":{"buffer":"^5.1.0","long":"^4.0.0"},"readme":"# BSON parser\n\nBSON is short for Bin­ary JSON and is the bin­ary-en­coded seri­al­iz­a­tion of JSON-like doc­u­ments. You can learn more about it in [the specification](http://bsonspec.org).\n\nThis browser version of the BSON parser is compiled using [rollup](https://rollupjs.org/) and the current version is pre-compiled in the `dist` directory.\n\nThis is the default BSON parser, however, there is a C++ Node.js addon version as well that does not support the browser. It can be found at [mongod-js/bson-ext](https://github.com/mongodb-js/bson-ext).\n\n## Usage\n\nTo build a new version perform the following operations:\n\n```\nnpm install\nnpm run build\n```\n\nA simple example of how to use BSON in the browser:\n\n```html\n<script src=\"./dist/bson.js\"></script>\n\n<script>\n  function start() {\n    // Get the Long type\n    const Long = BSON.Long;\n\n    // Serialize document\n    const doc = { long: Long.fromNumber(100) }\n\n    // Serialize a document\n    const data = BSON.serialize(doc)\n    // De serialize it again\n    const doc_2 = BSON.deserialize(data)\n  }\n</script>\n```\n\nA simple example of how to use BSON in `Node.js`:\n\n```js\nconst BSON = require('bson');\nconst Long = BSON.Long;\n\nconst doc = { long: Long.fromNumber(100) };\n\n// Serialize a document\nconst data = BSON.serialize(doc);\nconsole.log('data:', data);\n\n// Deserialize the resulting Buffer\nconst doc_2 = BSON.deserialize(data);\nconsole.log('doc_2:', doc_2);\n```\n\n## Installation\n\n`npm install bson`\n\n## Documentation\n\n### Functions\n\n<dl>\n<dt><a href=\"#setInternalBufferSize\">setInternalBufferSize(size)</a></dt>\n<dd><p>Sets the size of the internal serialization buffer.</p>\n</dd>\n<dt><a href=\"#serialize\">serialize(object)</a> ⇒ <code>Buffer</code></dt>\n<dd><p>Serialize a Javascript object.</p>\n</dd>\n<dt><a href=\"#serializeWithBufferAndIndex\">serializeWithBufferAndIndex(object, buffer)</a> ⇒ <code>Number</code></dt>\n<dd><p>Serialize a Javascript object using a predefined Buffer and index into the buffer, useful when pre-allocating the space for serialization.</p>\n</dd>\n<dt><a href=\"#deserialize\">deserialize(buffer)</a> ⇒ <code>Object</code></dt>\n<dd><p>Deserialize data as BSON.</p>\n</dd>\n<dt><a href=\"#calculateObjectSize\">calculateObjectSize(object)</a> ⇒ <code>Number</code></dt>\n<dd><p>Calculate the bson size for a passed in Javascript object.</p>\n</dd>\n<dt><a href=\"#deserializeStream\">deserializeStream(data, startIndex, numberOfDocuments, documents, docStartIndex, [options])</a> ⇒ <code>Number</code></dt>\n<dd><p>Deserialize stream data as BSON documents.</p>\n</dd>\n</dl>\n\n<a name=\"setInternalBufferSize\"></a>\n\n### setInternalBufferSize(size)\n\n| Param | Type | Description |\n| --- | --- | --- |\n| size | <code>number</code> | The desired size for the internal serialization buffer |\n\nSets the size of the internal serialization buffer.\n\n<a name=\"serialize\"></a>\n\n### serialize(object)\n\n| Param | Type | Default | Description |\n| --- | --- | --- | --- |\n| object | <code>Object</code> |  | the Javascript object to serialize. |\n| [options.checkKeys] | <code>Boolean</code> |  | the serializer will check if keys are valid. |\n| [options.serializeFunctions] | <code>Boolean</code> | <code>false</code> | serialize the javascript functions **(default:false)**. |\n| [options.ignoreUndefined] | <code>Boolean</code> | <code>true</code> | ignore undefined fields **(default:true)**. |\n\nSerialize a Javascript object.\n\n**Returns**: <code>Buffer</code> - returns the Buffer object containing the serialized object.  \n<a name=\"serializeWithBufferAndIndex\"></a>\n\n### serializeWithBufferAndIndex(object, buffer)\n\n| Param | Type | Default | Description |\n| --- | --- | --- | --- |\n| object | <code>Object</code> |  | the Javascript object to serialize. |\n| buffer | <code>Buffer</code> |  | the Buffer you pre-allocated to store the serialized BSON object. |\n| [options.checkKeys] | <code>Boolean</code> |  | the serializer will check if keys are valid. |\n| [options.serializeFunctions] | <code>Boolean</code> | <code>false</code> | serialize the javascript functions **(default:false)**. |\n| [options.ignoreUndefined] | <code>Boolean</code> | <code>true</code> | ignore undefined fields **(default:true)**. |\n| [options.index] | <code>Number</code> |  | the index in the buffer where we wish to start serializing into. |\n\nSerialize a Javascript object using a predefined Buffer and index into the buffer, useful when pre-allocating the space for serialization.\n\n**Returns**: <code>Number</code> - returns the index pointing to the last written byte in the buffer.  \n<a name=\"deserialize\"></a>\n\n### deserialize(buffer)\n\n| Param | Type | Default | Description |\n| --- | --- | --- | --- |\n| buffer | <code>Buffer</code> |  | the buffer containing the serialized set of BSON documents. |\n| [options.evalFunctions] | <code>Object</code> | <code>false</code> | evaluate functions in the BSON document scoped to the object deserialized. |\n| [options.cacheFunctions] | <code>Object</code> | <code>false</code> | cache evaluated functions for reuse. |\n| [options.cacheFunctionsCrc32] | <code>Object</code> | <code>false</code> | use a crc32 code for caching, otherwise use the string of the function. |\n| [options.promoteLongs] | <code>Object</code> | <code>true</code> | when deserializing a Long will fit it into a Number if it's smaller than 53 bits |\n| [options.promoteBuffers] | <code>Object</code> | <code>false</code> | when deserializing a Binary will return it as a node.js Buffer instance. |\n| [options.promoteValues] | <code>Object</code> | <code>false</code> | when deserializing will promote BSON values to their Node.js closest equivalent types. |\n| [options.fieldsAsRaw] | <code>Object</code> | <code></code> | allow to specify if there what fields we wish to return as unserialized raw buffer. |\n| [options.bsonRegExp] | <code>Object</code> | <code>false</code> | return BSON regular expressions as BSONRegExp instances. |\n| [options.allowObjectSmallerThanBufferSize] | <code>boolean</code> | <code>false</code> | allows the buffer to be larger than the parsed BSON object |\n\nDeserialize data as BSON.\n\n**Returns**: <code>Object</code> - returns the deserialized Javascript Object.  \n<a name=\"calculateObjectSize\"></a>\n\n### calculateObjectSize(object)\n\n| Param | Type | Default | Description |\n| --- | --- | --- | --- |\n| object | <code>Object</code> |  | the Javascript object to calculate the BSON byte size for. |\n| [options.serializeFunctions] | <code>Boolean</code> | <code>false</code> | serialize the javascript functions **(default:false)**. |\n| [options.ignoreUndefined] | <code>Boolean</code> | <code>true</code> | ignore undefined fields **(default:true)**. |\n\nCalculate the bson size for a passed in Javascript object.\n\n**Returns**: <code>Number</code> - returns the number of bytes the BSON object will take up.  \n<a name=\"deserializeStream\"></a>\n\n### deserializeStream(data, startIndex, numberOfDocuments, documents, docStartIndex, [options])\n\n| Param | Type | Default | Description |\n| --- | --- | --- | --- |\n| data | <code>Buffer</code> |  | the buffer containing the serialized set of BSON documents. |\n| startIndex | <code>Number</code> |  | the start index in the data Buffer where the deserialization is to start. |\n| numberOfDocuments | <code>Number</code> |  | number of documents to deserialize. |\n| documents | <code>Array</code> |  | an array where to store the deserialized documents. |\n| docStartIndex | <code>Number</code> |  | the index in the documents array from where to start inserting documents. |\n| [options] | <code>Object</code> |  | additional options used for the deserialization. |\n| [options.evalFunctions] | <code>Object</code> | <code>false</code> | evaluate functions in the BSON document scoped to the object deserialized. |\n| [options.cacheFunctions] | <code>Object</code> | <code>false</code> | cache evaluated functions for reuse. |\n| [options.cacheFunctionsCrc32] | <code>Object</code> | <code>false</code> | use a crc32 code for caching, otherwise use the string of the function. |\n| [options.promoteLongs] | <code>Object</code> | <code>true</code> | when deserializing a Long will fit it into a Number if it's smaller than 53 bits |\n| [options.promoteBuffers] | <code>Object</code> | <code>false</code> | when deserializing a Binary will return it as a node.js Buffer instance. |\n| [options.promoteValues] | <code>Object</code> | <code>false</code> | when deserializing will promote BSON values to their Node.js closest equivalent types. |\n| [options.fieldsAsRaw] | <code>Object</code> | <code></code> | allow to specify if there what fields we wish to return as unserialized raw buffer. |\n| [options.bsonRegExp] | <code>Object</code> | <code>false</code> | return BSON regular expressions as BSONRegExp instances. |\n\nDeserialize stream data as BSON documents.\n\n**Returns**: <code>Number</code> - returns the next index in the buffer after deserialization **x** numbers of documents.  \n\n## FAQ\n\n#### Why does `undefined` get converted to `null`?\n\nThe `undefined` BSON type has been [deprecated for many years](http://bsonspec.org/spec.html), so this library has dropped support for it. Use the `ignoreUndefined` option (for example, from the [driver](http://mongodb.github.io/node-mongodb-native/2.2/api/MongoClient.html#connect) ) to instead remove `undefined` keys.\n\n#### How do I add custom serialization logic?\n\nThis library looks for `toBSON()` functions on every path, and calls the `toBSON()` function to get the value to serialize.\n\n```javascript\nconst BSON = require('bson');\n\nclass CustomSerialize {\n  toBSON() {\n    return 42;\n  }\n}\n\nconst obj = { answer: new CustomSerialize() };\n// \"{ answer: 42 }\"\nconsole.log(BSON.deserialize(BSON.serialize(obj)));\n```\n","readmeFilename":"README.md","gitHead":"23811c7ac258458f9d977f621afe073f5c9d5ffb","homepage":"https://github.com/mongodb/js-bson#readme","_id":"bson@4.0.0-rc1","_npmVersion":"6.4.1","_nodeVersion":"8.12.0","_npmUser":{"name":"mbroadst","email":"mbroadst@gmail.com"},"dist":{"integrity":"sha512-8xyZGoD4ejfTygNLFAts3ZvxDutgUFvodaq4mKOpKz/0ipwt5uycdupEHD1RY0HTAmzGudOTYdMkfq1OCtGxKA==","shasum":"9b35d5bb2f09444d9728c0ddb150a24c69d3cb5f","tarball":"https://registry.npmjs.org/bson/-/bson-4.0.0-rc1.tgz","fileCount":32,"unpackedSize":829162,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbrTCdCRA9TVsSAnZWagAApvkQAI6BP8yF7MqBP5m7+6MT\n4EC5MKVINnyDxb9EpIrzbQM+ZBrRvR66jfQyGvyxH6qzhxHqhS4kDj7VbW/c\nLoSMkPo7iVUYcXxNGlOhLwuvnVrMFQGzhJoADmHQ9zccOdDHzVMvMBbAtShT\nbC6e8P6hF+yFhXNDgDp17raXwSezs7+lBnhmECDWl28Dtf7O7q+J0eObMrJI\niYQfz7N8nj++85qpCjsn2AL2QoxkmWCTgluWBHOK191q+B+KXLB/t45kcCTT\nT6qWFRtnwtbM6rT3BIVprS/aGhlmTIef5Myy4fUbR4zSLG8JB/FNJNR2/JqV\n0NCnBPWxaZ56HVQiRaWX7w7StFnPKKuvz1uvUZpoQo+ebG9sjNKowPTmD4sp\nmx7QNOTyrJpr7gaW6uWvS3gk7LUrclcur2nunsdG3sQSUYluiYlThHNhLEVX\nvkGvNXkH26iCr66Zi9Nf7W3PvVswOrTy4bvjIIBrTvMszecOiTRYMTGF60Sp\n8BGfGU6kLKtlP67ZbrufdWEEMCflfTF8pBJeWhlSw2Kk0nzGzomCw7yytJMu\nKe4mE3QzXDWPWCFUZmw0KaND54x+8oW3p6LQsbgcso0+VHnZLWhpAZ9DOQwH\ntbbiQgz+AdTW6MBJw5G4muHzMmd1mqpALPqRe++q2EKDUZva/GGcb58Id5SJ\nSYf+\r\n=szoO\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"christkv","email":"christkv@gmail.com"},{"name":"daprahamian","email":"dan.aprahamian@gmail.com"},{"name":"mbroadst","email":"mbroadst@gmail.com"},{"name":"octave","email":"chinsay@gmail.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/bson_4.0.0-rc1_1538076828354_0.878685574711763"},"_hasShrinkwrap":false},"4.0.0-rc2":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"version":"4.0.0-rc2","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"license":"Apache-2.0","contributors":[],"repository":{"type":"git","url":"git+https://github.com/mongodb/js-bson.git"},"bugs":{"url":"https://github.com/mongodb/js-bson/issues"},"devDependencies":{"babel-core":"^6.26.0","babel-plugin-external-helpers":"^6.22.0","babel-preset-env":"^1.6.1","benchmark":"^2.1.4","chai":"^4.1.2","conventional-changelog-cli":"^1.3.5","dmd-clear":"^0.1.2","eslint":"^4.7.2","eslint-plugin-prettier":"^2.3.1","istanbul":"^0.4.5","jsdoc-to-markdown":"^4.0.1","karma":"^2.0.4","karma-chrome-launcher":"^2.2.0","karma-mocha":"^1.3.0","karma-mocha-reporter":"^2.2.5","karma-rollup-preprocessor":"^6.0.0","mocha":"^3.5.3","prettier":"~1.12.0","rollup":"^0.56.2","rollup-plugin-babel":"^3.0.3","rollup-plugin-commonjs":"^8.3.0","rollup-plugin-json":"^3.0.0","rollup-plugin-node-builtins":"^2.1.2","rollup-plugin-node-globals":"^1.2.1","rollup-plugin-node-resolve":"^3.0.3"},"config":{"native":false},"main":"lib/bson.js","module":"dist/bson.esm.js","browser":{"./index.js":"./dist/bson.browser.umd.js","./dist/bson.esm.js":"./dist/bson.browser.esm.js"},"engines":{"node":">=4.0.0"},"scripts":{"docs":"jsdoc2md --heading-depth 3 --template tools/README.hbs --plugin dmd-clear --files lib/bson.js lib/extended_json.js > README.md","test":"npm run-script test-node && npm run-script test-browser","test-node":"mocha ./test/node","test-browser":"karma start","build":"rollup -c","lint":"eslint lib test","format":"prettier --print-width 100 --tab-width 2 --single-quote --write 'test/**/*.js' 'lib/**/*.js'","changelog":"conventional-changelog -p angular -i HISTORY.md -s","coverage":"istanbul cover _mocha -- --recursive --ui tdd test/node","prepublishOnly":"npm run build"},"dependencies":{"buffer":"^5.1.0","long":"^4.0.0"},"gitHead":"4674eeae51c0bc5841ff8025391101795bc603d6","homepage":"https://github.com/mongodb/js-bson#readme","_id":"bson@4.0.0-rc2","_npmVersion":"6.4.1","_nodeVersion":"8.12.0","_npmUser":{"name":"mbroadst","email":"mbroadst@gmail.com"},"dist":{"integrity":"sha512-Id7DR8yEUIqJco4sgOlCu2bKzMHlHsxdJidde/s036KWVwYFDHwNFYf73D5bv/HZAvraF01oIgFVRHxixUye1A==","shasum":"08903caebd2f24d106e880c89e2acd207f06ee7a","tarball":"https://registry.npmjs.org/bson/-/bson-4.0.0-rc2.tgz","fileCount":33,"unpackedSize":910110,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbtSOZCRA9TVsSAnZWagAAcmsP/0qcPgeuQLjUlQPCxEci\nX4FHkBK6Aa92b/XM7H7QNSWGIAki0zldQ9zG8Z775453zPxd696nyNFz7jG1\n0+sm5NovVVae9OeLLN7PmSAYjzTAVv3qX2GDmrKEGen81M0JTatTG+ZnohP/\nUjcXodlCw563x+kSFBg4EJDtR+M9vTQNcw7RFa4eQhUvnSNtQv9drCupG3Ic\nojyHQNjMw2Q8g9qbCe77NLpfXq1uGVAdj9TrJZaGB2gDS+5F/4Ja/6MhFumI\nWPVZDYNqca54og32RZRvrnivdg9JBUrfN0v3XKVwkF0SeceCPhQQoBHB4LEg\nadKLr7VhrbIkRHuRqyr3bh+5D7ae8V8iUSs81EImAM2EOKlJtodPnznQCytg\nmubJRipYajenIwE12wEdzv7W2unQBu8quXS7NM+A2cq7bOPY6S8D5q+kX7j8\nJYX8KEbHBnpQe/yu5Ye7NDBz7NdoxyOVYACx+mbgQiOh4d7Nx5Fu//bjPuND\nuLF7H4Hrpb8bo1ZoohS7iejbZCz4zEluM/c/abIVurg590ofq4jsC+Ok5moz\nudmsxdwvoISPkBgEs+EfXbMgApnGEM43l3F++3YBG6jxHV2j/8ZqsYOAbYna\nTV2j6rlnrLpZAGC4I2acLPIw5x6/LA/4z+wH8ELT0XRYa3OKw67Rhg6oxECf\nbp/e\r\n=+BBf\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"christkv","email":"christkv@gmail.com"},{"name":"daprahamian","email":"dan.aprahamian@gmail.com"},{"name":"mbroadst","email":"mbroadst@gmail.com"},{"name":"octave","email":"chinsay@gmail.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/bson_4.0.0-rc2_1538597783960_0.65838616510393"},"_hasShrinkwrap":false},"4.0.0-rc3":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"version":"4.0.0-rc3","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"license":"Apache-2.0","contributors":[],"repository":{"type":"git","url":"git+https://github.com/mongodb/js-bson.git"},"bugs":{"url":"https://github.com/mongodb/js-bson/issues"},"devDependencies":{"babel-core":"^6.26.0","babel-plugin-external-helpers":"^6.22.0","babel-preset-env":"^1.6.1","benchmark":"^2.1.4","chai":"^4.1.2","conventional-changelog-cli":"^1.3.5","dmd-clear":"^0.1.2","eslint":"^4.7.2","eslint-plugin-prettier":"^2.3.1","istanbul":"^0.4.5","jsdoc-to-markdown":"^4.0.1","karma":"^2.0.4","karma-chrome-launcher":"^2.2.0","karma-mocha":"^1.3.0","karma-mocha-reporter":"^2.2.5","karma-rollup-preprocessor":"^6.0.0","mocha":"^3.5.3","prettier":"~1.12.0","rollup":"^0.56.2","rollup-plugin-babel":"^3.0.3","rollup-plugin-commonjs":"^8.3.0","rollup-plugin-json":"^3.0.0","rollup-plugin-node-builtins":"^2.1.2","rollup-plugin-node-globals":"^1.2.1","rollup-plugin-node-resolve":"^3.0.3"},"config":{"native":false},"main":"lib/bson.js","module":"dist/bson.esm.js","browser":{"./index.js":"./dist/bson.browser.umd.js","./dist/bson.esm.js":"./dist/bson.browser.esm.js"},"engines":{"node":">=4.0.0"},"scripts":{"docs":"jsdoc2md --heading-depth 3 --template tools/README.hbs --plugin dmd-clear --files lib/bson.js lib/extended_json.js > README.md","test":"npm run-script test-node && npm run-script test-browser","test-node":"mocha ./test/node","test-browser":"karma start","build":"rollup -c","lint":"eslint lib test","format":"prettier --print-width 100 --tab-width 2 --single-quote --write 'test/**/*.js' 'lib/**/*.js'","changelog":"conventional-changelog -p angular -i HISTORY.md -s","coverage":"istanbul cover _mocha -- --recursive --ui tdd test/node","prepublishOnly":"npm run build"},"dependencies":{"buffer":"^5.1.0","long":"^4.0.0"},"readme":"# BSON parser\n\nBSON is short for Bin­ary JSON and is the bin­ary-en­coded seri­al­iz­a­tion of JSON-like doc­u­ments. You can learn more about it in [the specification](http://bsonspec.org).\n\nThis browser version of the BSON parser is compiled using [rollup](https://rollupjs.org/) and the current version is pre-compiled in the `dist` directory.\n\nThis is the default BSON parser, however, there is a C++ Node.js addon version as well that does not support the browser. It can be found at [mongod-js/bson-ext](https://github.com/mongodb-js/bson-ext).\n\n## Usage\n\nTo build a new version perform the following operations:\n\n```\nnpm install\nnpm run build\n```\n\nA simple example of how to use BSON in the browser:\n\n```html\n<script src=\"./dist/bson.js\"></script>\n\n<script>\n  function start() {\n    // Get the Long type\n    const Long = BSON.Long;\n\n    // Serialize document\n    const doc = { long: Long.fromNumber(100) }\n\n    // Serialize a document\n    const data = BSON.serialize(doc)\n    // De serialize it again\n    const doc_2 = BSON.deserialize(data)\n  }\n</script>\n```\n\nA simple example of how to use BSON in `Node.js`:\n\n```js\nconst BSON = require('bson');\nconst Long = BSON.Long;\n\nconst doc = { long: Long.fromNumber(100) };\n\n// Serialize a document\nconst data = BSON.serialize(doc);\nconsole.log('data:', data);\n\n// Deserialize the resulting Buffer\nconst doc_2 = BSON.deserialize(data);\nconsole.log('doc_2:', doc_2);\n```\n\n## Installation\n\n`npm install bson`\n\n## Documentation\n\n### Objects\n\n<dl>\n<dt><a href=\"#EJSON\">EJSON</a> : <code>object</code></dt>\n<dd></dd>\n</dl>\n\n### Functions\n\n<dl>\n<dt><a href=\"#setInternalBufferSize\">setInternalBufferSize(size)</a></dt>\n<dd><p>Sets the size of the internal serialization buffer.</p>\n</dd>\n<dt><a href=\"#serialize\">serialize(object)</a> ⇒ <code>Buffer</code></dt>\n<dd><p>Serialize a Javascript object.</p>\n</dd>\n<dt><a href=\"#serializeWithBufferAndIndex\">serializeWithBufferAndIndex(object, buffer)</a> ⇒ <code>Number</code></dt>\n<dd><p>Serialize a Javascript object using a predefined Buffer and index into the buffer, useful when pre-allocating the space for serialization.</p>\n</dd>\n<dt><a href=\"#deserialize\">deserialize(buffer)</a> ⇒ <code>Object</code></dt>\n<dd><p>Deserialize data as BSON.</p>\n</dd>\n<dt><a href=\"#calculateObjectSize\">calculateObjectSize(object)</a> ⇒ <code>Number</code></dt>\n<dd><p>Calculate the bson size for a passed in Javascript object.</p>\n</dd>\n<dt><a href=\"#deserializeStream\">deserializeStream(data, startIndex, numberOfDocuments, documents, docStartIndex, [options])</a> ⇒ <code>Number</code></dt>\n<dd><p>Deserialize stream data as BSON documents.</p>\n</dd>\n</dl>\n\n<a name=\"EJSON\"></a>\n\n### EJSON\n\n* [EJSON](#EJSON)\n\n    * [.parse(text, [options])](#EJSON.parse)\n\n    * [.stringify(value, [replacer], [space], [options])](#EJSON.stringify)\n\n    * [.serialize(bson, [options])](#EJSON.serialize)\n\n    * [.deserialize(ejson, [options])](#EJSON.deserialize)\n\n\n<a name=\"EJSON.parse\"></a>\n\n#### *EJSON*.parse(text, [options])\n\n| Param | Type | Default | Description |\n| --- | --- | --- | --- |\n| text | <code>string</code> |  |  |\n| [options] | <code>object</code> |  | Optional settings |\n| [options.relaxed] | <code>boolean</code> | <code>true</code> | Attempt to return native JS types where possible, rather than BSON types (if true) |\n\nParse an Extended JSON string, constructing the JavaScript value or object described by that\nstring.\n\n**Example**  \n```js\nconst { EJSON } = require('bson');\nconst text = '{ \"int32\": { \"$numberInt\": \"10\" } }';\n\n// prints { int32: { [String: '10'] _bsontype: 'Int32', value: '10' } }\nconsole.log(EJSON.parse(text, { relaxed: false }));\n\n// prints { int32: 10 }\nconsole.log(EJSON.parse(text));\n```\n<a name=\"EJSON.stringify\"></a>\n\n#### *EJSON*.stringify(value, [replacer], [space], [options])\n\n| Param | Type | Default | Description |\n| --- | --- | --- | --- |\n| value | <code>object</code> |  | The value to convert to extended JSON |\n| [replacer] | <code>function</code> \\| <code>array</code> |  | A function that alters the behavior of the stringification process, or an array of String and Number objects that serve as a whitelist for selecting/filtering the properties of the value object to be included in the JSON string. If this value is null or not provided, all properties of the object are included in the resulting JSON string |\n| [space] | <code>string</code> \\| <code>number</code> |  | A String or Number object that's used to insert white space into the output JSON string for readability purposes. |\n| [options] | <code>object</code> |  | Optional settings |\n| [options.relaxed] | <code>boolean</code> | <code>true</code> | Enabled Extended JSON's `relaxed` mode |\n\nConverts a BSON document to an Extended JSON string, optionally replacing values if a replacer\nfunction is specified or optionally including only the specified properties if a replacer array\nis specified.\n\n**Example**  \n```js\nconst { EJSON } = require('bson');\nconst Int32 = require('mongodb').Int32;\nconst doc = { int32: new Int32(10) };\n\n// prints '{\"int32\":{\"$numberInt\":\"10\"}}'\nconsole.log(EJSON.stringify(doc, { relaxed: false }));\n\n// prints '{\"int32\":10}'\nconsole.log(EJSON.stringify(doc));\n```\n<a name=\"EJSON.serialize\"></a>\n\n#### *EJSON*.serialize(bson, [options])\n\n| Param | Type | Description |\n| --- | --- | --- |\n| bson | <code>object</code> | The object to serialize |\n| [options] | <code>object</code> | Optional settings passed to the `stringify` function |\n\nSerializes an object to an Extended JSON string, and reparse it as a JavaScript object.\n\n<a name=\"EJSON.deserialize\"></a>\n\n#### *EJSON*.deserialize(ejson, [options])\n\n| Param | Type | Description |\n| --- | --- | --- |\n| ejson | <code>object</code> | The Extended JSON object to deserialize |\n| [options] | <code>object</code> | Optional settings passed to the parse method |\n\nDeserializes an Extended JSON object into a plain JavaScript object with native/BSON types\n\n<a name=\"setInternalBufferSize\"></a>\n\n### setInternalBufferSize(size)\n\n| Param | Type | Description |\n| --- | --- | --- |\n| size | <code>number</code> | The desired size for the internal serialization buffer |\n\nSets the size of the internal serialization buffer.\n\n<a name=\"serialize\"></a>\n\n### serialize(object)\n\n| Param | Type | Default | Description |\n| --- | --- | --- | --- |\n| object | <code>Object</code> |  | the Javascript object to serialize. |\n| [options.checkKeys] | <code>Boolean</code> |  | the serializer will check if keys are valid. |\n| [options.serializeFunctions] | <code>Boolean</code> | <code>false</code> | serialize the javascript functions **(default:false)**. |\n| [options.ignoreUndefined] | <code>Boolean</code> | <code>true</code> | ignore undefined fields **(default:true)**. |\n\nSerialize a Javascript object.\n\n**Returns**: <code>Buffer</code> - returns the Buffer object containing the serialized object.  \n<a name=\"serializeWithBufferAndIndex\"></a>\n\n### serializeWithBufferAndIndex(object, buffer)\n\n| Param | Type | Default | Description |\n| --- | --- | --- | --- |\n| object | <code>Object</code> |  | the Javascript object to serialize. |\n| buffer | <code>Buffer</code> |  | the Buffer you pre-allocated to store the serialized BSON object. |\n| [options.checkKeys] | <code>Boolean</code> |  | the serializer will check if keys are valid. |\n| [options.serializeFunctions] | <code>Boolean</code> | <code>false</code> | serialize the javascript functions **(default:false)**. |\n| [options.ignoreUndefined] | <code>Boolean</code> | <code>true</code> | ignore undefined fields **(default:true)**. |\n| [options.index] | <code>Number</code> |  | the index in the buffer where we wish to start serializing into. |\n\nSerialize a Javascript object using a predefined Buffer and index into the buffer, useful when pre-allocating the space for serialization.\n\n**Returns**: <code>Number</code> - returns the index pointing to the last written byte in the buffer.  \n<a name=\"deserialize\"></a>\n\n### deserialize(buffer)\n\n| Param | Type | Default | Description |\n| --- | --- | --- | --- |\n| buffer | <code>Buffer</code> |  | the buffer containing the serialized set of BSON documents. |\n| [options.evalFunctions] | <code>Object</code> | <code>false</code> | evaluate functions in the BSON document scoped to the object deserialized. |\n| [options.cacheFunctions] | <code>Object</code> | <code>false</code> | cache evaluated functions for reuse. |\n| [options.cacheFunctionsCrc32] | <code>Object</code> | <code>false</code> | use a crc32 code for caching, otherwise use the string of the function. |\n| [options.promoteLongs] | <code>Object</code> | <code>true</code> | when deserializing a Long will fit it into a Number if it's smaller than 53 bits |\n| [options.promoteBuffers] | <code>Object</code> | <code>false</code> | when deserializing a Binary will return it as a node.js Buffer instance. |\n| [options.promoteValues] | <code>Object</code> | <code>false</code> | when deserializing will promote BSON values to their Node.js closest equivalent types. |\n| [options.fieldsAsRaw] | <code>Object</code> | <code></code> | allow to specify if there what fields we wish to return as unserialized raw buffer. |\n| [options.bsonRegExp] | <code>Object</code> | <code>false</code> | return BSON regular expressions as BSONRegExp instances. |\n| [options.allowObjectSmallerThanBufferSize] | <code>boolean</code> | <code>false</code> | allows the buffer to be larger than the parsed BSON object |\n\nDeserialize data as BSON.\n\n**Returns**: <code>Object</code> - returns the deserialized Javascript Object.  \n<a name=\"calculateObjectSize\"></a>\n\n### calculateObjectSize(object)\n\n| Param | Type | Default | Description |\n| --- | --- | --- | --- |\n| object | <code>Object</code> |  | the Javascript object to calculate the BSON byte size for. |\n| [options.serializeFunctions] | <code>Boolean</code> | <code>false</code> | serialize the javascript functions **(default:false)**. |\n| [options.ignoreUndefined] | <code>Boolean</code> | <code>true</code> | ignore undefined fields **(default:true)**. |\n\nCalculate the bson size for a passed in Javascript object.\n\n**Returns**: <code>Number</code> - returns the number of bytes the BSON object will take up.  \n<a name=\"deserializeStream\"></a>\n\n### deserializeStream(data, startIndex, numberOfDocuments, documents, docStartIndex, [options])\n\n| Param | Type | Default | Description |\n| --- | --- | --- | --- |\n| data | <code>Buffer</code> |  | the buffer containing the serialized set of BSON documents. |\n| startIndex | <code>Number</code> |  | the start index in the data Buffer where the deserialization is to start. |\n| numberOfDocuments | <code>Number</code> |  | number of documents to deserialize. |\n| documents | <code>Array</code> |  | an array where to store the deserialized documents. |\n| docStartIndex | <code>Number</code> |  | the index in the documents array from where to start inserting documents. |\n| [options] | <code>Object</code> |  | additional options used for the deserialization. |\n| [options.evalFunctions] | <code>Object</code> | <code>false</code> | evaluate functions in the BSON document scoped to the object deserialized. |\n| [options.cacheFunctions] | <code>Object</code> | <code>false</code> | cache evaluated functions for reuse. |\n| [options.cacheFunctionsCrc32] | <code>Object</code> | <code>false</code> | use a crc32 code for caching, otherwise use the string of the function. |\n| [options.promoteLongs] | <code>Object</code> | <code>true</code> | when deserializing a Long will fit it into a Number if it's smaller than 53 bits |\n| [options.promoteBuffers] | <code>Object</code> | <code>false</code> | when deserializing a Binary will return it as a node.js Buffer instance. |\n| [options.promoteValues] | <code>Object</code> | <code>false</code> | when deserializing will promote BSON values to their Node.js closest equivalent types. |\n| [options.fieldsAsRaw] | <code>Object</code> | <code></code> | allow to specify if there what fields we wish to return as unserialized raw buffer. |\n| [options.bsonRegExp] | <code>Object</code> | <code>false</code> | return BSON regular expressions as BSONRegExp instances. |\n\nDeserialize stream data as BSON documents.\n\n**Returns**: <code>Number</code> - returns the next index in the buffer after deserialization **x** numbers of documents.  \n\n## FAQ\n\n#### Why does `undefined` get converted to `null`?\n\nThe `undefined` BSON type has been [deprecated for many years](http://bsonspec.org/spec.html), so this library has dropped support for it. Use the `ignoreUndefined` option (for example, from the [driver](http://mongodb.github.io/node-mongodb-native/2.2/api/MongoClient.html#connect) ) to instead remove `undefined` keys.\n\n#### How do I add custom serialization logic?\n\nThis library looks for `toBSON()` functions on every path, and calls the `toBSON()` function to get the value to serialize.\n\n```javascript\nconst BSON = require('bson');\n\nclass CustomSerialize {\n  toBSON() {\n    return 42;\n  }\n}\n\nconst obj = { answer: new CustomSerialize() };\n// \"{ answer: 42 }\"\nconsole.log(BSON.deserialize(BSON.serialize(obj)));\n```\n","readmeFilename":"README.md","gitHead":"a63c6ab3a9c3c88701fd0f4b1b6ba9f34a31cc06","homepage":"https://github.com/mongodb/js-bson#readme","_id":"bson@4.0.0-rc3","_npmVersion":"6.4.1","_nodeVersion":"8.12.0","_npmUser":{"name":"mbroadst","email":"mbroadst@gmail.com"},"dist":{"integrity":"sha512-4eyXKkXztWMtvQyHaeBrrqaYuJLhWKGBFhifiQ1QLQlOZPJnODzypNUR6kITH7Ao6i40YcfF3gLzpDRpSEnZmg==","shasum":"7fdd9e2edb215d29fb2ff2a8bfdc1d2fecf83701","tarball":"https://registry.npmjs.org/bson/-/bson-4.0.0-rc3.tgz","fileCount":33,"unpackedSize":933008,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbvlzeCRA9TVsSAnZWagAAtRgP/14S82tuBe/YSk6M5wtb\nPMc2WZTabUUZjzR4iCw0pfsRMFoqFWyTId3nTvwsMAYaYHE7GSxjasrcTYW8\nosIFJZgAWVqovYFsClUs/uqXypRRLY/9f1TFfLSuTJBXSPn2VhOij08LyODh\nMHt3Y9Vstk6HrKY/eDPD8IhmggAk9p8bXXQJp6FyIg+lAaiciRfiKNAh1JzV\nbXshiXwugs+dbDN9ed5Qt8HMO9b7Il7sb/vjortWXj3ToLCNhyazdC3u9psQ\nXYqyZ0aHLVxI+N52ct8v1Cn36bOYBIFvSwt+7IhDntGo10iYXgafJOiQWJaL\nMD3ubn7OkmG3vFLIfNrka0Et4CM/RFKxoFh5iaWnI9XfsDu/IcTJ9+84nYf4\n9DZGm4LpIO+a2RdG1dpUB91BIkwf89lGtwNX3QOcyNIFztiu0fGuTttOJe6I\nisejY5b9xlkkQb3AvPewdslbZQvE0vJavqqFeLGpNnyvTjHqMa+4tI010BtG\n6WmJUvzYeqKGpKQrV8JWdgLF8erA6qGHmZrhCM4A/mkZnkk4FPdhO9vfWKzH\nrUJOhBvkg/6AaiVFxsGryy2mxj2A1pdABS8rb+k7hmnQYuD+LO1P71fXnJej\nt8QLM43wePhCg9wTfFk3pF8M0uqPn3dcN/cI+7rXYzHeE/KHlIzw9lYuZRKW\nOjbG\r\n=6wOj\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"christkv","email":"christkv@gmail.com"},{"name":"daprahamian","email":"dan.aprahamian@gmail.com"},{"name":"mbroadst","email":"mbroadst@gmail.com"},{"name":"octave","email":"chinsay@gmail.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/bson_4.0.0-rc3_1539202268610_0.5140541644597765"},"_hasShrinkwrap":false},"4.0.0-rc4":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"version":"4.0.0-rc4","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"license":"Apache-2.0","contributors":[],"repository":{"type":"git","url":"git+https://github.com/mongodb/js-bson.git"},"bugs":{"url":"https://github.com/mongodb/js-bson/issues"},"devDependencies":{"babel-core":"^6.26.0","babel-plugin-external-helpers":"^6.22.0","babel-preset-env":"^1.6.1","benchmark":"^2.1.4","chai":"^4.1.2","conventional-changelog-cli":"^1.3.5","dmd-clear":"^0.1.2","eslint":"^4.7.2","eslint-plugin-prettier":"^2.3.1","istanbul":"^0.4.5","jsdoc-to-markdown":"^4.0.1","karma":"^2.0.4","karma-chrome-launcher":"^2.2.0","karma-mocha":"^1.3.0","karma-mocha-reporter":"^2.2.5","karma-rollup-preprocessor":"^6.0.0","mocha":"^3.5.3","prettier":"~1.12.0","rollup":"^0.56.2","rollup-plugin-babel":"^3.0.3","rollup-plugin-commonjs":"^8.3.0","rollup-plugin-json":"^3.0.0","rollup-plugin-node-builtins":"^2.1.2","rollup-plugin-node-globals":"^1.2.1","rollup-plugin-node-resolve":"^3.0.3"},"config":{"native":false},"main":"lib/bson.js","module":"dist/bson.esm.js","browser":{"./index.js":"./dist/bson.browser.umd.js","./dist/bson.esm.js":"./dist/bson.browser.esm.js"},"engines":{"node":">=4.0.0"},"scripts":{"docs":"jsdoc2md --heading-depth 3 --template tools/README.hbs --plugin dmd-clear --files lib/bson.js lib/extended_json.js > README.md","test":"npm run-script test-node && npm run-script test-browser","test-node":"mocha ./test/node","test-browser":"karma start","build":"rollup -c","lint":"eslint lib test","format":"prettier --print-width 100 --tab-width 2 --single-quote --write 'test/**/*.js' 'lib/**/*.js'","changelog":"conventional-changelog -p angular -i HISTORY.md -s","coverage":"istanbul cover _mocha -- --recursive --ui tdd test/node","prepublishOnly":"npm run build"},"dependencies":{"buffer":"^5.1.0","long":"^4.0.0"},"gitHead":"80973e4743a3e112ae402f1cb8ec38273491c570","homepage":"https://github.com/mongodb/js-bson#readme","_id":"bson@4.0.0-rc4","_npmVersion":"6.4.1","_nodeVersion":"8.12.0","_npmUser":{"name":"mbroadst","email":"mbroadst@gmail.com"},"dist":{"integrity":"sha512-oKOQgVCt1wE+HbYbujHW9TXra5qSbA10ThEO4ll+e8dR1T55G0v/LDFTnMRrKbwiVD/qefjoLcOKIqoWaqeZEw==","shasum":"4401e29ab65231be7ca89472aeba2632cdec4357","tarball":"https://registry.npmjs.org/bson/-/bson-4.0.0-rc4.tgz","fileCount":33,"unpackedSize":915592,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbwM52CRA9TVsSAnZWagAAP+IP/0+iWQhlG6oJGubUNcSh\njTpLcyhvPoWmGwM2bn63yZYKe5z8uYvFWARB6XtwCUIyWCxxKGU4eahRmTgu\nO4TDpuCR87oXgrqyNcWDRjlbS1uB9K9WQ5empMVQdy36sfL9cKFi4w2KZScs\nBDG3KyWAq+ZWsSRB58mKLT6xskaXshwfW+GVDWaDYg3u8CMC8RcsQdx+U0D7\nKkRXjViE55pFnfb0exnn2V24keF/HmqWG//ov+pFLhnD3Ucr71rhLxQLEOSa\n/uUX/7swpYjBZz7Yfx2AZeQvtkXo9fg//otL1x924x34zLGiGqPJx+9suyVu\nEbT/Su7t9H79lwsAZE/YekveGU1fke/ksgbP7I+UVIghG1b0KonaDA6dZzGw\nr368TmRkljGskEhacYcLrSyvdcnTpP0/XIeQvAPe4f/qrNk3vLNNCNlENzpk\nXfsiUo+4z+na66BIKiKzIwU7TNLa6KY34GuDSdTX1rgQFOvvWCKFqhcCWPLh\ne5vloAl8qB1TXtT+OxINBar/AGMK88D959lypwJPZnqGZxP2xRfubKcfJPne\nz67Hphn8vPrVxz6+TSweSe/CnWtC9/PDW2Yqcpm37hzLCifGKjyd2PUrPfmD\nkwk5aCb+0yVM2pTl5dpUVQHdqXCdUQ5nb/uIX7mDig93DS61cTy6JJr0BlvR\nnF2E\r\n=G6eG\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"christkv","email":"christkv@gmail.com"},{"name":"daprahamian","email":"dan.aprahamian@gmail.com"},{"name":"mbroadst","email":"mbroadst@gmail.com"},{"name":"octave","email":"chinsay@gmail.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/bson_4.0.0-rc4_1539362421398_0.6504272817610419"},"_hasShrinkwrap":false},"4.0.0-rc5":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"version":"4.0.0-rc5","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"license":"Apache-2.0","contributors":[],"repository":{"type":"git","url":"git+https://github.com/mongodb/js-bson.git"},"bugs":{"url":"https://github.com/mongodb/js-bson/issues"},"devDependencies":{"babel-core":"^6.26.0","babel-plugin-external-helpers":"^6.22.0","babel-preset-env":"^1.6.1","benchmark":"^2.1.4","chai":"^4.1.2","conventional-changelog-cli":"^1.3.5","dmd-clear":"^0.1.2","eslint":"^4.7.2","eslint-plugin-prettier":"^2.3.1","istanbul":"^0.4.5","jsdoc-to-markdown":"^4.0.1","karma":"^2.0.4","karma-chrome-launcher":"^2.2.0","karma-mocha":"^1.3.0","karma-mocha-reporter":"^2.2.5","karma-rollup-preprocessor":"^6.0.0","mocha":"^3.5.3","prettier":"~1.12.0","rollup":"^0.56.2","rollup-plugin-babel":"^3.0.3","rollup-plugin-commonjs":"^8.3.0","rollup-plugin-json":"^3.0.0","rollup-plugin-node-builtins":"^2.1.2","rollup-plugin-node-globals":"^1.2.1","rollup-plugin-node-resolve":"^3.0.3"},"config":{"native":false},"main":"lib/bson.js","module":"dist/bson.esm.js","browser":{"./index.js":"./dist/bson.browser.umd.js","./dist/bson.esm.js":"./dist/bson.browser.esm.js"},"engines":{"node":">=4.0.0"},"scripts":{"docs":"jsdoc2md --heading-depth 3 --template tools/README.hbs --plugin dmd-clear --files lib/bson.js lib/extended_json.js > README.md","test":"npm run-script test-node && npm run-script test-browser","test-node":"mocha ./test/node","test-browser":"karma start","build":"rollup -c","lint":"eslint lib test","format":"prettier --print-width 100 --tab-width 2 --single-quote --write 'test/**/*.js' 'lib/**/*.js'","changelog":"conventional-changelog -p angular -i HISTORY.md -s","coverage":"istanbul cover _mocha -- --recursive --ui tdd test/node","prepublishOnly":"npm run build"},"dependencies":{"buffer":"^5.1.0","long":"^4.0.0"},"gitHead":"5b9ce620f155b0d3a57d9ef7f01a9b1c5a031877","homepage":"https://github.com/mongodb/js-bson#readme","_id":"bson@4.0.0-rc5","_npmVersion":"6.4.1","_nodeVersion":"8.12.0","_npmUser":{"name":"mbroadst","email":"mbroadst@gmail.com"},"dist":{"integrity":"sha512-rHxS5oaizaDIsGR9ROLZD2SxsHL05worB1W8Ir4MSxV27olJRPY7xnZrmVQipPGdNUl2kJuSMdaQMQGHt/GpYQ==","shasum":"f919b7d6a17d83e9df1d0aa249bf96e291851665","tarball":"https://registry.npmjs.org/bson/-/bson-4.0.0-rc5.tgz","fileCount":33,"unpackedSize":917762,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbwQ28CRA9TVsSAnZWagAA/7oP/2Jj/4n29vRqKyKo/qr/\nKtLkuN2HkcZZfcSXGiuUPCbM6oJYsC1ZMoRbZ3wgnOI2FFz5no7qHL+zfVg2\nBB5MosUTk1VVeDEzwwonND0V88PJ5PXV2zBqgtmj0wpHvhLTDq+NV9Nvuslp\nSCtxZEglDFElD+srUbtr6Uj/ueQgKHKl8+ahR1TKjS1FMyivNSfwvGrHm+8Q\nZCSYy5BlXHeYefU5CiaVwpNHZzItx2zLD2zazLCkRW93+2bsfoeAU8cEtcLY\nX9U5dLluENdV34PklpI4jPtlpxxC+UjdTidaIZsuD1Bb6wtUV8eSvY+DIaef\nX8BAVzqtzZx84ZgD+XKldh76oGJ1lsA/wOGn5kauU8FmxDwZJoLl6Uy9/sFO\nci5qWuFXYUwfoZCNJ4+H3+FsWkto+EF4gY67s+LXT5mBrVzAXIMbbE2j+M42\ndiPyq35EnsbtZ/4B0SNaCZ33EUkxyQywm8NmfmZ6sunLulG82uSJlmAn6isL\nubxeE/hLCbLUm8BmQ/iYzDmAlIQGyfciPRz2LygbvB9QFqh2e6QZZwXVMGNU\nH/4rRmD7QQihUWpcaJeTEKHHbOCW5gxNPSEV65mkq1TjKj2u2MUYkRfM0/ZK\n1GXE6bro8ltiqyKNXvKrweEmvclYon4ks7z7woGdnMEmlL/2olqO9fualiOS\nM3wd\r\n=eQ37\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"christkv","email":"christkv@gmail.com"},{"name":"daprahamian","email":"dan.aprahamian@gmail.com"},{"name":"mbroadst","email":"mbroadst@gmail.com"},{"name":"octave","email":"chinsay@gmail.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/bson_4.0.0-rc5_1539378619065_0.37539799674089935"},"_hasShrinkwrap":false},"4.0.0-rc6":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"version":"4.0.0-rc6","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"license":"Apache-2.0","contributors":[],"repository":{"type":"git","url":"git+https://github.com/mongodb/js-bson.git"},"bugs":{"url":"https://github.com/mongodb/js-bson/issues"},"devDependencies":{"babel-core":"^6.26.0","babel-plugin-external-helpers":"^6.22.0","babel-preset-env":"^1.6.1","benchmark":"^2.1.4","chai":"^4.1.2","conventional-changelog-cli":"^1.3.5","dmd-clear":"^0.1.2","eslint":"^4.7.2","eslint-plugin-prettier":"^2.3.1","istanbul":"^0.4.5","jsdoc-to-markdown":"^4.0.1","karma":"^2.0.4","karma-chrome-launcher":"^2.2.0","karma-mocha":"^1.3.0","karma-mocha-reporter":"^2.2.5","karma-rollup-preprocessor":"^6.0.0","mocha":"^3.5.3","prettier":"~1.12.0","rollup":"^0.56.2","rollup-plugin-babel":"^3.0.3","rollup-plugin-commonjs":"^8.3.0","rollup-plugin-json":"^3.0.0","rollup-plugin-node-builtins":"^2.1.2","rollup-plugin-node-globals":"^1.2.1","rollup-plugin-node-resolve":"^3.0.3"},"config":{"native":false},"main":"lib/bson.js","module":"dist/bson.esm.js","browser":{"./lib/bson.js":"./dist/bson.browser.umd.js","./dist/bson.esm.js":"./dist/bson.browser.esm.js"},"engines":{"node":">=4.0.0"},"scripts":{"docs":"jsdoc2md --heading-depth 3 --template tools/README.hbs --plugin dmd-clear --files lib/bson.js lib/extended_json.js > README.md","test":"npm run-script test-node && npm run-script test-browser","test-node":"mocha ./test/node","test-browser":"karma start","build":"rollup -c","lint":"eslint lib test","format":"prettier --print-width 100 --tab-width 2 --single-quote --write 'test/**/*.js' 'lib/**/*.js'","changelog":"conventional-changelog -p angular -i HISTORY.md -s","coverage":"istanbul cover _mocha -- --recursive --ui tdd test/node","prepublishOnly":"npm run build"},"dependencies":{"buffer":"^5.1.0","long":"^4.0.0"},"readme":"# BSON parser\n\nBSON is short for Bin­ary JSON and is the bin­ary-en­coded seri­al­iz­a­tion of JSON-like doc­u­ments. You can learn more about it in [the specification](http://bsonspec.org).\n\nThis browser version of the BSON parser is compiled using [rollup](https://rollupjs.org/) and the current version is pre-compiled in the `dist` directory.\n\nThis is the default BSON parser, however, there is a C++ Node.js addon version as well that does not support the browser. It can be found at [mongod-js/bson-ext](https://github.com/mongodb-js/bson-ext).\n\n## Usage\n\nTo build a new version perform the following operations:\n\n```\nnpm install\nnpm run build\n```\n\nA simple example of how to use BSON in the browser:\n\n```html\n<script src=\"./dist/bson.js\"></script>\n\n<script>\n  function start() {\n    // Get the Long type\n    const Long = BSON.Long;\n\n    // Serialize document\n    const doc = { long: Long.fromNumber(100) }\n\n    // Serialize a document\n    const data = BSON.serialize(doc)\n    // De serialize it again\n    const doc_2 = BSON.deserialize(data)\n  }\n</script>\n```\n\nA simple example of how to use BSON in `Node.js`:\n\n```js\nconst BSON = require('bson');\nconst Long = BSON.Long;\n\nconst doc = { long: Long.fromNumber(100) };\n\n// Serialize a document\nconst data = BSON.serialize(doc);\nconsole.log('data:', data);\n\n// Deserialize the resulting Buffer\nconst doc_2 = BSON.deserialize(data);\nconsole.log('doc_2:', doc_2);\n```\n\n## Installation\n\n`npm install bson`\n\n## Documentation\n\n### Objects\n\n<dl>\n<dt><a href=\"#EJSON\">EJSON</a> : <code>object</code></dt>\n<dd></dd>\n</dl>\n\n### Functions\n\n<dl>\n<dt><a href=\"#setInternalBufferSize\">setInternalBufferSize(size)</a></dt>\n<dd><p>Sets the size of the internal serialization buffer.</p>\n</dd>\n<dt><a href=\"#serialize\">serialize(object)</a> ⇒ <code>Buffer</code></dt>\n<dd><p>Serialize a Javascript object.</p>\n</dd>\n<dt><a href=\"#serializeWithBufferAndIndex\">serializeWithBufferAndIndex(object, buffer)</a> ⇒ <code>Number</code></dt>\n<dd><p>Serialize a Javascript object using a predefined Buffer and index into the buffer, useful when pre-allocating the space for serialization.</p>\n</dd>\n<dt><a href=\"#deserialize\">deserialize(buffer)</a> ⇒ <code>Object</code></dt>\n<dd><p>Deserialize data as BSON.</p>\n</dd>\n<dt><a href=\"#calculateObjectSize\">calculateObjectSize(object)</a> ⇒ <code>Number</code></dt>\n<dd><p>Calculate the bson size for a passed in Javascript object.</p>\n</dd>\n<dt><a href=\"#deserializeStream\">deserializeStream(data, startIndex, numberOfDocuments, documents, docStartIndex, [options])</a> ⇒ <code>Number</code></dt>\n<dd><p>Deserialize stream data as BSON documents.</p>\n</dd>\n</dl>\n\n<a name=\"EJSON\"></a>\n\n### EJSON\n\n* [EJSON](#EJSON)\n\n    * [.parse(text, [options])](#EJSON.parse)\n\n    * [.stringify(value, [replacer], [space], [options])](#EJSON.stringify)\n\n    * [.serialize(bson, [options])](#EJSON.serialize)\n\n    * [.deserialize(ejson, [options])](#EJSON.deserialize)\n\n\n<a name=\"EJSON.parse\"></a>\n\n#### *EJSON*.parse(text, [options])\n\n| Param | Type | Default | Description |\n| --- | --- | --- | --- |\n| text | <code>string</code> |  |  |\n| [options] | <code>object</code> |  | Optional settings |\n| [options.relaxed] | <code>boolean</code> | <code>true</code> | Attempt to return native JS types where possible, rather than BSON types (if true) |\n\nParse an Extended JSON string, constructing the JavaScript value or object described by that\nstring.\n\n**Example**  \n```js\nconst { EJSON } = require('bson');\nconst text = '{ \"int32\": { \"$numberInt\": \"10\" } }';\n\n// prints { int32: { [String: '10'] _bsontype: 'Int32', value: '10' } }\nconsole.log(EJSON.parse(text, { relaxed: false }));\n\n// prints { int32: 10 }\nconsole.log(EJSON.parse(text));\n```\n<a name=\"EJSON.stringify\"></a>\n\n#### *EJSON*.stringify(value, [replacer], [space], [options])\n\n| Param | Type | Default | Description |\n| --- | --- | --- | --- |\n| value | <code>object</code> |  | The value to convert to extended JSON |\n| [replacer] | <code>function</code> \\| <code>array</code> |  | A function that alters the behavior of the stringification process, or an array of String and Number objects that serve as a whitelist for selecting/filtering the properties of the value object to be included in the JSON string. If this value is null or not provided, all properties of the object are included in the resulting JSON string |\n| [space] | <code>string</code> \\| <code>number</code> |  | A String or Number object that's used to insert white space into the output JSON string for readability purposes. |\n| [options] | <code>object</code> |  | Optional settings |\n| [options.relaxed] | <code>boolean</code> | <code>true</code> | Enabled Extended JSON's `relaxed` mode |\n\nConverts a BSON document to an Extended JSON string, optionally replacing values if a replacer\nfunction is specified or optionally including only the specified properties if a replacer array\nis specified.\n\n**Example**  \n```js\nconst { EJSON } = require('bson');\nconst Int32 = require('mongodb').Int32;\nconst doc = { int32: new Int32(10) };\n\n// prints '{\"int32\":{\"$numberInt\":\"10\"}}'\nconsole.log(EJSON.stringify(doc, { relaxed: false }));\n\n// prints '{\"int32\":10}'\nconsole.log(EJSON.stringify(doc));\n```\n<a name=\"EJSON.serialize\"></a>\n\n#### *EJSON*.serialize(bson, [options])\n\n| Param | Type | Description |\n| --- | --- | --- |\n| bson | <code>object</code> | The object to serialize |\n| [options] | <code>object</code> | Optional settings passed to the `stringify` function |\n\nSerializes an object to an Extended JSON string, and reparse it as a JavaScript object.\n\n<a name=\"EJSON.deserialize\"></a>\n\n#### *EJSON*.deserialize(ejson, [options])\n\n| Param | Type | Description |\n| --- | --- | --- |\n| ejson | <code>object</code> | The Extended JSON object to deserialize |\n| [options] | <code>object</code> | Optional settings passed to the parse method |\n\nDeserializes an Extended JSON object into a plain JavaScript object with native/BSON types\n\n<a name=\"setInternalBufferSize\"></a>\n\n### setInternalBufferSize(size)\n\n| Param | Type | Description |\n| --- | --- | --- |\n| size | <code>number</code> | The desired size for the internal serialization buffer |\n\nSets the size of the internal serialization buffer.\n\n<a name=\"serialize\"></a>\n\n### serialize(object)\n\n| Param | Type | Default | Description |\n| --- | --- | --- | --- |\n| object | <code>Object</code> |  | the Javascript object to serialize. |\n| [options.checkKeys] | <code>Boolean</code> |  | the serializer will check if keys are valid. |\n| [options.serializeFunctions] | <code>Boolean</code> | <code>false</code> | serialize the javascript functions **(default:false)**. |\n| [options.ignoreUndefined] | <code>Boolean</code> | <code>true</code> | ignore undefined fields **(default:true)**. |\n\nSerialize a Javascript object.\n\n**Returns**: <code>Buffer</code> - returns the Buffer object containing the serialized object.  \n<a name=\"serializeWithBufferAndIndex\"></a>\n\n### serializeWithBufferAndIndex(object, buffer)\n\n| Param | Type | Default | Description |\n| --- | --- | --- | --- |\n| object | <code>Object</code> |  | the Javascript object to serialize. |\n| buffer | <code>Buffer</code> |  | the Buffer you pre-allocated to store the serialized BSON object. |\n| [options.checkKeys] | <code>Boolean</code> |  | the serializer will check if keys are valid. |\n| [options.serializeFunctions] | <code>Boolean</code> | <code>false</code> | serialize the javascript functions **(default:false)**. |\n| [options.ignoreUndefined] | <code>Boolean</code> | <code>true</code> | ignore undefined fields **(default:true)**. |\n| [options.index] | <code>Number</code> |  | the index in the buffer where we wish to start serializing into. |\n\nSerialize a Javascript object using a predefined Buffer and index into the buffer, useful when pre-allocating the space for serialization.\n\n**Returns**: <code>Number</code> - returns the index pointing to the last written byte in the buffer.  \n<a name=\"deserialize\"></a>\n\n### deserialize(buffer)\n\n| Param | Type | Default | Description |\n| --- | --- | --- | --- |\n| buffer | <code>Buffer</code> |  | the buffer containing the serialized set of BSON documents. |\n| [options.evalFunctions] | <code>Object</code> | <code>false</code> | evaluate functions in the BSON document scoped to the object deserialized. |\n| [options.cacheFunctions] | <code>Object</code> | <code>false</code> | cache evaluated functions for reuse. |\n| [options.cacheFunctionsCrc32] | <code>Object</code> | <code>false</code> | use a crc32 code for caching, otherwise use the string of the function. |\n| [options.promoteLongs] | <code>Object</code> | <code>true</code> | when deserializing a Long will fit it into a Number if it's smaller than 53 bits |\n| [options.promoteBuffers] | <code>Object</code> | <code>false</code> | when deserializing a Binary will return it as a node.js Buffer instance. |\n| [options.promoteValues] | <code>Object</code> | <code>false</code> | when deserializing will promote BSON values to their Node.js closest equivalent types. |\n| [options.fieldsAsRaw] | <code>Object</code> | <code></code> | allow to specify if there what fields we wish to return as unserialized raw buffer. |\n| [options.bsonRegExp] | <code>Object</code> | <code>false</code> | return BSON regular expressions as BSONRegExp instances. |\n| [options.allowObjectSmallerThanBufferSize] | <code>boolean</code> | <code>false</code> | allows the buffer to be larger than the parsed BSON object |\n\nDeserialize data as BSON.\n\n**Returns**: <code>Object</code> - returns the deserialized Javascript Object.  \n<a name=\"calculateObjectSize\"></a>\n\n### calculateObjectSize(object)\n\n| Param | Type | Default | Description |\n| --- | --- | --- | --- |\n| object | <code>Object</code> |  | the Javascript object to calculate the BSON byte size for. |\n| [options.serializeFunctions] | <code>Boolean</code> | <code>false</code> | serialize the javascript functions **(default:false)**. |\n| [options.ignoreUndefined] | <code>Boolean</code> | <code>true</code> | ignore undefined fields **(default:true)**. |\n\nCalculate the bson size for a passed in Javascript object.\n\n**Returns**: <code>Number</code> - returns the number of bytes the BSON object will take up.  \n<a name=\"deserializeStream\"></a>\n\n### deserializeStream(data, startIndex, numberOfDocuments, documents, docStartIndex, [options])\n\n| Param | Type | Default | Description |\n| --- | --- | --- | --- |\n| data | <code>Buffer</code> |  | the buffer containing the serialized set of BSON documents. |\n| startIndex | <code>Number</code> |  | the start index in the data Buffer where the deserialization is to start. |\n| numberOfDocuments | <code>Number</code> |  | number of documents to deserialize. |\n| documents | <code>Array</code> |  | an array where to store the deserialized documents. |\n| docStartIndex | <code>Number</code> |  | the index in the documents array from where to start inserting documents. |\n| [options] | <code>Object</code> |  | additional options used for the deserialization. |\n| [options.evalFunctions] | <code>Object</code> | <code>false</code> | evaluate functions in the BSON document scoped to the object deserialized. |\n| [options.cacheFunctions] | <code>Object</code> | <code>false</code> | cache evaluated functions for reuse. |\n| [options.cacheFunctionsCrc32] | <code>Object</code> | <code>false</code> | use a crc32 code for caching, otherwise use the string of the function. |\n| [options.promoteLongs] | <code>Object</code> | <code>true</code> | when deserializing a Long will fit it into a Number if it's smaller than 53 bits |\n| [options.promoteBuffers] | <code>Object</code> | <code>false</code> | when deserializing a Binary will return it as a node.js Buffer instance. |\n| [options.promoteValues] | <code>Object</code> | <code>false</code> | when deserializing will promote BSON values to their Node.js closest equivalent types. |\n| [options.fieldsAsRaw] | <code>Object</code> | <code></code> | allow to specify if there what fields we wish to return as unserialized raw buffer. |\n| [options.bsonRegExp] | <code>Object</code> | <code>false</code> | return BSON regular expressions as BSONRegExp instances. |\n\nDeserialize stream data as BSON documents.\n\n**Returns**: <code>Number</code> - returns the next index in the buffer after deserialization **x** numbers of documents.  \n\n## FAQ\n\n#### Why does `undefined` get converted to `null`?\n\nThe `undefined` BSON type has been [deprecated for many years](http://bsonspec.org/spec.html), so this library has dropped support for it. Use the `ignoreUndefined` option (for example, from the [driver](http://mongodb.github.io/node-mongodb-native/2.2/api/MongoClient.html#connect) ) to instead remove `undefined` keys.\n\n#### How do I add custom serialization logic?\n\nThis library looks for `toBSON()` functions on every path, and calls the `toBSON()` function to get the value to serialize.\n\n```javascript\nconst BSON = require('bson');\n\nclass CustomSerialize {\n  toBSON() {\n    return 42;\n  }\n}\n\nconst obj = { answer: new CustomSerialize() };\n// \"{ answer: 42 }\"\nconsole.log(BSON.deserialize(BSON.serialize(obj)));\n```\n","readmeFilename":"README.md","gitHead":"c210a695d585ac5340c3434e7699f73fbd771b04","homepage":"https://github.com/mongodb/js-bson#readme","_id":"bson@4.0.0-rc6","_npmVersion":"6.4.1","_nodeVersion":"8.12.0","_npmUser":{"name":"mbroadst","email":"mbroadst@gmail.com"},"dist":{"integrity":"sha512-pMR0qqnc+9XyktF6M1Rhnx2YXmrOhldC42/Gxftt+tpW4Bd5U7KScWwJwP7ymNx/elb1hn6DReIIsyuxSXxdrQ==","shasum":"a03bdf4e627abefe477b7aaef533eb8fa7d42f9f","tarball":"https://registry.npmjs.org/bson/-/bson-4.0.0-rc6.tgz","fileCount":33,"unpackedSize":917084,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbz1eKCRA9TVsSAnZWagAAUkMQAIjCNLoayVvZpFyTBti8\n04Tr0q62yMAo3TRKbHf8u51A5l3gWBl+Kr+FEHZ3S2OhvbI9I0mVtYJyhU7z\nvsT4HwPvot6jeIALQO9+AHMgOWGzctbFB2Yla5GvreEA7e7XrgSfxOr9CtBd\nupVUq7Vd7t6Xu8vy+EdGO2I8E+RUc3B5BSKScfq4iT/waS+STYgjfUEqGLZe\nIim1uQhW/QZvQBgCr7aBECMxYv3JKJrl6ro1GBgDTUXqc23mCTTEKhNbSXLR\n3JBzN8IYOV0qNBGjzhluHrtZvL/TyujVHW15zlZ2lrc14wmcG9c5G6bB8wXY\n2ooXwA02MwhXaHhW6pJkDmIRVLEv3lIUGHxJycd5g0MO0AXD2nYe3lvcr6u8\nEpALC+ywtdoksg+ZWnhwFzaIfOcBp91VarILRTC9BrMPfXkkqSxber61Vk4h\nMpmfYig1FhIBkWABuD7Cp5/gz4WAjFwqxgaZGORO8rxWFGfvqFP+6b2FyWFq\n639V8+PUtFmehRVoMQJKglNtCB2cExvT3UfT8GDpN1oy36rjEJkbuVPWtHLG\nOvsA2U4y/xtAg90UQPYPHjAWkm/RAw6wunv1hQmGsPz0bfEI/lAMWz7p6pX4\nHlLBdu0JEew/FgjMnRzgIkbtCiKGgIRg+Aqwkj7WmMQ6/OfFeGUNEhmW5us1\nXa+9\r\n=1rnW\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"christkv","email":"christkv@gmail.com"},{"name":"daprahamian","email":"dan.aprahamian@gmail.com"},{"name":"mbroadst","email":"mbroadst@gmail.com"},{"name":"octave","email":"chinsay@gmail.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/bson_4.0.0-rc6_1540315017818_0.7870699777134655"},"_hasShrinkwrap":false},"4.0.0-rc7":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"version":"4.0.0-rc7","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"license":"Apache-2.0","contributors":[],"repository":{"type":"git","url":"git+https://github.com/mongodb/js-bson.git"},"bugs":{"url":"https://github.com/mongodb/js-bson/issues"},"devDependencies":{"babel-core":"^6.26.0","babel-plugin-external-helpers":"^6.22.0","babel-preset-env":"^1.6.1","benchmark":"^2.1.4","chai":"^4.1.2","conventional-changelog-cli":"^1.3.5","dmd-clear":"^0.1.2","eslint":"^4.7.2","eslint-plugin-prettier":"^2.3.1","istanbul":"^0.4.5","jsdoc-to-markdown":"^4.0.1","karma":"^2.0.4","karma-chrome-launcher":"^2.2.0","karma-mocha":"^1.3.0","karma-mocha-reporter":"^2.2.5","karma-rollup-preprocessor":"^6.0.0","mocha":"^3.5.3","prettier":"~1.12.0","rollup":"^0.56.2","rollup-plugin-babel":"^3.0.3","rollup-plugin-commonjs":"^8.3.0","rollup-plugin-json":"^3.0.0","rollup-plugin-node-builtins":"^2.1.2","rollup-plugin-node-globals":"^1.2.1","rollup-plugin-node-resolve":"^3.0.3"},"config":{"native":false},"main":"lib/bson.js","module":"dist/bson.esm.js","browser":{"./lib/bson.js":"./dist/bson.browser.umd.js","./dist/bson.esm.js":"./dist/bson.browser.esm.js"},"engines":{"node":">=4.0.0"},"scripts":{"docs":"jsdoc2md --heading-depth 3 --template tools/README.hbs --plugin dmd-clear --files lib/bson.js lib/extended_json.js > README.md","test":"npm run-script test-node && npm run-script test-browser","test-node":"mocha ./test/node","test-browser":"karma start","build":"rollup -c","lint":"eslint lib test","format":"prettier --print-width 100 --tab-width 2 --single-quote --write 'test/**/*.js' 'lib/**/*.js'","changelog":"conventional-changelog -p angular -i HISTORY.md -s","coverage":"istanbul cover _mocha -- --recursive --ui tdd test/node","prepublishOnly":"npm run build"},"dependencies":{"buffer":"^5.1.0","long":"^4.0.0"},"readme":"# BSON parser\n\nBSON is short for Bin­ary JSON and is the bin­ary-en­coded seri­al­iz­a­tion of JSON-like doc­u­ments. You can learn more about it in [the specification](http://bsonspec.org).\n\nThis browser version of the BSON parser is compiled using [rollup](https://rollupjs.org/) and the current version is pre-compiled in the `dist` directory.\n\nThis is the default BSON parser, however, there is a C++ Node.js addon version as well that does not support the browser. It can be found at [mongod-js/bson-ext](https://github.com/mongodb-js/bson-ext).\n\n## Usage\n\nTo build a new version perform the following operations:\n\n```\nnpm install\nnpm run build\n```\n\nA simple example of how to use BSON in the browser:\n\n```html\n<script src=\"./dist/bson.js\"></script>\n\n<script>\n  function start() {\n    // Get the Long type\n    const Long = BSON.Long;\n\n    // Serialize document\n    const doc = { long: Long.fromNumber(100) }\n\n    // Serialize a document\n    const data = BSON.serialize(doc)\n    // De serialize it again\n    const doc_2 = BSON.deserialize(data)\n  }\n</script>\n```\n\nA simple example of how to use BSON in `Node.js`:\n\n```js\nconst BSON = require('bson');\nconst Long = BSON.Long;\n\nconst doc = { long: Long.fromNumber(100) };\n\n// Serialize a document\nconst data = BSON.serialize(doc);\nconsole.log('data:', data);\n\n// Deserialize the resulting Buffer\nconst doc_2 = BSON.deserialize(data);\nconsole.log('doc_2:', doc_2);\n```\n\n## Installation\n\n`npm install bson`\n\n## Documentation\n\n### Objects\n\n<dl>\n<dt><a href=\"#EJSON\">EJSON</a> : <code>object</code></dt>\n<dd></dd>\n</dl>\n\n### Functions\n\n<dl>\n<dt><a href=\"#setInternalBufferSize\">setInternalBufferSize(size)</a></dt>\n<dd><p>Sets the size of the internal serialization buffer.</p>\n</dd>\n<dt><a href=\"#serialize\">serialize(object)</a> ⇒ <code>Buffer</code></dt>\n<dd><p>Serialize a Javascript object.</p>\n</dd>\n<dt><a href=\"#serializeWithBufferAndIndex\">serializeWithBufferAndIndex(object, buffer)</a> ⇒ <code>Number</code></dt>\n<dd><p>Serialize a Javascript object using a predefined Buffer and index into the buffer, useful when pre-allocating the space for serialization.</p>\n</dd>\n<dt><a href=\"#deserialize\">deserialize(buffer)</a> ⇒ <code>Object</code></dt>\n<dd><p>Deserialize data as BSON.</p>\n</dd>\n<dt><a href=\"#calculateObjectSize\">calculateObjectSize(object)</a> ⇒ <code>Number</code></dt>\n<dd><p>Calculate the bson size for a passed in Javascript object.</p>\n</dd>\n<dt><a href=\"#deserializeStream\">deserializeStream(data, startIndex, numberOfDocuments, documents, docStartIndex, [options])</a> ⇒ <code>Number</code></dt>\n<dd><p>Deserialize stream data as BSON documents.</p>\n</dd>\n</dl>\n\n<a name=\"EJSON\"></a>\n\n### EJSON\n\n* [EJSON](#EJSON)\n\n    * [.parse(text, [options])](#EJSON.parse)\n\n    * [.stringify(value, [replacer], [space], [options])](#EJSON.stringify)\n\n    * [.serialize(bson, [options])](#EJSON.serialize)\n\n    * [.deserialize(ejson, [options])](#EJSON.deserialize)\n\n\n<a name=\"EJSON.parse\"></a>\n\n#### *EJSON*.parse(text, [options])\n\n| Param | Type | Default | Description |\n| --- | --- | --- | --- |\n| text | <code>string</code> |  |  |\n| [options] | <code>object</code> |  | Optional settings |\n| [options.relaxed] | <code>boolean</code> | <code>true</code> | Attempt to return native JS types where possible, rather than BSON types (if true) |\n\nParse an Extended JSON string, constructing the JavaScript value or object described by that\nstring.\n\n**Example**  \n```js\nconst { EJSON } = require('bson');\nconst text = '{ \"int32\": { \"$numberInt\": \"10\" } }';\n\n// prints { int32: { [String: '10'] _bsontype: 'Int32', value: '10' } }\nconsole.log(EJSON.parse(text, { relaxed: false }));\n\n// prints { int32: 10 }\nconsole.log(EJSON.parse(text));\n```\n<a name=\"EJSON.stringify\"></a>\n\n#### *EJSON*.stringify(value, [replacer], [space], [options])\n\n| Param | Type | Default | Description |\n| --- | --- | --- | --- |\n| value | <code>object</code> |  | The value to convert to extended JSON |\n| [replacer] | <code>function</code> \\| <code>array</code> |  | A function that alters the behavior of the stringification process, or an array of String and Number objects that serve as a whitelist for selecting/filtering the properties of the value object to be included in the JSON string. If this value is null or not provided, all properties of the object are included in the resulting JSON string |\n| [space] | <code>string</code> \\| <code>number</code> |  | A String or Number object that's used to insert white space into the output JSON string for readability purposes. |\n| [options] | <code>object</code> |  | Optional settings |\n| [options.relaxed] | <code>boolean</code> | <code>true</code> | Enabled Extended JSON's `relaxed` mode |\n\nConverts a BSON document to an Extended JSON string, optionally replacing values if a replacer\nfunction is specified or optionally including only the specified properties if a replacer array\nis specified.\n\n**Example**  \n```js\nconst { EJSON } = require('bson');\nconst Int32 = require('mongodb').Int32;\nconst doc = { int32: new Int32(10) };\n\n// prints '{\"int32\":{\"$numberInt\":\"10\"}}'\nconsole.log(EJSON.stringify(doc, { relaxed: false }));\n\n// prints '{\"int32\":10}'\nconsole.log(EJSON.stringify(doc));\n```\n<a name=\"EJSON.serialize\"></a>\n\n#### *EJSON*.serialize(bson, [options])\n\n| Param | Type | Description |\n| --- | --- | --- |\n| bson | <code>object</code> | The object to serialize |\n| [options] | <code>object</code> | Optional settings passed to the `stringify` function |\n\nSerializes an object to an Extended JSON string, and reparse it as a JavaScript object.\n\n<a name=\"EJSON.deserialize\"></a>\n\n#### *EJSON*.deserialize(ejson, [options])\n\n| Param | Type | Description |\n| --- | --- | --- |\n| ejson | <code>object</code> | The Extended JSON object to deserialize |\n| [options] | <code>object</code> | Optional settings passed to the parse method |\n\nDeserializes an Extended JSON object into a plain JavaScript object with native/BSON types\n\n<a name=\"setInternalBufferSize\"></a>\n\n### setInternalBufferSize(size)\n\n| Param | Type | Description |\n| --- | --- | --- |\n| size | <code>number</code> | The desired size for the internal serialization buffer |\n\nSets the size of the internal serialization buffer.\n\n<a name=\"serialize\"></a>\n\n### serialize(object)\n\n| Param | Type | Default | Description |\n| --- | --- | --- | --- |\n| object | <code>Object</code> |  | the Javascript object to serialize. |\n| [options.checkKeys] | <code>Boolean</code> |  | the serializer will check if keys are valid. |\n| [options.serializeFunctions] | <code>Boolean</code> | <code>false</code> | serialize the javascript functions **(default:false)**. |\n| [options.ignoreUndefined] | <code>Boolean</code> | <code>true</code> | ignore undefined fields **(default:true)**. |\n\nSerialize a Javascript object.\n\n**Returns**: <code>Buffer</code> - returns the Buffer object containing the serialized object.  \n<a name=\"serializeWithBufferAndIndex\"></a>\n\n### serializeWithBufferAndIndex(object, buffer)\n\n| Param | Type | Default | Description |\n| --- | --- | --- | --- |\n| object | <code>Object</code> |  | the Javascript object to serialize. |\n| buffer | <code>Buffer</code> |  | the Buffer you pre-allocated to store the serialized BSON object. |\n| [options.checkKeys] | <code>Boolean</code> |  | the serializer will check if keys are valid. |\n| [options.serializeFunctions] | <code>Boolean</code> | <code>false</code> | serialize the javascript functions **(default:false)**. |\n| [options.ignoreUndefined] | <code>Boolean</code> | <code>true</code> | ignore undefined fields **(default:true)**. |\n| [options.index] | <code>Number</code> |  | the index in the buffer where we wish to start serializing into. |\n\nSerialize a Javascript object using a predefined Buffer and index into the buffer, useful when pre-allocating the space for serialization.\n\n**Returns**: <code>Number</code> - returns the index pointing to the last written byte in the buffer.  \n<a name=\"deserialize\"></a>\n\n### deserialize(buffer)\n\n| Param | Type | Default | Description |\n| --- | --- | --- | --- |\n| buffer | <code>Buffer</code> |  | the buffer containing the serialized set of BSON documents. |\n| [options.evalFunctions] | <code>Object</code> | <code>false</code> | evaluate functions in the BSON document scoped to the object deserialized. |\n| [options.cacheFunctions] | <code>Object</code> | <code>false</code> | cache evaluated functions for reuse. |\n| [options.cacheFunctionsCrc32] | <code>Object</code> | <code>false</code> | use a crc32 code for caching, otherwise use the string of the function. |\n| [options.promoteLongs] | <code>Object</code> | <code>true</code> | when deserializing a Long will fit it into a Number if it's smaller than 53 bits |\n| [options.promoteBuffers] | <code>Object</code> | <code>false</code> | when deserializing a Binary will return it as a node.js Buffer instance. |\n| [options.promoteValues] | <code>Object</code> | <code>false</code> | when deserializing will promote BSON values to their Node.js closest equivalent types. |\n| [options.fieldsAsRaw] | <code>Object</code> | <code></code> | allow to specify if there what fields we wish to return as unserialized raw buffer. |\n| [options.bsonRegExp] | <code>Object</code> | <code>false</code> | return BSON regular expressions as BSONRegExp instances. |\n| [options.allowObjectSmallerThanBufferSize] | <code>boolean</code> | <code>false</code> | allows the buffer to be larger than the parsed BSON object |\n\nDeserialize data as BSON.\n\n**Returns**: <code>Object</code> - returns the deserialized Javascript Object.  \n<a name=\"calculateObjectSize\"></a>\n\n### calculateObjectSize(object)\n\n| Param | Type | Default | Description |\n| --- | --- | --- | --- |\n| object | <code>Object</code> |  | the Javascript object to calculate the BSON byte size for. |\n| [options.serializeFunctions] | <code>Boolean</code> | <code>false</code> | serialize the javascript functions **(default:false)**. |\n| [options.ignoreUndefined] | <code>Boolean</code> | <code>true</code> | ignore undefined fields **(default:true)**. |\n\nCalculate the bson size for a passed in Javascript object.\n\n**Returns**: <code>Number</code> - returns the number of bytes the BSON object will take up.  \n<a name=\"deserializeStream\"></a>\n\n### deserializeStream(data, startIndex, numberOfDocuments, documents, docStartIndex, [options])\n\n| Param | Type | Default | Description |\n| --- | --- | --- | --- |\n| data | <code>Buffer</code> |  | the buffer containing the serialized set of BSON documents. |\n| startIndex | <code>Number</code> |  | the start index in the data Buffer where the deserialization is to start. |\n| numberOfDocuments | <code>Number</code> |  | number of documents to deserialize. |\n| documents | <code>Array</code> |  | an array where to store the deserialized documents. |\n| docStartIndex | <code>Number</code> |  | the index in the documents array from where to start inserting documents. |\n| [options] | <code>Object</code> |  | additional options used for the deserialization. |\n| [options.evalFunctions] | <code>Object</code> | <code>false</code> | evaluate functions in the BSON document scoped to the object deserialized. |\n| [options.cacheFunctions] | <code>Object</code> | <code>false</code> | cache evaluated functions for reuse. |\n| [options.cacheFunctionsCrc32] | <code>Object</code> | <code>false</code> | use a crc32 code for caching, otherwise use the string of the function. |\n| [options.promoteLongs] | <code>Object</code> | <code>true</code> | when deserializing a Long will fit it into a Number if it's smaller than 53 bits |\n| [options.promoteBuffers] | <code>Object</code> | <code>false</code> | when deserializing a Binary will return it as a node.js Buffer instance. |\n| [options.promoteValues] | <code>Object</code> | <code>false</code> | when deserializing will promote BSON values to their Node.js closest equivalent types. |\n| [options.fieldsAsRaw] | <code>Object</code> | <code></code> | allow to specify if there what fields we wish to return as unserialized raw buffer. |\n| [options.bsonRegExp] | <code>Object</code> | <code>false</code> | return BSON regular expressions as BSONRegExp instances. |\n\nDeserialize stream data as BSON documents.\n\n**Returns**: <code>Number</code> - returns the next index in the buffer after deserialization **x** numbers of documents.  \n\n## FAQ\n\n#### Why does `undefined` get converted to `null`?\n\nThe `undefined` BSON type has been [deprecated for many years](http://bsonspec.org/spec.html), so this library has dropped support for it. Use the `ignoreUndefined` option (for example, from the [driver](http://mongodb.github.io/node-mongodb-native/2.2/api/MongoClient.html#connect) ) to instead remove `undefined` keys.\n\n#### How do I add custom serialization logic?\n\nThis library looks for `toBSON()` functions on every path, and calls the `toBSON()` function to get the value to serialize.\n\n```javascript\nconst BSON = require('bson');\n\nclass CustomSerialize {\n  toBSON() {\n    return 42;\n  }\n}\n\nconst obj = { answer: new CustomSerialize() };\n// \"{ answer: 42 }\"\nconsole.log(BSON.deserialize(BSON.serialize(obj)));\n```\n","readmeFilename":"README.md","gitHead":"b0fda90e78f222fa09c484fc81f9bbd7fa8fad63","homepage":"https://github.com/mongodb/js-bson#readme","_id":"bson@4.0.0-rc7","_npmVersion":"6.4.1","_nodeVersion":"8.12.0","_npmUser":{"name":"mbroadst","email":"mbroadst@gmail.com"},"dist":{"integrity":"sha512-L5Cn1S7V72y/ymz7SKjPjCyaIWQRxx0OXhhqD2JKHADi45fGUZZaKFFDrRIX62pcZ7mazg3YtBdi+ydvVXIwhA==","shasum":"421971088cd6f61e35c0e66a298b94c9a993ab54","tarball":"https://registry.npmjs.org/bson/-/bson-4.0.0-rc7.tgz","fileCount":33,"unpackedSize":917818,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbz2U3CRA9TVsSAnZWagAAhV0P/05kCjGOGskVPHIXfQsZ\nB8+B3IM5sQ4qSm30Fj9uIyP2A/Z3k2QJV6UNtD1RJ4PXrvbR6e3HVL48NzLd\nH4RX/C1VKMsx2+m+NUn0M2YqFCOctwFhfoB9/HcYefhqX1TBnZZLRXNszdBO\nU2vaf1LiXuX3uev0O1dhF5QYRrcTHh2PwuLPu8wAUQ2OkSWU495OrcCrSaZO\nruD2FHYR+J/MJmpmpTqhmKHN3tCRf0sdNfxUbZDBsFeGVIgzZ+gy0RyuBDLm\n1+f3bW4YD437Yxma1WC4/FbkqL5A2yLRay/TaWwO9F/s9WmuZ8Buw2btwOGt\nVTowmOHrqYc2ff/agBSnnr51pU5geMavsaOkOkXs7guan2IGNDWRvWeVBzDX\nEv83HdpqYkdvS9EBd2TMDwPbyLN5v+E9GFVTzmolH0m5e67lQxKDcbxnNdQf\nnJHXIJcBxv2jZL6JNUPN3r879a7oh9QC6GJAJo90vEWZ5n3PzOC1J6/x4FvG\n/pI2Xs7PwGAoAeV98568uTvP+qvtKhrPENUlejgHEiIGXdYB+4AxrQ7dye1x\nrbh0Vh8YnVjer+fam/RD6XWwE/DvBh3FIcWqKVmbE8QMvaA/iKIgl+icElla\nnHFuElrbbntOPsmlCIEv/UfN0xfHsO7KFtKu6x+8IIfju0H1nkb0TxK/QYC0\n1c56\r\n=zYYk\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"christkv","email":"christkv@gmail.com"},{"name":"daprahamian","email":"dan.aprahamian@gmail.com"},{"name":"mbroadst","email":"mbroadst@gmail.com"},{"name":"octave","email":"chinsay@gmail.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/bson_4.0.0-rc7_1540318519344_0.7779354860858572"},"_hasShrinkwrap":false},"4.0.0-rc8":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"version":"4.0.0-rc8","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"license":"Apache-2.0","contributors":[],"repository":{"type":"git","url":"git+https://github.com/mongodb/js-bson.git"},"bugs":{"url":"https://github.com/mongodb/js-bson/issues"},"devDependencies":{"@babel/core":"^7.1.5","@babel/preset-env":"^7.1.5","benchmark":"^2.1.4","chai":"^4.2.0","dmd-clear":"^0.1.2","eslint":"^5.8.0","eslint-plugin-prettier":"^3.0.0","istanbul":"^0.4.5","jsdoc-to-markdown":"^4.0.1","karma":"^3.1.1","karma-chrome-launcher":"^2.2.0","karma-mocha":"^1.3.0","karma-mocha-reporter":"^2.2.5","karma-rollup-preprocessor":"^6.1.0","mocha":"^5.2.0","prettier":"^1.15.1","rollup":"^0.67.0","rollup-plugin-babel":"^4.0.3","rollup-plugin-commonjs":"^9.2.0","rollup-plugin-json":"^3.1.0","rollup-plugin-node-builtins":"^2.1.2","rollup-plugin-node-globals":"^1.4.0","rollup-plugin-node-resolve":"^3.4.0","standard-version":"^4.4.0"},"config":{"native":false},"main":"lib/bson.js","module":"dist/bson.esm.js","browser":{"./lib/bson.js":"./dist/bson.browser.umd.js","./dist/bson.esm.js":"./dist/bson.browser.esm.js"},"engines":{"node":">=6.9.0"},"scripts":{"docs":"jsdoc2md --heading-depth 3 --template tools/README.hbs --plugin dmd-clear --files lib/bson.js lib/extended_json.js > README.md","test":"npm run-script lint && npm run-script test-node && npm run-script test-browser","test-node":"mocha ./test/node","test-browser":"npm run-script build && karma start","build":"rollup -c","lint":"eslint lib test","format":"prettier --print-width 100 --tab-width 2 --single-quote --write 'test/**/*.js' 'lib/**/*.js'","coverage":"istanbul cover _mocha -- --recursive --ui tdd test/node","prepublishOnly":"npm run build","release":"standard-version -i HISTORY.md"},"dependencies":{"buffer":"^5.1.0","long":"^4.0.0"},"readme":"# BSON parser\n\n**NOTE: This is usage documentation for the current 4.0.0 beta. You can find documentation for the 3.0 version of js-bson [here](https://github.com/mongodb/js-bson/blob/v3.0.2/README.md)**\n\nBSON is short for Bin­ary JSON and is the bin­ary-en­coded seri­al­iz­a­tion of JSON-like doc­u­ments. You can learn more about it in [the specification](http://bsonspec.org).\n\nThis browser version of the BSON parser is compiled using [rollup](https://rollupjs.org/) and the current version is pre-compiled in the `dist` directory.\n\nThis is the default BSON parser, however, there is a C++ Node.js addon version as well that does not support the browser. It can be found at [mongod-js/bson-ext](https://github.com/mongodb-js/bson-ext).\n\n### Table of Contents\n- [Usage](#usage)\n- [Bugs/Feature Requests](#bugs--feature-requests)\n- [Installation](#installation)\n- [Documentation](#documentation)\n- [FAQ](#faq)\n\n## Bugs / Feature Requests\n\nThink you've found a bug? Want to see a new feature in `bson`? Please open a case in our issue management tool, JIRA:\n\n1. Create an account and login: [jira.mongodb.org](https://jira.mongodb.org)\n2. Navigate to the NODE project: [jira.mongodb.org/browse/NODE](https://jira.mongodb.org/browse/NODE)\n3. Click **Create Issue** - Please provide as much information as possible about the issue and how to reproduce it.\n\nBug reports in JIRA for all driver projects (i.e. NODE, PYTHON, CSHARP, JAVA) and the Core Server (i.e. SERVER) project are **public**.\n\n## Usage\n\nTo build a new version perform the following operations:\n\n```\nnpm install\nnpm run build\n```\n\nA simple example of how to use BSON in the browser:\n\n```html\n<script src=\"./dist/bson.js\"></script>\n\n<script>\n  function start() {\n    // Get the Long type\n    const Long = BSON.Long;\n\n    // Serialize document\n    const doc = { long: Long.fromNumber(100) }\n\n    // Serialize a document\n    const data = BSON.serialize(doc)\n    // De serialize it again\n    const doc_2 = BSON.deserialize(data)\n  }\n</script>\n```\n\nA simple example of how to use BSON in `Node.js`:\n\n```js\nconst BSON = require('bson');\nconst Long = BSON.Long;\n\nconst doc = { long: Long.fromNumber(100) };\n\n// Serialize a document\nconst data = BSON.serialize(doc);\nconsole.log('data:', data);\n\n// Deserialize the resulting Buffer\nconst doc_2 = BSON.deserialize(data);\nconsole.log('doc_2:', doc_2);\n```\n\n## Installation\n\n`npm install bson`\n\n## Documentation\n\n### Objects\n\n<dl>\n<dt><a href=\"#EJSON\">EJSON</a> : <code>object</code></dt>\n<dd></dd>\n</dl>\n\n### Functions\n\n<dl>\n<dt><a href=\"#setInternalBufferSize\">setInternalBufferSize(size)</a></dt>\n<dd><p>Sets the size of the internal serialization buffer.</p>\n</dd>\n<dt><a href=\"#serialize\">serialize(object)</a> ⇒ <code>Buffer</code></dt>\n<dd><p>Serialize a Javascript object.</p>\n</dd>\n<dt><a href=\"#serializeWithBufferAndIndex\">serializeWithBufferAndIndex(object, buffer)</a> ⇒ <code>Number</code></dt>\n<dd><p>Serialize a Javascript object using a predefined Buffer and index into the buffer, useful when pre-allocating the space for serialization.</p>\n</dd>\n<dt><a href=\"#deserialize\">deserialize(buffer)</a> ⇒ <code>Object</code></dt>\n<dd><p>Deserialize data as BSON.</p>\n</dd>\n<dt><a href=\"#calculateObjectSize\">calculateObjectSize(object)</a> ⇒ <code>Number</code></dt>\n<dd><p>Calculate the bson size for a passed in Javascript object.</p>\n</dd>\n<dt><a href=\"#deserializeStream\">deserializeStream(data, startIndex, numberOfDocuments, documents, docStartIndex, [options])</a> ⇒ <code>Number</code></dt>\n<dd><p>Deserialize stream data as BSON documents.</p>\n</dd>\n</dl>\n\n<a name=\"EJSON\"></a>\n\n### EJSON\n\n* [EJSON](#EJSON)\n\n    * [.parse(text, [options])](#EJSON.parse)\n\n    * [.stringify(value, [replacer], [space], [options])](#EJSON.stringify)\n\n    * [.serialize(bson, [options])](#EJSON.serialize)\n\n    * [.deserialize(ejson, [options])](#EJSON.deserialize)\n\n\n<a name=\"EJSON.parse\"></a>\n\n#### *EJSON*.parse(text, [options])\n\n| Param | Type | Default | Description |\n| --- | --- | --- | --- |\n| text | <code>string</code> |  |  |\n| [options] | <code>object</code> |  | Optional settings |\n| [options.relaxed] | <code>boolean</code> | <code>true</code> | Attempt to return native JS types where possible, rather than BSON types (if true) |\n\nParse an Extended JSON string, constructing the JavaScript value or object described by that\nstring.\n\n**Example**  \n```js\nconst { EJSON } = require('bson');\nconst text = '{ \"int32\": { \"$numberInt\": \"10\" } }';\n\n// prints { int32: { [String: '10'] _bsontype: 'Int32', value: '10' } }\nconsole.log(EJSON.parse(text, { relaxed: false }));\n\n// prints { int32: 10 }\nconsole.log(EJSON.parse(text));\n```\n<a name=\"EJSON.stringify\"></a>\n\n#### *EJSON*.stringify(value, [replacer], [space], [options])\n\n| Param | Type | Default | Description |\n| --- | --- | --- | --- |\n| value | <code>object</code> |  | The value to convert to extended JSON |\n| [replacer] | <code>function</code> \\| <code>array</code> |  | A function that alters the behavior of the stringification process, or an array of String and Number objects that serve as a whitelist for selecting/filtering the properties of the value object to be included in the JSON string. If this value is null or not provided, all properties of the object are included in the resulting JSON string |\n| [space] | <code>string</code> \\| <code>number</code> |  | A String or Number object that's used to insert white space into the output JSON string for readability purposes. |\n| [options] | <code>object</code> |  | Optional settings |\n| [options.relaxed] | <code>boolean</code> | <code>true</code> | Enabled Extended JSON's `relaxed` mode |\n\nConverts a BSON document to an Extended JSON string, optionally replacing values if a replacer\nfunction is specified or optionally including only the specified properties if a replacer array\nis specified.\n\n**Example**  \n```js\nconst { EJSON } = require('bson');\nconst Int32 = require('mongodb').Int32;\nconst doc = { int32: new Int32(10) };\n\n// prints '{\"int32\":{\"$numberInt\":\"10\"}}'\nconsole.log(EJSON.stringify(doc, { relaxed: false }));\n\n// prints '{\"int32\":10}'\nconsole.log(EJSON.stringify(doc));\n```\n<a name=\"EJSON.serialize\"></a>\n\n#### *EJSON*.serialize(bson, [options])\n\n| Param | Type | Description |\n| --- | --- | --- |\n| bson | <code>object</code> | The object to serialize |\n| [options] | <code>object</code> | Optional settings passed to the `stringify` function |\n\nSerializes an object to an Extended JSON string, and reparse it as a JavaScript object.\n\n<a name=\"EJSON.deserialize\"></a>\n\n#### *EJSON*.deserialize(ejson, [options])\n\n| Param | Type | Description |\n| --- | --- | --- |\n| ejson | <code>object</code> | The Extended JSON object to deserialize |\n| [options] | <code>object</code> | Optional settings passed to the parse method |\n\nDeserializes an Extended JSON object into a plain JavaScript object with native/BSON types\n\n<a name=\"setInternalBufferSize\"></a>\n\n### setInternalBufferSize(size)\n\n| Param | Type | Description |\n| --- | --- | --- |\n| size | <code>number</code> | The desired size for the internal serialization buffer |\n\nSets the size of the internal serialization buffer.\n\n<a name=\"serialize\"></a>\n\n### serialize(object)\n\n| Param | Type | Default | Description |\n| --- | --- | --- | --- |\n| object | <code>Object</code> |  | the Javascript object to serialize. |\n| [options.checkKeys] | <code>Boolean</code> |  | the serializer will check if keys are valid. |\n| [options.serializeFunctions] | <code>Boolean</code> | <code>false</code> | serialize the javascript functions **(default:false)**. |\n| [options.ignoreUndefined] | <code>Boolean</code> | <code>true</code> | ignore undefined fields **(default:true)**. |\n\nSerialize a Javascript object.\n\n**Returns**: <code>Buffer</code> - returns the Buffer object containing the serialized object.  \n<a name=\"serializeWithBufferAndIndex\"></a>\n\n### serializeWithBufferAndIndex(object, buffer)\n\n| Param | Type | Default | Description |\n| --- | --- | --- | --- |\n| object | <code>Object</code> |  | the Javascript object to serialize. |\n| buffer | <code>Buffer</code> |  | the Buffer you pre-allocated to store the serialized BSON object. |\n| [options.checkKeys] | <code>Boolean</code> |  | the serializer will check if keys are valid. |\n| [options.serializeFunctions] | <code>Boolean</code> | <code>false</code> | serialize the javascript functions **(default:false)**. |\n| [options.ignoreUndefined] | <code>Boolean</code> | <code>true</code> | ignore undefined fields **(default:true)**. |\n| [options.index] | <code>Number</code> |  | the index in the buffer where we wish to start serializing into. |\n\nSerialize a Javascript object using a predefined Buffer and index into the buffer, useful when pre-allocating the space for serialization.\n\n**Returns**: <code>Number</code> - returns the index pointing to the last written byte in the buffer.  \n<a name=\"deserialize\"></a>\n\n### deserialize(buffer)\n\n| Param | Type | Default | Description |\n| --- | --- | --- | --- |\n| buffer | <code>Buffer</code> |  | the buffer containing the serialized set of BSON documents. |\n| [options.evalFunctions] | <code>Object</code> | <code>false</code> | evaluate functions in the BSON document scoped to the object deserialized. |\n| [options.cacheFunctions] | <code>Object</code> | <code>false</code> | cache evaluated functions for reuse. |\n| [options.cacheFunctionsCrc32] | <code>Object</code> | <code>false</code> | use a crc32 code for caching, otherwise use the string of the function. |\n| [options.promoteLongs] | <code>Object</code> | <code>true</code> | when deserializing a Long will fit it into a Number if it's smaller than 53 bits |\n| [options.promoteBuffers] | <code>Object</code> | <code>false</code> | when deserializing a Binary will return it as a node.js Buffer instance. |\n| [options.promoteValues] | <code>Object</code> | <code>false</code> | when deserializing will promote BSON values to their Node.js closest equivalent types. |\n| [options.fieldsAsRaw] | <code>Object</code> | <code></code> | allow to specify if there what fields we wish to return as unserialized raw buffer. |\n| [options.bsonRegExp] | <code>Object</code> | <code>false</code> | return BSON regular expressions as BSONRegExp instances. |\n| [options.allowObjectSmallerThanBufferSize] | <code>boolean</code> | <code>false</code> | allows the buffer to be larger than the parsed BSON object |\n\nDeserialize data as BSON.\n\n**Returns**: <code>Object</code> - returns the deserialized Javascript Object.  \n<a name=\"calculateObjectSize\"></a>\n\n### calculateObjectSize(object)\n\n| Param | Type | Default | Description |\n| --- | --- | --- | --- |\n| object | <code>Object</code> |  | the Javascript object to calculate the BSON byte size for. |\n| [options.serializeFunctions] | <code>Boolean</code> | <code>false</code> | serialize the javascript functions **(default:false)**. |\n| [options.ignoreUndefined] | <code>Boolean</code> | <code>true</code> | ignore undefined fields **(default:true)**. |\n\nCalculate the bson size for a passed in Javascript object.\n\n**Returns**: <code>Number</code> - returns the number of bytes the BSON object will take up.  \n<a name=\"deserializeStream\"></a>\n\n### deserializeStream(data, startIndex, numberOfDocuments, documents, docStartIndex, [options])\n\n| Param | Type | Default | Description |\n| --- | --- | --- | --- |\n| data | <code>Buffer</code> |  | the buffer containing the serialized set of BSON documents. |\n| startIndex | <code>Number</code> |  | the start index in the data Buffer where the deserialization is to start. |\n| numberOfDocuments | <code>Number</code> |  | number of documents to deserialize. |\n| documents | <code>Array</code> |  | an array where to store the deserialized documents. |\n| docStartIndex | <code>Number</code> |  | the index in the documents array from where to start inserting documents. |\n| [options] | <code>Object</code> |  | additional options used for the deserialization. |\n| [options.evalFunctions] | <code>Object</code> | <code>false</code> | evaluate functions in the BSON document scoped to the object deserialized. |\n| [options.cacheFunctions] | <code>Object</code> | <code>false</code> | cache evaluated functions for reuse. |\n| [options.cacheFunctionsCrc32] | <code>Object</code> | <code>false</code> | use a crc32 code for caching, otherwise use the string of the function. |\n| [options.promoteLongs] | <code>Object</code> | <code>true</code> | when deserializing a Long will fit it into a Number if it's smaller than 53 bits |\n| [options.promoteBuffers] | <code>Object</code> | <code>false</code> | when deserializing a Binary will return it as a node.js Buffer instance. |\n| [options.promoteValues] | <code>Object</code> | <code>false</code> | when deserializing will promote BSON values to their Node.js closest equivalent types. |\n| [options.fieldsAsRaw] | <code>Object</code> | <code></code> | allow to specify if there what fields we wish to return as unserialized raw buffer. |\n| [options.bsonRegExp] | <code>Object</code> | <code>false</code> | return BSON regular expressions as BSONRegExp instances. |\n\nDeserialize stream data as BSON documents.\n\n**Returns**: <code>Number</code> - returns the next index in the buffer after deserialization **x** numbers of documents.  \n\n## FAQ\n\n#### Why does `undefined` get converted to `null`?\n\nThe `undefined` BSON type has been [deprecated for many years](http://bsonspec.org/spec.html), so this library has dropped support for it. Use the `ignoreUndefined` option (for example, from the [driver](http://mongodb.github.io/node-mongodb-native/2.2/api/MongoClient.html#connect) ) to instead remove `undefined` keys.\n\n#### How do I add custom serialization logic?\n\nThis library looks for `toBSON()` functions on every path, and calls the `toBSON()` function to get the value to serialize.\n\n```javascript\nconst BSON = require('bson');\n\nclass CustomSerialize {\n  toBSON() {\n    return 42;\n  }\n}\n\nconst obj = { answer: new CustomSerialize() };\n// \"{ answer: 42 }\"\nconsole.log(BSON.deserialize(BSON.serialize(obj)));\n```\n","readmeFilename":"README.md","gitHead":"6417eeb202d5d9818cd0ef8248310508f005c673","homepage":"https://github.com/mongodb/js-bson#readme","_id":"bson@4.0.0-rc8","_npmVersion":"6.4.1","_nodeVersion":"8.12.0","_npmUser":{"name":"mbroadst","email":"mbroadst@gmail.com"},"dist":{"integrity":"sha512-A6U3+8ej5rL6ZjIwZEbMfZyAGfmKZyT41XgW2WWNf4ThI6hMgVxRMlzGhFI6CXvhmyEo0eEI7bCkJSQi21O6PA==","shasum":"874c9e206bb035bf2ec780d0ba300051416bc203","tarball":"https://registry.npmjs.org/bson/-/bson-4.0.0-rc8.tgz","fileCount":34,"unpackedSize":933240,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJb42hMCRA9TVsSAnZWagAAhksP/jc0reDore/CqPWe94Gk\ngP2vXlVQ9qrfN2MNgNBwMaCFvs1d2bN242N1RgNCKPhP0NXYvXiZVTEpGQGu\njiavsKy4VzJxRe+u3zm2pa90R7usbQhqkAUDgB273TYl/enKxz37onuQMx/I\nAmm3qVdDGyQgkQgtW+m3eMAiwhWPxs5vLSkx7DHDXq1oWW0YmcFvydbS9jgH\nSSJzzPnZ45MD7ByA+kyl8Tf+H6e8jK0Y9R7vPyGMsbE/q7mU+c4w1u0J3x/B\nEPzxgF3eCY3qJt8aUV2XfEd8gMeKWegXTFvMfDyu0yPSpwPHQSixLgFCYlq8\nXakU2N9OhGGgrTldg81oYNXxxMiGAOa1lOAApypiiq8T08fnbgtbVjOfeZh7\nDyUxgunxG2DWbMDLgXo2zsD7t+9riLmmmWGmy1wlFGPUpMeXaaNzsOvefCc+\nRUw85aBzlu9lWjERvM/hY9Yz4kJArX9xDxyUs3rKcogP0DOiQ0ExlyjOXTjS\nyvT451FLPfBVRFB42kC6AfU68drY3gTBfT3528Yl0/l/z92kUoY8NSH9flom\nl0qj5nAudJ/D5AOP/TlYjSrmkbsxBfQ2fsF109+BD49L69w4P24A97uQ6YIz\nYW/E+LslLNMFxbE1fOQfgz/eSXmUeqPH2Iv3Mz6l+nNvD0O213TEJ7BlGq6h\nhLnX\r\n=0/ux\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"christkv","email":"christkv@gmail.com"},{"name":"daprahamian","email":"dan.aprahamian@gmail.com"},{"name":"mbroadst","email":"mbroadst@gmail.com"},{"name":"octave","email":"chinsay@gmail.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/bson_4.0.0-rc8_1541630027920_0.00797634614938092"},"_hasShrinkwrap":false},"4.0.0":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"version":"4.0.0","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"license":"Apache-2.0","contributors":[],"repository":{"type":"git","url":"git+https://github.com/mongodb/js-bson.git"},"bugs":{"url":"https://github.com/mongodb/js-bson/issues"},"devDependencies":{"@babel/core":"^7.1.5","@babel/preset-env":"^7.1.5","benchmark":"^2.1.4","chai":"^4.2.0","dmd-clear":"^0.1.2","eslint":"^5.8.0","eslint-plugin-prettier":"^3.0.0","istanbul":"^0.4.5","jsdoc-to-markdown":"^4.0.1","karma":"^3.1.1","karma-chrome-launcher":"^2.2.0","karma-mocha":"^1.3.0","karma-mocha-reporter":"^2.2.5","karma-rollup-preprocessor":"^6.1.0","mocha":"^5.2.0","prettier":"^1.15.1","rollup":"^0.67.0","rollup-plugin-babel":"^4.0.3","rollup-plugin-commonjs":"^9.2.0","rollup-plugin-json":"^3.1.0","rollup-plugin-node-builtins":"^2.1.2","rollup-plugin-node-globals":"^1.4.0","rollup-plugin-node-resolve":"^3.4.0","standard-version":"^4.4.0"},"config":{"native":false},"main":"lib/bson.js","module":"dist/bson.esm.js","browser":{"./lib/bson.js":"./dist/bson.browser.umd.js","./dist/bson.esm.js":"./dist/bson.browser.esm.js"},"engines":{"node":">=6.9.0"},"scripts":{"docs":"jsdoc2md --heading-depth 3 --template tools/README.hbs --plugin dmd-clear --files lib/bson.js lib/extended_json.js > README.md","test":"npm run-script lint && npm run-script test-node && npm run-script test-browser","test-node":"mocha ./test/node","test-browser":"npm run-script build && karma start","build":"rollup -c","lint":"eslint lib test","format":"prettier --print-width 100 --tab-width 2 --single-quote --write 'test/**/*.js' 'lib/**/*.js'","coverage":"istanbul cover _mocha -- --recursive --ui tdd test/node","prepublishOnly":"npm run build","release":"standard-version -i HISTORY.md"},"dependencies":{"buffer":"^5.1.0","long":"^4.0.0"},"gitHead":"6da78e3aa992c7b003530222055250a4fa22d167","homepage":"https://github.com/mongodb/js-bson#readme","_id":"bson@4.0.0","_npmVersion":"6.4.1","_nodeVersion":"8.12.0","_npmUser":{"name":"mbroadst","email":"mbroadst@gmail.com"},"dist":{"integrity":"sha512-303qcGsM1cosFi2xYlHViuGTHpC+gDf59aWcxB+/GZY4skzXG6ta2mw6OPlBOA4mtOyZJMvgp4IWdbmXs4tKpw==","shasum":"7684b512e9ae59fe3518ff2b35ec0c9741bf9f57","tarball":"https://registry.npmjs.org/bson/-/bson-4.0.0.tgz","fileCount":34,"unpackedSize":936097,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJb6xJnCRA9TVsSAnZWagAAkZgP/2mHhnOOOCqU4Q5Z6MWt\nIlidqOFuep9KO91Gh4+5+MvmXO7+nzozF1hBGfIGDNjVdfT7QDSrhRSQMgQS\nhAUpHeqDo+3rde3DZyPH8Wk6dJpSdVxpXNvx3RKi7nqEkwRHcoSJYE8cvYeI\nWkEcs+ylsjHo8S+lKmr21fm+1V4zzA1dL6LeEny7Z6nO0j5Yl9fAAyMgqa0i\nEUA8tiY9oBmDdNLDjoArCEKOgj6mbsBn22a5V2VZsz/s9xCr8PQSZWEdSrQ8\n1cLbg24tVclY2hlNX2Tjst69H5dw7Vssqhqwh5/qIjieZwBMUxtIIV/DTzy6\nBENmBhMVU8ynJDycwvdiZ7SZL1Vhau9Qn5GFswAvId8jdcYDz+tGxkRkwVnH\nFSCFRm9aDtcAmcfOYkVxu79D7p73kKwsYu3pNUR9SCTeLxOOJelLBkJZ8Pxx\nmacjvj1AI40lkcMXCkm669B20nAq7b/WGFruBSOv0I+mFvLuMZIvkCSDVjo0\n2pcD70+3hVUOPeKB1zDYrIjt1mPcx6v0XRS6kvIrS+meREYIFT5N0LgqZl6b\n5AbxHN8MlXui/tCZg0iZTEwxWf61WVYWzsev7w1fw4KomuZJUtPqBeghYFZf\nnfnXg1xYPKu7hBmABtCGz8agLc8so5MtyjKKOadC9c9Q0gv5+4RwxO9jfnsW\nUr6F\r\n=ZSwq\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"christkv","email":"christkv@gmail.com"},{"name":"daprahamian","email":"dan.aprahamian@gmail.com"},{"name":"mbroadst","email":"mbroadst@gmail.com"},{"name":"octave","email":"chinsay@gmail.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/bson_4.0.0_1542132326640_0.39591397126914973"},"_hasShrinkwrap":false},"4.0.1":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"version":"4.0.1","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"license":"Apache-2.0","contributors":[],"repository":{"type":"git","url":"git+https://github.com/mongodb/js-bson.git"},"bugs":{"url":"https://github.com/mongodb/js-bson/issues"},"devDependencies":{"@babel/core":"^7.1.5","@babel/preset-env":"^7.1.5","benchmark":"^2.1.4","chai":"^4.2.0","dmd-clear":"^0.1.2","eslint":"^5.8.0","eslint-plugin-prettier":"^3.0.0","istanbul":"^0.4.5","jsdoc-to-markdown":"^4.0.1","karma":"^3.1.1","karma-chrome-launcher":"^2.2.0","karma-mocha":"^1.3.0","karma-mocha-reporter":"^2.2.5","karma-rollup-preprocessor":"^6.1.0","mocha":"^5.2.0","prettier":"^1.15.1","rollup":"^0.67.0","rollup-plugin-babel":"^4.0.3","rollup-plugin-commonjs":"^9.2.0","rollup-plugin-json":"^3.1.0","rollup-plugin-node-builtins":"^2.1.2","rollup-plugin-node-globals":"^1.4.0","rollup-plugin-node-resolve":"^3.4.0","standard-version":"^4.4.0"},"config":{"native":false},"main":"lib/bson.js","module":"dist/bson.esm.js","browser":{"./lib/bson.js":"./dist/bson.browser.umd.js","./dist/bson.esm.js":"./dist/bson.browser.esm.js"},"engines":{"node":">=6.9.0"},"scripts":{"docs":"jsdoc2md --heading-depth 3 --template tools/README.hbs --plugin dmd-clear --files lib/bson.js lib/extended_json.js > README.md","test":"npm run-script lint && npm run-script test-node && npm run-script test-browser","test-node":"mocha ./test/node","test-browser":"npm run-script build && karma start","build":"rollup -c","lint":"eslint lib test","format":"prettier --print-width 100 --tab-width 2 --single-quote --write 'test/**/*.js' 'lib/**/*.js'","coverage":"istanbul cover _mocha -- --recursive --ui tdd test/node","prepublishOnly":"npm run build","release":"standard-version -i HISTORY.md"},"dependencies":{"buffer":"^5.1.0","long":"^4.0.0"},"gitHead":"2e08392b8781a79016860b73ac07e4a19f067273","homepage":"https://github.com/mongodb/js-bson#readme","_id":"bson@4.0.1","_npmVersion":"5.5.1","_nodeVersion":"8.9.1","_npmUser":{"name":"mbroadst","email":"mbroadst@gmail.com"},"dist":{"integrity":"sha512-Q+E5edAc2DnSb77xcBJga0iJDyZlhkKRhWxKdPJcT3UK6nC6BtmMJGpkt+99bGht3HIhXHu7mxi5FLBgQAj5MA==","shasum":"652dbf4bbdd864b54bec6c8fb13fa9b7b853a7a1","tarball":"https://registry.npmjs.org/bson/-/bson-4.0.1.tgz","fileCount":36,"unpackedSize":1204050,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcCTY2CRA9TVsSAnZWagAAtBAP/1Z2xe8dh3PvDCsBsEuy\neIZhAQHk+0WHblRSQEV7f27XObKoNvkTE5+YqZ00uYNCUKov+sran/fEl3gj\njymfQvIbJd0m6bBaHhk4zpDkxJ2Rp3c/CQ2vrQbYz5Ne2vpIk//V7fk+ArAj\nX5d1bx4pPEQIhvFpFWMDlXa0agiO1W6HqiMrCTsClyo5tra8O6zWbcZZH/EZ\nF6wvWdKMZ7fOlSB778xBbUkQidND/nW28pn4pXhQcLs83ta7r6dTMEhiLvAB\nb1ZDBM90+HG43CCoaGVZrVOXe+bl02f7nhvA+vAqodotCdhunXczCNFc2Kh0\nfFCK0pDTpEI6gc+9kLWKSI89dvlGDLSSsa38K1RDsUMGapjIhuEGIS/+bblC\nLW44eE4hIxK881eh+zeNHwSyiE1T07S9Kxk5kuMVSvmYD8sfCwYXQlfz3/S8\nC1AKFpPeUmjkmWkHCzEOxHNzC55b+ctZfckqZ4+6h0Xe60kCQa/3+Kqv0MMV\niQErwY+u6ZECKBRHg4Va65jZUPIWqBstmMQiFwR50orF0Ku5NjMuQGXlzrU8\nQHKmA982k6n5BSz3sQ+HrsYlpyWT2zhdflHy1DvgHK9++/fZkgk24h2J2Fgi\nXUqn8gwk6ticC9vbL9rhU2yI0TtcPLyj2Q9nfjyXhrI3rFRNbbc4EqT6tm6f\nNPdg\r\n=78v2\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"christkv","email":"christkv@gmail.com"},{"name":"daprahamian","email":"dan.aprahamian@gmail.com"},{"name":"mbroadst","email":"mbroadst@gmail.com"},{"name":"octave","email":"chinsay@gmail.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/bson_4.0.1_1544107573439_0.6307642583534896"},"_hasShrinkwrap":false},"4.0.2":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"version":"4.0.2","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"license":"Apache-2.0","contributors":[],"repository":{"type":"git","url":"git+https://github.com/mongodb/js-bson.git"},"bugs":{"url":"https://github.com/mongodb/js-bson/issues"},"devDependencies":{"@babel/core":"^7.1.5","@babel/preset-env":"^7.1.5","benchmark":"^2.1.4","chai":"^4.2.0","dmd-clear":"^0.1.2","eslint":"^5.8.0","eslint-plugin-prettier":"^3.0.0","istanbul":"^0.4.5","jsdoc-to-markdown":"^4.0.1","karma":"^3.1.1","karma-chrome-launcher":"^2.2.0","karma-mocha":"^1.3.0","karma-mocha-reporter":"^2.2.5","karma-rollup-preprocessor":"^6.1.0","mocha":"^5.2.0","prettier":"^1.15.1","rollup":"^0.67.0","rollup-plugin-babel":"^4.0.3","rollup-plugin-commonjs":"^9.2.0","rollup-plugin-json":"^3.1.0","rollup-plugin-node-builtins":"^2.1.2","rollup-plugin-node-globals":"^1.4.0","rollup-plugin-node-resolve":"^3.4.0","standard-version":"^4.4.0"},"config":{"native":false},"main":"lib/bson.js","module":"dist/bson.esm.js","browser":{"./lib/bson.js":"./dist/bson.browser.umd.js","./dist/bson.esm.js":"./dist/bson.browser.esm.js"},"engines":{"node":">=6.9.0"},"scripts":{"docs":"jsdoc2md --heading-depth 3 --template tools/README.hbs --plugin dmd-clear --files lib/bson.js lib/extended_json.js > README.md","test":"npm run-script lint && npm run-script test-node && npm run-script test-browser","test-node":"node --throw-deprecation node_modules/.bin/_mocha ./test/node","test-browser":"npm run-script build && node --throw-deprecation node_modules/.bin/karma start","build":"rollup -c","lint":"eslint lib test","format":"prettier --print-width 100 --tab-width 2 --single-quote --write 'test/**/*.js' 'lib/**/*.js'","coverage":"istanbul cover _mocha -- --recursive --ui tdd test/node","prepublishOnly":"npm run build","release":"standard-version -i HISTORY.md"},"dependencies":{"buffer":"^5.1.0","long":"^4.0.0"},"gitHead":"51862d8610aa10b6566b697a065f358797b4d0fa","homepage":"https://github.com/mongodb/js-bson#readme","_id":"bson@4.0.2","_npmVersion":"6.4.1","_nodeVersion":"10.15.3","_npmUser":{"name":"daprahamian","email":"dan.aprahamian@gmail.com"},"dist":{"integrity":"sha512-rBdCxMBCg2aR420e1oKUejjcuPZLTibA7zEhWAlliFWEwzuBCC9Dkp5r7VFFIQB2t1WVsvTbohry575mc7Xw5A==","shasum":"2929fdfed1a145b1c361908a2b950a6cf4bed2c2","tarball":"https://registry.npmjs.org/bson/-/bson-4.0.2.tgz","fileCount":34,"unpackedSize":1070065,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcgsDhCRA9TVsSAnZWagAAJDoP/3KuCAjHly8Ms7sVS7uZ\nJbLxLIFZ6deWVJF/fC9RfdszYMuEmwuprPol9ywbHYrcNTqUAxv2IPUPs6Ay\nyYwi5H6k9jV5SATIRGc8bW3HPeQV8+Uh/PtsZLXcyKb2Z6gkZfdjP8uoz4+2\nfjZaSglmfx0AuVzYCprOn80tYPnMBzCdyRDaQrVs0tqWxdizvx7f2jzUWfCV\nc9YV0xY/hLwbJPqsNV/VfnVOY9o/MMD/wNpf+p4zO2ycmJzcZmEBApOpVAsP\nd92gM97avi7mMjGV5UYNRi6lPANRULRUj+a2dBXhlnXQstULWYPs52tr7cIQ\nPOsnWKq/zKqW+xcIbrwUXFMZVAmp7Ai2u421yZueLWuZZlPm15ZSnlrKqcUp\nU30vD4WHeidXb2M7NOhONR3h05VjCM1mEOLEAjY1tuCAkuE+yX0KtWq3NCAq\nOY7n6Qo14wg/NpDkhBuK9zJHUh8t+S4gao5FwdchqQgLUuKktcUGdVEJyTpo\nB7fCPy/ZktmdMc98Gon5lj7Boi6BjuivmLYIst05vR6MSBH5pEGW/VtwPHff\nWGrUBkEfRQQj30Uu1TG9MLLezsIbez4ATZX2AYznabTt4u4YFF/4GTzST+ns\nc/NAqdedG61J5oiU5U6rZHX6gss26Yr5kF/FUs+yEonMHqzc2Caf7SRAf9ou\nIrML\r\n=DroV\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"christkv","email":"christkv@gmail.com"},{"name":"daprahamian","email":"dan.aprahamian@gmail.com"},{"name":"mbroadst","email":"mbroadst@gmail.com"},{"name":"octave","email":"chinsay@gmail.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/bson_4.0.2_1552072928775_0.12496930586947452"},"_hasShrinkwrap":false},"1.1.1":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"version":"1.1.1","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"contributors":[],"repository":{"type":"git","url":"git+https://github.com/mongodb/js-bson.git"},"bugs":{"url":"https://github.com/mongodb/js-bson/issues"},"devDependencies":{"benchmark":"1.0.0","colors":"1.1.0","nodeunit":"0.9.0","babel-core":"^6.14.0","babel-loader":"^6.2.5","babel-polyfill":"^6.13.0","babel-preset-es2015":"^6.14.0","babel-preset-stage-0":"^6.5.0","babel-register":"^6.14.0","conventional-changelog-cli":"^1.3.5","webpack":"^1.13.2","webpack-polyfills-plugin":"0.0.9"},"config":{"native":false},"main":"./index","directories":{"lib":"./lib/bson"},"engines":{"node":">=0.6.19"},"scripts":{"test":"nodeunit ./test/node","build":"webpack --config ./webpack.dist.config.js","changelog":"conventional-changelog -p angular -i HISTORY.md -s","lint":"eslint lib test","format":"prettier --print-width 100 --tab-width 2 --single-quote --write 'test/**/*.js' 'lib/**/*.js'"},"browser":"lib/bson/bson.js","license":"Apache-2.0","readme":"# BSON parser\n\nBSON is short for Bin­ary JSON and is the bin­ary-en­coded seri­al­iz­a­tion of JSON-like doc­u­ments. You can learn more about it in [the specification](http://bsonspec.org).\n\nThis browser version of the BSON parser is compiled using [webpack](https://webpack.js.org/) and the current version is pre-compiled in the `browser_build` directory.\n\nThis is the default BSON parser, however, there is a C++ Node.js addon version as well that does not support the browser. It can be found at [mongod-js/bson-ext](https://github.com/mongodb-js/bson-ext).\n\n## Usage\n\nTo build a new version perform the following operations:\n\n```\nnpm install\nnpm run build\n```\n\nA simple example of how to use BSON in the browser:\n\n```html\n<script src=\"./browser_build/bson.js\"></script>\n\n<script>\n  function start() {\n    // Get the Long type\n    var Long = BSON.Long;\n    // Create a bson parser instance\n    var bson = new BSON();\n\n    // Serialize document\n    var doc = { long: Long.fromNumber(100) }\n\n    // Serialize a document\n    var data = bson.serialize(doc)\n    // De serialize it again\n    var doc_2 = bson.deserialize(data)\n  }\n</script>\n```\n\nA simple example of how to use BSON in `Node.js`:\n\n```js\n// Get BSON parser class\nvar BSON = require('bson')\n// Get the Long type\nvar Long = BSON.Long;\n// Create a bson parser instance\nvar bson = new BSON();\n\n// Serialize document\nvar doc = { long: Long.fromNumber(100) }\n\n// Serialize a document\nvar data = bson.serialize(doc)\nconsole.log('data:', data)\n\n// Deserialize the resulting Buffer\nvar doc_2 = bson.deserialize(data)\nconsole.log('doc_2:', doc_2)\n```\n\n## Installation\n\n`npm install bson`\n\n## API\n\n### BSON types\n\nFor all BSON types documentation, please refer to the following sources:\n  * [MongoDB BSON Type Reference](https://docs.mongodb.com/manual/reference/bson-types/)\n  * [BSON Spec](https://bsonspec.org/)\n\n### BSON serialization and deserialiation\n\n**`new BSON()`** - Creates a new BSON serializer/deserializer you can use to serialize and deserialize BSON.\n\n#### BSON.serialize\n\nThe BSON `serialize` method takes a JavaScript object and an optional options object and returns a Node.js Buffer.\n\n  * `BSON.serialize(object, options)`\n    * @param {Object} object the JavaScript object to serialize.\n    * @param {Boolean} [options.checkKeys=false] the serializer will check if keys are valid.\n    * @param {Boolean} [options.serializeFunctions=false] serialize the JavaScript functions.\n    * @param {Boolean} [options.ignoreUndefined=true]\n    * @return {Buffer} returns a Buffer instance.\n\n#### BSON.serializeWithBufferAndIndex\n\nThe BSON `serializeWithBufferAndIndex` method takes an object, a target buffer instance and an optional options object and returns the end serialization index in the final buffer.\n\n  * `BSON.serializeWithBufferAndIndex(object, buffer, options)`\n    * @param {Object} object the JavaScript object to serialize.\n    * @param {Buffer} buffer the Buffer you pre-allocated to store the serialized BSON object.\n    * @param {Boolean} [options.checkKeys=false] the serializer will check if keys are valid.\n    * @param {Boolean} [options.serializeFunctions=false] serialize the JavaScript functions.\n    * @param {Boolean} [options.ignoreUndefined=true] ignore undefined fields.\n    * @param {Number} [options.index=0] the index in the buffer where we wish to start serializing into.\n    * @return {Number} returns the index pointing to the last written byte in the buffer.\n\n#### BSON.calculateObjectSize\n\nThe BSON `calculateObjectSize` method takes a JavaScript object and an optional options object and returns the size of the BSON object.\n\n  * `BSON.calculateObjectSize(object, options)`\n    * @param {Object} object the JavaScript object to serialize.\n    * @param {Boolean} [options.serializeFunctions=false] serialize the JavaScript functions.\n    * @param {Boolean} [options.ignoreUndefined=true]\n    * @return {Buffer} returns a Buffer instance.\n\n#### BSON.deserialize\n\nThe BSON `deserialize` method takes a Node.js Buffer and an optional options object and returns a deserialized JavaScript object.\n\n  * `BSON.deserialize(buffer, options)`\n    * @param {Object} [options.evalFunctions=false] evaluate functions in the BSON document scoped to the object deserialized.\n    * @param {Object} [options.cacheFunctions=false] cache evaluated functions for reuse.\n    * @param {Object} [options.cacheFunctionsCrc32=false] use a crc32 code for caching, otherwise use the string of the function.\n    * @param {Object} [options.promoteLongs=true] when deserializing a Long will fit it into a Number if it's smaller than 53 bits\n    * @param {Object} [options.promoteBuffers=false] when deserializing a Binary will return it as a Node.js Buffer instance.\n    * @param {Object} [options.promoteValues=false] when deserializing will promote BSON values to their Node.js closest equivalent types.\n    * @param {Object} [options.fieldsAsRaw=null] allow to specify if there what fields we wish to return as unserialized raw buffer.\n    * @param {Object} [options.bsonRegExp=false] return BSON regular expressions as BSONRegExp instances.\n    * @return {Object} returns the deserialized Javascript Object.\n\n#### BSON.deserializeStream\n\nThe BSON `deserializeStream` method takes a Node.js Buffer, `startIndex` and allow more control over deserialization of a Buffer containing concatenated BSON documents.\n\n  * `BSON.deserializeStream(buffer, startIndex, numberOfDocuments, documents, docStartIndex, options)`\n    * @param {Buffer} buffer the buffer containing the serialized set of BSON documents.\n    * @param {Number} startIndex the start index in the data Buffer where the deserialization is to start.\n    * @param {Number} numberOfDocuments number of documents to deserialize.\n    * @param {Array} documents an array where to store the deserialized documents.\n    * @param {Number} docStartIndex the index in the documents array from where to start inserting documents.\n    * @param {Object} [options.evalFunctions=false] evaluate functions in the BSON document scoped to the object deserialized.\n    * @param {Object} [options.cacheFunctions=false] cache evaluated functions for reuse.\n    * @param {Object} [options.cacheFunctionsCrc32=false] use a crc32 code for caching, otherwise use the string of the function.\n    * @param {Object} [options.promoteLongs=true] when deserializing a Long will fit it into a Number if it's smaller than 53 bits\n    * @param {Object} [options.promoteBuffers=false] when deserializing a Binary will return it as a Node.js Buffer instance.\n    * @param {Object} [options.promoteValues=false] when deserializing will promote BSON values to their Node.js closest equivalent types.\n    * @param {Object} [options.fieldsAsRaw=null] allow to specify if there what fields we wish to return as unserialized raw buffer.\n    * @param {Object} [options.bsonRegExp=false] return BSON regular expressions as BSONRegExp instances.\n    * @return {Number} returns the next index in the buffer after deserialization **x** numbers of documents.\n\n## FAQ\n\n#### Why does `undefined` get converted to `null`?\n\nThe `undefined` BSON type has been [deprecated for many years](http://bsonspec.org/spec.html), so this library has dropped support for it. Use the `ignoreUndefined` option (for example, from the [driver](http://mongodb.github.io/node-mongodb-native/2.2/api/MongoClient.html#connect) ) to instead remove `undefined` keys.\n\n#### How do I add custom serialization logic?\n\nThis library looks for `toBSON()` functions on every path, and calls the `toBSON()` function to get the value to serialize.\n\n```javascript\nvar bson = new BSON();\n\nclass CustomSerialize {\n  toBSON() {\n    return 42;\n  }\n}\n\nconst obj = { answer: new CustomSerialize() };\n// \"{ answer: 42 }\"\nconsole.log(bson.deserialize(bson.serialize(obj)));\n```\n","readmeFilename":"README.md","gitHead":"3142508fe615f96bb7e0499b4a56742a54431616","homepage":"https://github.com/mongodb/js-bson#readme","_id":"bson@1.1.1","_npmVersion":"6.4.1","_nodeVersion":"10.15.3","_npmUser":{"name":"daprahamian","email":"dan.aprahamian@gmail.com"},"dist":{"integrity":"sha512-jCGVYLoYMHDkOsbwJZBCqwMHyH4c+wzgI9hG7Z6SZJRXWr+x58pdIbm2i9a/jFGCkRJqRUr8eoI7lDWa0hTkxg==","shasum":"4330f5e99104c4e751e7351859e2d408279f2f13","tarball":"https://registry.npmjs.org/bson/-/bson-1.1.1.tgz","fileCount":28,"unpackedSize":757017,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcgs5RCRA9TVsSAnZWagAABqIP/R6SmDRwLAuttd0X6Fo9\ncooIYRFMXA2Squ9xCPsQoNVkTw8NZWywPccxiEPuv49RwiPOGrLqSPoyi7fe\nK8p+pcDVxLyH/qvgm3HbT1BJY3UZ5yIRB0CUFzCN+YU55AJ/cL8fAfrH1yH7\nNq0BiJdoEe6CqKmdRZpDDNsdF3uqoiCH4U8ycmoxkMBf8GaQrqeRB7sVd6H1\nWQp+66LC5WPnfo8vpQR+9T8JJuDHvZuofiO5FSmK4trdIlOD43o5cczzgb+i\ncFDycgxPAnCVygDy9nV3Jp60MNot1d4oVqtDZBwSwA2pgSqYN3HZeye3OhYv\nyEJHPm42HRabl5u/0ZpE66hytCt05M51UYSQi2YCztCRHPISfGubBe6cRSum\n5EWsHSkH3q0limQ/LuIg3UCDxF5uxds8ZUAhO36zL0l242mewvoL+xFk/5tS\njgHs7eMJ4ue8m0C/iIvxNx+09F7ccT50PMrN2vtROjqgloL2UcbOjkGtczak\n8BDGTVq5PauT8EtKSHOCCyRer6aQDXx48GlJTiVcymMqfgYdF7ua4JJJP7Z/\nTZBE0up+KbgEFWxr9cT1Z4M5LmhzgaR9yx6D+EBJmYZ3wMiX63GuzVt9aG9F\nHLqzZxqUghSiNVEbj/H0N5lYYIpXdGGFTvpKh3+Wq7ANBJCkKbtESgwphSY6\nariB\r\n=JSoI\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"christkv","email":"christkv@gmail.com"},{"name":"daprahamian","email":"dan.aprahamian@gmail.com"},{"name":"mbroadst","email":"mbroadst@gmail.com"},{"name":"octave","email":"chinsay@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/bson_1.1.1_1552076369171_0.529474158991551"},"_hasShrinkwrap":false},"1.1.2":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"version":"1.1.2","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"contributors":[],"repository":{"type":"git","url":"git+https://github.com/mongodb/js-bson.git"},"bugs":{"url":"https://github.com/mongodb/js-bson/issues"},"devDependencies":{"benchmark":"1.0.0","colors":"1.1.0","nodeunit":"0.9.0","babel-core":"^6.14.0","babel-loader":"^6.2.5","babel-polyfill":"^6.13.0","babel-preset-es2015":"^6.14.0","babel-preset-stage-0":"^6.5.0","babel-register":"^6.14.0","conventional-changelog-cli":"^1.3.5","webpack":"^1.13.2","webpack-polyfills-plugin":"0.0.9"},"config":{"native":false},"main":"./index","directories":{"lib":"./lib/bson"},"engines":{"node":">=0.6.19"},"scripts":{"test":"nodeunit ./test/node","build":"webpack --config ./webpack.dist.config.js","changelog":"conventional-changelog -p angular -i HISTORY.md -s","lint":"eslint lib test","format":"prettier --print-width 100 --tab-width 2 --single-quote --write 'test/**/*.js' 'lib/**/*.js'"},"browser":"lib/bson/bson.js","license":"Apache-2.0","readme":"# BSON parser\n\nBSON is short for Bin­ary JSON and is the bin­ary-en­coded seri­al­iz­a­tion of JSON-like doc­u­ments. You can learn more about it in [the specification](http://bsonspec.org).\n\nThis browser version of the BSON parser is compiled using [webpack](https://webpack.js.org/) and the current version is pre-compiled in the `browser_build` directory.\n\nThis is the default BSON parser, however, there is a C++ Node.js addon version as well that does not support the browser. It can be found at [mongod-js/bson-ext](https://github.com/mongodb-js/bson-ext).\n\n## Usage\n\nTo build a new version perform the following operations:\n\n```\nnpm install\nnpm run build\n```\n\nA simple example of how to use BSON in the browser:\n\n```html\n<script src=\"./browser_build/bson.js\"></script>\n\n<script>\n  function start() {\n    // Get the Long type\n    var Long = BSON.Long;\n    // Create a bson parser instance\n    var bson = new BSON();\n\n    // Serialize document\n    var doc = { long: Long.fromNumber(100) }\n\n    // Serialize a document\n    var data = bson.serialize(doc)\n    // De serialize it again\n    var doc_2 = bson.deserialize(data)\n  }\n</script>\n```\n\nA simple example of how to use BSON in `Node.js`:\n\n```js\n// Get BSON parser class\nvar BSON = require('bson')\n// Get the Long type\nvar Long = BSON.Long;\n// Create a bson parser instance\nvar bson = new BSON();\n\n// Serialize document\nvar doc = { long: Long.fromNumber(100) }\n\n// Serialize a document\nvar data = bson.serialize(doc)\nconsole.log('data:', data)\n\n// Deserialize the resulting Buffer\nvar doc_2 = bson.deserialize(data)\nconsole.log('doc_2:', doc_2)\n```\n\n## Installation\n\n`npm install bson`\n\n## API\n\n### BSON types\n\nFor all BSON types documentation, please refer to the following sources:\n  * [MongoDB BSON Type Reference](https://docs.mongodb.com/manual/reference/bson-types/)\n  * [BSON Spec](https://bsonspec.org/)\n\n### BSON serialization and deserialiation\n\n**`new BSON()`** - Creates a new BSON serializer/deserializer you can use to serialize and deserialize BSON.\n\n#### BSON.serialize\n\nThe BSON `serialize` method takes a JavaScript object and an optional options object and returns a Node.js Buffer.\n\n  * `BSON.serialize(object, options)`\n    * @param {Object} object the JavaScript object to serialize.\n    * @param {Boolean} [options.checkKeys=false] the serializer will check if keys are valid.\n    * @param {Boolean} [options.serializeFunctions=false] serialize the JavaScript functions.\n    * @param {Boolean} [options.ignoreUndefined=true]\n    * @return {Buffer} returns a Buffer instance.\n\n#### BSON.serializeWithBufferAndIndex\n\nThe BSON `serializeWithBufferAndIndex` method takes an object, a target buffer instance and an optional options object and returns the end serialization index in the final buffer.\n\n  * `BSON.serializeWithBufferAndIndex(object, buffer, options)`\n    * @param {Object} object the JavaScript object to serialize.\n    * @param {Buffer} buffer the Buffer you pre-allocated to store the serialized BSON object.\n    * @param {Boolean} [options.checkKeys=false] the serializer will check if keys are valid.\n    * @param {Boolean} [options.serializeFunctions=false] serialize the JavaScript functions.\n    * @param {Boolean} [options.ignoreUndefined=true] ignore undefined fields.\n    * @param {Number} [options.index=0] the index in the buffer where we wish to start serializing into.\n    * @return {Number} returns the index pointing to the last written byte in the buffer.\n\n#### BSON.calculateObjectSize\n\nThe BSON `calculateObjectSize` method takes a JavaScript object and an optional options object and returns the size of the BSON object.\n\n  * `BSON.calculateObjectSize(object, options)`\n    * @param {Object} object the JavaScript object to serialize.\n    * @param {Boolean} [options.serializeFunctions=false] serialize the JavaScript functions.\n    * @param {Boolean} [options.ignoreUndefined=true]\n    * @return {Buffer} returns a Buffer instance.\n\n#### BSON.deserialize\n\nThe BSON `deserialize` method takes a Node.js Buffer and an optional options object and returns a deserialized JavaScript object.\n\n  * `BSON.deserialize(buffer, options)`\n    * @param {Object} [options.evalFunctions=false] evaluate functions in the BSON document scoped to the object deserialized.\n    * @param {Object} [options.cacheFunctions=false] cache evaluated functions for reuse.\n    * @param {Object} [options.cacheFunctionsCrc32=false] use a crc32 code for caching, otherwise use the string of the function.\n    * @param {Object} [options.promoteLongs=true] when deserializing a Long will fit it into a Number if it's smaller than 53 bits\n    * @param {Object} [options.promoteBuffers=false] when deserializing a Binary will return it as a Node.js Buffer instance.\n    * @param {Object} [options.promoteValues=false] when deserializing will promote BSON values to their Node.js closest equivalent types.\n    * @param {Object} [options.fieldsAsRaw=null] allow to specify if there what fields we wish to return as unserialized raw buffer.\n    * @param {Object} [options.bsonRegExp=false] return BSON regular expressions as BSONRegExp instances.\n    * @return {Object} returns the deserialized Javascript Object.\n\n#### BSON.deserializeStream\n\nThe BSON `deserializeStream` method takes a Node.js Buffer, `startIndex` and allow more control over deserialization of a Buffer containing concatenated BSON documents.\n\n  * `BSON.deserializeStream(buffer, startIndex, numberOfDocuments, documents, docStartIndex, options)`\n    * @param {Buffer} buffer the buffer containing the serialized set of BSON documents.\n    * @param {Number} startIndex the start index in the data Buffer where the deserialization is to start.\n    * @param {Number} numberOfDocuments number of documents to deserialize.\n    * @param {Array} documents an array where to store the deserialized documents.\n    * @param {Number} docStartIndex the index in the documents array from where to start inserting documents.\n    * @param {Object} [options.evalFunctions=false] evaluate functions in the BSON document scoped to the object deserialized.\n    * @param {Object} [options.cacheFunctions=false] cache evaluated functions for reuse.\n    * @param {Object} [options.cacheFunctionsCrc32=false] use a crc32 code for caching, otherwise use the string of the function.\n    * @param {Object} [options.promoteLongs=true] when deserializing a Long will fit it into a Number if it's smaller than 53 bits\n    * @param {Object} [options.promoteBuffers=false] when deserializing a Binary will return it as a Node.js Buffer instance.\n    * @param {Object} [options.promoteValues=false] when deserializing will promote BSON values to their Node.js closest equivalent types.\n    * @param {Object} [options.fieldsAsRaw=null] allow to specify if there what fields we wish to return as unserialized raw buffer.\n    * @param {Object} [options.bsonRegExp=false] return BSON regular expressions as BSONRegExp instances.\n    * @return {Number} returns the next index in the buffer after deserialization **x** numbers of documents.\n\n## FAQ\n\n#### Why does `undefined` get converted to `null`?\n\nThe `undefined` BSON type has been [deprecated for many years](http://bsonspec.org/spec.html), so this library has dropped support for it. Use the `ignoreUndefined` option (for example, from the [driver](http://mongodb.github.io/node-mongodb-native/2.2/api/MongoClient.html#connect) ) to instead remove `undefined` keys.\n\n#### How do I add custom serialization logic?\n\nThis library looks for `toBSON()` functions on every path, and calls the `toBSON()` function to get the value to serialize.\n\n```javascript\nvar bson = new BSON();\n\nclass CustomSerialize {\n  toBSON() {\n    return 42;\n  }\n}\n\nconst obj = { answer: new CustomSerialize() };\n// \"{ answer: 42 }\"\nconsole.log(bson.deserialize(bson.serialize(obj)));\n```\n","readmeFilename":"README.md","gitHead":"179e1ede73a2dabf3457f514a034a62b96934686","homepage":"https://github.com/mongodb/js-bson#readme","_id":"bson@1.1.2","_nodeVersion":"10.16.3","_npmVersion":"6.9.0","dist":{"integrity":"sha512-oSKfIoJlJ2AnSD8et9z6CTAv8lCXtEGOpe8j6E3PNNKxewADHGA5nKS3Br/DkoNgSeQUu9tKnpLKGSbYBJ3tow==","shasum":"584e72d809f248678a1aa466c0aedb6df7c25ae0","tarball":"https://registry.npmjs.org/bson/-/bson-1.1.2.tgz","fileCount":28,"unpackedSize":774823,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdxZadCRA9TVsSAnZWagAAyJ8P/RBvQXd6I+JoBDVMeK6z\n2+YS23FiauHzqC/kHvv18/BqBTjpUXxqKF0O4TKDJp4LDY8U/qi6LXsq1tl7\nrTP9u/SwFKr2IuPuPR+eG2n83x97/Yz5wRDW+NQFrFPk1+ZEBRUDzUS/LA9K\n+p2Z575dsgha5SqVUFKTpHyd6kv5miT3XlKhrcm5DQQYkEt4xZ+usBHFA3Gr\nNC43yzUZRd73L3soAWzegyugkrs6fFZ8F7af+83pNeO+DNAWa1853ydiTDKZ\nlF3KdGkD4ZJOoCGMA+4NeWseHd7oMrJ4Nozi41ci89mBuTPBWyj56RDHMyuO\ni6a+cOc+/OBWu8Clsymr7FboXX6ZHwkq60qU3M3SLVd7CjKa9icEiqvYp15B\nt8DCoGVVHVvYg3T+Qg7/9dDRt9iM6l0C71bPbEGSwzXgmjag5O41x6ZKTmjr\njj7mK04Mwe4mqOHaivOP0AHkL6raHD8YbIxTazUA4Exc2itCsUivaGTGCItZ\n6/S10bU9dvCT8sxtT7VeTH8OMeFuoNORVwgtzWid3ubSJlrySZ/j80SgxEmf\ndct8+JIlCxDAnYb6qAhG/VQU89nRas8JYlM6TsRr9hJnF97XbJCrW1PBDMiD\nuKEAAcOJDuiniMRKAjNnb8fYrTn1fluFR/uo8yKmbrpFoMKAMJIeIDRRkM1n\nNSH9\r\n=Vcqr\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"dan.aprahamian@gmail.com","name":"daprahamian"},{"email":"mbroadst@gmail.com","name":"mbroadst"}],"_npmUser":{"name":"daprahamian","email":"dan.aprahamian@gmail.com"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/bson_1.1.2_1573230236740_0.5216224913620604"},"_hasShrinkwrap":false},"1.1.3":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"version":"1.1.3","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"contributors":[],"repository":{"type":"git","url":"git+https://github.com/mongodb/js-bson.git"},"bugs":{"url":"https://github.com/mongodb/js-bson/issues"},"devDependencies":{"benchmark":"1.0.0","colors":"1.1.0","nodeunit":"0.9.0","babel-core":"^6.14.0","babel-loader":"^6.2.5","babel-polyfill":"^6.13.0","babel-preset-es2015":"^6.14.0","babel-preset-stage-0":"^6.5.0","babel-register":"^6.14.0","conventional-changelog-cli":"^1.3.5","webpack":"^1.13.2","webpack-polyfills-plugin":"0.0.9"},"config":{"native":false},"main":"./index","directories":{"lib":"./lib/bson"},"engines":{"node":">=0.6.19"},"scripts":{"test":"nodeunit ./test/node","build":"webpack --config ./webpack.dist.config.js","changelog":"conventional-changelog -p angular -i HISTORY.md -s","lint":"eslint lib test","format":"prettier --print-width 100 --tab-width 2 --single-quote --write 'test/**/*.js' 'lib/**/*.js'"},"browser":"lib/bson/bson.js","license":"Apache-2.0","readme":"# BSON parser\n\nBSON is short for Bin­ary JSON and is the bin­ary-en­coded seri­al­iz­a­tion of JSON-like doc­u­ments. You can learn more about it in [the specification](http://bsonspec.org).\n\nThis browser version of the BSON parser is compiled using [webpack](https://webpack.js.org/) and the current version is pre-compiled in the `browser_build` directory.\n\nThis is the default BSON parser, however, there is a C++ Node.js addon version as well that does not support the browser. It can be found at [mongod-js/bson-ext](https://github.com/mongodb-js/bson-ext).\n\n## Usage\n\nTo build a new version perform the following operations:\n\n```\nnpm install\nnpm run build\n```\n\nA simple example of how to use BSON in the browser:\n\n```html\n<script src=\"./browser_build/bson.js\"></script>\n\n<script>\n  function start() {\n    // Get the Long type\n    var Long = BSON.Long;\n    // Create a bson parser instance\n    var bson = new BSON();\n\n    // Serialize document\n    var doc = { long: Long.fromNumber(100) }\n\n    // Serialize a document\n    var data = bson.serialize(doc)\n    // De serialize it again\n    var doc_2 = bson.deserialize(data)\n  }\n</script>\n```\n\nA simple example of how to use BSON in `Node.js`:\n\n```js\n// Get BSON parser class\nvar BSON = require('bson')\n// Get the Long type\nvar Long = BSON.Long;\n// Create a bson parser instance\nvar bson = new BSON();\n\n// Serialize document\nvar doc = { long: Long.fromNumber(100) }\n\n// Serialize a document\nvar data = bson.serialize(doc)\nconsole.log('data:', data)\n\n// Deserialize the resulting Buffer\nvar doc_2 = bson.deserialize(data)\nconsole.log('doc_2:', doc_2)\n```\n\n## Installation\n\n`npm install bson`\n\n## API\n\n### BSON types\n\nFor all BSON types documentation, please refer to the following sources:\n  * [MongoDB BSON Type Reference](https://docs.mongodb.com/manual/reference/bson-types/)\n  * [BSON Spec](https://bsonspec.org/)\n\n### BSON serialization and deserialiation\n\n**`new BSON()`** - Creates a new BSON serializer/deserializer you can use to serialize and deserialize BSON.\n\n#### BSON.serialize\n\nThe BSON `serialize` method takes a JavaScript object and an optional options object and returns a Node.js Buffer.\n\n  * `BSON.serialize(object, options)`\n    * @param {Object} object the JavaScript object to serialize.\n    * @param {Boolean} [options.checkKeys=false] the serializer will check if keys are valid.\n    * @param {Boolean} [options.serializeFunctions=false] serialize the JavaScript functions.\n    * @param {Boolean} [options.ignoreUndefined=true]\n    * @return {Buffer} returns a Buffer instance.\n\n#### BSON.serializeWithBufferAndIndex\n\nThe BSON `serializeWithBufferAndIndex` method takes an object, a target buffer instance and an optional options object and returns the end serialization index in the final buffer.\n\n  * `BSON.serializeWithBufferAndIndex(object, buffer, options)`\n    * @param {Object} object the JavaScript object to serialize.\n    * @param {Buffer} buffer the Buffer you pre-allocated to store the serialized BSON object.\n    * @param {Boolean} [options.checkKeys=false] the serializer will check if keys are valid.\n    * @param {Boolean} [options.serializeFunctions=false] serialize the JavaScript functions.\n    * @param {Boolean} [options.ignoreUndefined=true] ignore undefined fields.\n    * @param {Number} [options.index=0] the index in the buffer where we wish to start serializing into.\n    * @return {Number} returns the index pointing to the last written byte in the buffer.\n\n#### BSON.calculateObjectSize\n\nThe BSON `calculateObjectSize` method takes a JavaScript object and an optional options object and returns the size of the BSON object.\n\n  * `BSON.calculateObjectSize(object, options)`\n    * @param {Object} object the JavaScript object to serialize.\n    * @param {Boolean} [options.serializeFunctions=false] serialize the JavaScript functions.\n    * @param {Boolean} [options.ignoreUndefined=true]\n    * @return {Buffer} returns a Buffer instance.\n\n#### BSON.deserialize\n\nThe BSON `deserialize` method takes a Node.js Buffer and an optional options object and returns a deserialized JavaScript object.\n\n  * `BSON.deserialize(buffer, options)`\n    * @param {Object} [options.evalFunctions=false] evaluate functions in the BSON document scoped to the object deserialized.\n    * @param {Object} [options.cacheFunctions=false] cache evaluated functions for reuse.\n    * @param {Object} [options.cacheFunctionsCrc32=false] use a crc32 code for caching, otherwise use the string of the function.\n    * @param {Object} [options.promoteLongs=true] when deserializing a Long will fit it into a Number if it's smaller than 53 bits\n    * @param {Object} [options.promoteBuffers=false] when deserializing a Binary will return it as a Node.js Buffer instance.\n    * @param {Object} [options.promoteValues=false] when deserializing will promote BSON values to their Node.js closest equivalent types.\n    * @param {Object} [options.fieldsAsRaw=null] allow to specify if there what fields we wish to return as unserialized raw buffer.\n    * @param {Object} [options.bsonRegExp=false] return BSON regular expressions as BSONRegExp instances.\n    * @return {Object} returns the deserialized Javascript Object.\n\n#### BSON.deserializeStream\n\nThe BSON `deserializeStream` method takes a Node.js Buffer, `startIndex` and allow more control over deserialization of a Buffer containing concatenated BSON documents.\n\n  * `BSON.deserializeStream(buffer, startIndex, numberOfDocuments, documents, docStartIndex, options)`\n    * @param {Buffer} buffer the buffer containing the serialized set of BSON documents.\n    * @param {Number} startIndex the start index in the data Buffer where the deserialization is to start.\n    * @param {Number} numberOfDocuments number of documents to deserialize.\n    * @param {Array} documents an array where to store the deserialized documents.\n    * @param {Number} docStartIndex the index in the documents array from where to start inserting documents.\n    * @param {Object} [options.evalFunctions=false] evaluate functions in the BSON document scoped to the object deserialized.\n    * @param {Object} [options.cacheFunctions=false] cache evaluated functions for reuse.\n    * @param {Object} [options.cacheFunctionsCrc32=false] use a crc32 code for caching, otherwise use the string of the function.\n    * @param {Object} [options.promoteLongs=true] when deserializing a Long will fit it into a Number if it's smaller than 53 bits\n    * @param {Object} [options.promoteBuffers=false] when deserializing a Binary will return it as a Node.js Buffer instance.\n    * @param {Object} [options.promoteValues=false] when deserializing will promote BSON values to their Node.js closest equivalent types.\n    * @param {Object} [options.fieldsAsRaw=null] allow to specify if there what fields we wish to return as unserialized raw buffer.\n    * @param {Object} [options.bsonRegExp=false] return BSON regular expressions as BSONRegExp instances.\n    * @return {Number} returns the next index in the buffer after deserialization **x** numbers of documents.\n\n## FAQ\n\n#### Why does `undefined` get converted to `null`?\n\nThe `undefined` BSON type has been [deprecated for many years](http://bsonspec.org/spec.html), so this library has dropped support for it. Use the `ignoreUndefined` option (for example, from the [driver](http://mongodb.github.io/node-mongodb-native/2.2/api/MongoClient.html#connect) ) to instead remove `undefined` keys.\n\n#### How do I add custom serialization logic?\n\nThis library looks for `toBSON()` functions on every path, and calls the `toBSON()` function to get the value to serialize.\n\n```javascript\nvar bson = new BSON();\n\nclass CustomSerialize {\n  toBSON() {\n    return 42;\n  }\n}\n\nconst obj = { answer: new CustomSerialize() };\n// \"{ answer: 42 }\"\nconsole.log(bson.deserialize(bson.serialize(obj)));\n```\n","readmeFilename":"README.md","gitHead":"e4de7b565a4278b63d4fc04b1955644827c70cbb","homepage":"https://github.com/mongodb/js-bson#readme","_id":"bson@1.1.3","_nodeVersion":"10.16.3","_npmVersion":"6.9.0","dist":{"integrity":"sha512-TdiJxMVnodVS7r0BdL42y/pqC9cL2iKynVwA0Ho3qbsQYr428veL3l7BQyuqiw+Q5SqqoT0m4srSY/BlZ9AxXg==","shasum":"aa82cb91f9a453aaa060d6209d0675114a8154d3","tarball":"https://registry.npmjs.org/bson/-/bson-1.1.3.tgz","fileCount":28,"unpackedSize":771926,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdxtT+CRA9TVsSAnZWagAANu8P/Rmn8nM9Ll1nkNxQd2b1\nqroQCtJCr8QYtqXfb5KEaEbH97xz+lWPhM7om8fMSw3aE+v5wpKSoU0ApNvu\nOZdzX2R0cVXbA1rxcJzB2aT+4jMgB06Er+cGpAFeG48vBtChYW+jVusF1d75\n2CosnTzer/UYgY0Cyq1mHVxJBTwW0GIpQmxBtptc1qoZfj3YZWG2H8glhRA6\nQAbiIF/tJyNsQ7VFx8wfZOk1d5E1Z2nwvG6jUgcOWytgERDUj+YbdrtJQnzM\nnqKZQTV6S27yQaRIcA/oCjIACIKfo+m8Y4Bpajf6r7o+czYnDseS/rhegsZv\nMwI9wquOhgkltvNTf/AqcF/9g51U4zCMB6oVO3GEoSrFY9mWoozdOKG8Iau3\nOMuZODX0k22+wzwEzCzRpR53l8y6YLAgJAqjax+ZfOoRU+mNwfEGNk71DbDw\nXEuQb6ew3ZkCk/+jKzTUzikbtpawaET4XlE3omTwRK+P4Y94/Et93rtb/U8g\nOP3jkBT3pTgoQkIys80cVjkTJfikMdxpNGSFVXn/D6YC7WcYgf/0zm6onLQI\nud+Ek6LTqI6YK1pyF1Kv6sl0WMAyM+u88U6tH1jQhYTUBb1tIhVTj9n9EqUU\n8ldHC1gawaRroutPWAuwhjsCB++f/p4YB9RKVzlvwUT8Ol/B4eSqrivdd6Yz\nHDUa\r\n=EOia\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"dan.aprahamian@gmail.com","name":"daprahamian"},{"email":"mbroadst@gmail.com","name":"mbroadst"}],"_npmUser":{"name":"daprahamian","email":"dan.aprahamian@gmail.com"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/bson_1.1.3_1573311741813_0.5816017561788467"},"_hasShrinkwrap":false},"4.0.3":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"version":"4.0.3","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"license":"Apache-2.0","contributors":[],"repository":{"type":"git","url":"git+https://github.com/mongodb/js-bson.git"},"bugs":{"url":"https://github.com/mongodb/js-bson/issues"},"devDependencies":{"@babel/core":"^7.1.5","@babel/preset-env":"^7.1.5","benchmark":"^2.1.4","chai":"^4.2.0","dmd-clear":"^0.1.2","eslint":"^5.8.0","eslint-plugin-prettier":"^3.0.0","istanbul":"^0.4.5","jsdoc-to-markdown":"^4.0.1","karma":"^3.1.1","karma-chrome-launcher":"^2.2.0","karma-mocha":"^1.3.0","karma-mocha-reporter":"^2.2.5","karma-rollup-preprocessor":"^6.1.0","mocha":"^5.2.0","prettier":"^1.15.1","rollup":"^0.67.0","rollup-plugin-babel":"^4.0.3","rollup-plugin-commonjs":"^9.2.0","rollup-plugin-json":"^3.1.0","rollup-plugin-node-builtins":"^2.1.2","rollup-plugin-node-globals":"^1.4.0","rollup-plugin-node-resolve":"^3.4.0","standard-version":"^4.4.0"},"config":{"native":false},"main":"lib/bson.js","module":"dist/bson.esm.js","browser":{"./lib/bson.js":"./dist/bson.browser.umd.js","./dist/bson.esm.js":"./dist/bson.browser.esm.js"},"engines":{"node":">=6.9.0"},"scripts":{"docs":"jsdoc2md --heading-depth 3 --template tools/README.hbs --plugin dmd-clear --files lib/bson.js lib/extended_json.js > README.md","test":"npm run-script lint && npm run-script test-node && npm run-script test-browser","test-node":"node --throw-deprecation node_modules/.bin/_mocha ./test/node","test-browser":"npm run-script build && node --throw-deprecation node_modules/.bin/karma start","build":"rollup -c","lint":"eslint lib test","format":"prettier --print-width 100 --tab-width 2 --single-quote --write 'test/**/*.js' 'lib/**/*.js'","coverage":"istanbul cover _mocha -- --recursive --ui tdd test/node","prepublishOnly":"npm run build","release":"standard-version -i HISTORY.md"},"dependencies":{"buffer":"^5.1.0","long":"^4.0.0"},"gitHead":"dc9c1bb284a6c08e07f14e700bdbfb0fd57e5a13","homepage":"https://github.com/mongodb/js-bson#readme","_id":"bson@4.0.3","_nodeVersion":"12.10.0","_npmVersion":"6.10.3","dist":{"integrity":"sha512-7uBjjxwOSuGLmoqGI1UXWpDGc0K2WjR7dC6iaOg4iriNZo6M2EEBb8co4dEPJ5ArYCebPMie0ecgX0TWF+ZUrQ==","shasum":"87cca55a963cf2b738087cce6057080d4e7c930e","tarball":"https://registry.npmjs.org/bson/-/bson-4.0.3.tgz","fileCount":34,"unpackedSize":1084999,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeFyyTCRA9TVsSAnZWagAAsAkQAIA0snghO44GvEbRGs/Y\nL5HVv39Ht0ACMB2L953VGuYySIw89kEpf0m4Tts7pC+l1Qoy7Qc2faG23SKy\n/1YS3mx6itzpD7Es82FP58d4J+lldKfR18FKzl3A7cMvEdM0QYbk1LgmEIHh\n4AkVziqSUUBjd/V8UZDdi83gfByQMl85QJGSskZY84XCVGvyEXvWFpoZyKRx\ncx9JF/guoYRPIwZyBKWFZLC0MSPimIy3OtipZshHuP5/9s0nZM9sreGiHYXe\nUnCoIRGrl2dWtLUINZA8/u4517UX043wC095UmyAnE95nFTq4kbgaGtWPexP\nItbFaD9ISlhIFjkLtYeRuIM2yLejOhsE+ihQCy4Sd7Lc5nQilp8evguL3HFB\nLWevFgq9mYu/aUaKkK85NwJ/H7hi3/CHKVS0s31H4Kf11ghVKT2KKuJp+PjT\nbP3aMJbDH+yrp2kGWiSda08SnXp7qurWvH+AWwjs2QrVqrzyE3p3ZkKgdhov\njvKNrplzPxW148Pyv6uJ9K+7zVLrIdtxcOOLlgUH+9ZHo8oMHu6OFKXwBXCj\nVpVN/u15JRXMKTG5HCKGn2grt2zCNfw+B5Zrpg/vBlrN8d8ilthgevHe2//d\njd1enM7HJoW+b0oTDj5ESvHEyX9x59RuhyjIE8a3a7SnJDqLGzhGvXlTe+Km\nUagg\r\n=7d0m\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"dan.aprahamian@gmail.com","name":"daprahamian"},{"email":"mbroadst@gmail.com","name":"mbroadst"}],"_npmUser":{"name":"mbroadst","email":"mbroadst@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/bson_4.0.3_1578577043549_0.6782842135673104"},"_hasShrinkwrap":false},"1.1.4":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"version":"1.1.4","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"contributors":[],"repository":{"type":"git","url":"git+https://github.com/mongodb/js-bson.git"},"bugs":{"url":"https://github.com/mongodb/js-bson/issues"},"devDependencies":{"benchmark":"1.0.0","colors":"1.1.0","nodeunit":"0.9.0","babel-core":"^6.14.0","babel-loader":"^6.2.5","babel-polyfill":"^6.13.0","babel-preset-es2015":"^6.14.0","babel-preset-stage-0":"^6.5.0","babel-register":"^6.14.0","conventional-changelog-cli":"^1.3.5","webpack":"^1.13.2","webpack-polyfills-plugin":"0.0.9"},"config":{"native":false},"main":"./index","directories":{"lib":"./lib/bson"},"engines":{"node":">=0.6.19"},"scripts":{"test":"nodeunit ./test/node","build":"webpack --config ./webpack.dist.config.js","changelog":"conventional-changelog -p angular -i HISTORY.md -s","lint":"eslint lib test","format":"prettier --print-width 100 --tab-width 2 --single-quote --write 'test/**/*.js' 'lib/**/*.js'"},"browser":"lib/bson/bson.js","license":"Apache-2.0","gitHead":"6e782dac6a110509097077ee5edd311977f32522","homepage":"https://github.com/mongodb/js-bson#readme","_id":"bson@1.1.4","_npmVersion":"6.4.1","_nodeVersion":"8.16.2","_npmUser":{"name":"mbroadst","email":"mbroadst@gmail.com"},"dist":{"integrity":"sha512-S/yKGU1syOMzO86+dGpg2qGoDL0zvzcb262G+gqEy6TgP6rt6z6qxSFX/8X6vLC91P7G7C3nLs0+bvDzmvBA3Q==","shasum":"f76870d799f15b854dffb7ee32f0a874797f7e89","tarball":"https://registry.npmjs.org/bson/-/bson-1.1.4.tgz","fileCount":28,"unpackedSize":772838,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeefV2CRA9TVsSAnZWagAAJJ4P+QG18fhYsP0vA6r6gSZr\ndtddBSk/0JWcmtXM2fuPqkcCbcX/roU7lbmxer20M0dJEwVu/iromoAV6u35\nEsiQ9LXYhy1KYeRkFRWDpsh2yVvXzhdn9DG16Dcmqk+3qpSn5lGMQvrQGzv0\ni6golLGxjcEBsSiw65OndWUsgVcihrHKI7J15w18UxR17aw4gCZIjoHVzC02\nkmGLtBGpYskqUb+fkV51l/ss7n4OkY8YojNGTbq4/NWMRqLhbbOCR0xuaYtU\nM5DQejOm32K64pBSjnAarEaGvIXVV9j3EusVyn8oGPJ9XWDp62HP+LwEMsQe\nE1Uh9syJEMqLY3z5U+KHNWGX3e4TJ3nDxcHpYWkGSdt5/Q4dnCKbKvgg8+uE\npJfQlZE2i9A57/oWwpYY8E68Ab1C09DyqwvwhziUGkm+XAMVJKKjTE8Tyrfa\nvvgKpzBbXZ3++y1ecSFq/IJJ/IjUVUZNTbWoGHne97Ndv0zODoubtNJZvuYS\nsmLvKOocZpe9uLz4qolH4RBut9emPMJtXpwe6iKoHe8Y0GZXxuaRZt+40Khc\nRVWm8QWRa9+Dtmmjp4/R0a++Tb/7KlRRguW+Z9QJglbg2bTgxEM8cA5WgQ++\nIBf+HC2dWXvyU2WWaeFXvnj+A0g3wmnWDZQbFKTo/pV3cEMDHup6hBC2u5Eo\n9jUl\r\n=Orm/\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"dan.aprahamian@gmail.com","name":"daprahamian"},{"email":"mbroadst@gmail.com","name":"mbroadst"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/bson_1.1.4_1585050997763_0.1375353493086151"},"_hasShrinkwrap":false},"4.0.4":{"name":"bson","description":"A bson parser for node.js and the browser","keywords":["mongodb","bson","parser"],"version":"4.0.4","author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"license":"Apache-2.0","contributors":[],"repository":{"type":"git","url":"git+https://github.com/mongodb/js-bson.git"},"bugs":{"url":"https://github.com/mongodb/js-bson/issues"},"devDependencies":{"@babel/core":"^7.1.5","@babel/preset-env":"^7.1.5","benchmark":"^2.1.4","chai":"^4.2.0","dmd-clear":"^0.1.2","eslint":"^5.8.0","eslint-plugin-prettier":"^3.0.0","istanbul":"^0.4.5","jsdoc-to-markdown":"^4.0.1","karma":"^3.1.1","karma-chrome-launcher":"^2.2.0","karma-mocha":"^1.3.0","karma-mocha-reporter":"^2.2.5","karma-rollup-preprocessor":"^6.1.0","mocha":"^5.2.0","prettier":"^1.15.1","rollup":"^0.67.0","rollup-plugin-babel":"^4.0.3","rollup-plugin-commonjs":"^9.2.0","rollup-plugin-json":"^3.1.0","rollup-plugin-node-builtins":"^2.1.2","rollup-plugin-node-globals":"^1.4.0","rollup-plugin-node-resolve":"^3.4.0","standard-version":"^4.4.0"},"config":{"native":false},"main":"lib/bson.js","module":"dist/bson.esm.js","browser":{"./lib/bson.js":"./dist/bson.browser.umd.js","./dist/bson.esm.js":"./dist/bson.browser.esm.js"},"engines":{"node":">=6.9.0"},"scripts":{"docs":"jsdoc2md --heading-depth 3 --template tools/README.hbs --plugin dmd-clear --files lib/bson.js lib/extended_json.js > README.md","test":"npm run-script lint && npm run-script test-node && npm run-script test-browser","test-node":"node --throw-deprecation node_modules/.bin/_mocha ./test/node","test-browser":"npm run-script build && node --throw-deprecation node_modules/.bin/karma start","build":"rollup -c","lint":"eslint lib test","format":"prettier --print-width 100 --tab-width 2 --single-quote --write 'test/**/*.js' 'lib/**/*.js'","coverage":"istanbul cover _mocha -- --recursive --ui tdd test/node","prepublishOnly":"npm run build","release":"standard-version -i HISTORY.md"},"dependencies":{"buffer":"^5.1.0","long":"^4.0.0"},"gitHead":"c307ca8e81b73ccfcac0b54e5012123773d30ddb","homepage":"https://github.com/mongodb/js-bson#readme","_id":"bson@4.0.4","_npmVersion":"6.4.1","_nodeVersion":"8.16.2","_npmUser":{"name":"mbroadst","email":"mbroadst@gmail.com"},"dist":{"integrity":"sha512-Ioi3TD0/1V3aI8+hPfC56TetYmzfq2H07jJa9A1lKTxWsFtHtYdLMGMXjtGEg9v0f72NSM07diRQEUNYhLupIA==","shasum":"4bda2cedf2ae7a18d15cb24ee1ede8c797f8eecf","tarball":"https://registry.npmjs.org/bson/-/bson-4.0.4.tgz","fileCount":34,"unpackedSize":1087522,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJefMPnCRA9TVsSAnZWagAAFy4P/j27+KZKOmkg2FVobr4q\npK10Sy91mV2ZI3eanlO3SqU+O/5KDIrCW6RhiOFl8xS61BENtIfSQ0a/YOCT\nUOLwaKDqTZLzxnQ5I06xeW3LXHYxunG40mT0FzqMEnyufXwRz9Akbk9mKfbM\nEK6qqz3M/roGah7xccr3tuexqIp3C3jr1Y75iahgflR2c2r/EX3/7St3zi/P\n2hOOwVcSkWHdTEsbDCHnXJpHDHDvN6vWQBmmZX03sfpZ1ydX0VFYPnxo7ajK\niEOy191VNrsCWxMDFDmZVVv4Ituay9rRTf7UZFCOJlSZhgdziYIOMoT0Ldc9\nFg4oy4a/fNh0qOOQI8P7dbrloMvKfrAt4c9y1diqxp9ir7pll3ti0yBjYgnu\nZIij0ZfV9Sg98V+XWwM2Ksuw2fBi02tZ8jIqmXAZaQw1zeW4KX7s9O6LYNju\nFlevICJy7l2qI3VduUIu+kv5ZzEkW+Vt4n/d+rfJ3s+nWuZ+B8AUeTaXIrKY\nfxrM/SYc3kFEcT0WeDtAe4bHXPvgDhZi7rKtEkevdlaozr8BkWoB64Jn9Wb0\nGcoZrbe2hJi0gGhMKT/eZ+qubkzyWP2ykQPj4BaHDk7uwAXQIkSlfsE41e2I\nv4bZG4cjQF2v4v216Wj0+xwMKbrWy/cSDESdU0rBTJ+Z+FA81uTI6geYZjM3\ncQ0N\r\n=bGUe\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"dan.aprahamian@gmail.com","name":"daprahamian"},{"email":"mbroadst@gmail.com","name":"mbroadst"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/bson_4.0.4_1585234918862_0.7213039624861854"},"_hasShrinkwrap":false}},"maintainers":[{"email":"dan.aprahamian@gmail.com","name":"daprahamian"},{"email":"mbroadst@gmail.com","name":"mbroadst"}],"time":{"modified":"2020-03-26T15:02:01.573Z","created":"2011-04-13T11:47:38.022Z","0.0.1":"2011-04-13T11:47:38.760Z","0.0.2":"2011-04-13T12:06:25.170Z","0.0.3":"2011-04-13T12:12:14.821Z","0.0.4":"2012-04-19T16:41:52.546Z","0.0.5":"2012-05-11T20:02:53.246Z","0.0.6":"2012-05-15T09:55:36.799Z","0.0.7":"2012-05-21T07:15:12.948Z","0.0.8":"2012-05-25T15:02:57.985Z","0.0.9":"2012-05-25T15:15:03.743Z","0.1.0":"2012-05-25T15:56:48.550Z","0.1.1":"2012-08-27T16:21:17.787Z","0.1.2":"2012-08-27T19:43:30.216Z","0.1.3":"2012-09-25T13:55:14.330Z","0.1.4":"2012-09-29T13:57:31.708Z","0.1.5":"2012-12-12T22:12:09.979Z","0.1.6":"2013-01-28T15:39:59.935Z","0.1.7":"2013-02-13T11:50:43.516Z","0.1.8":"2013-02-21T13:45:53.448Z","0.1.9":"2013-05-28T05:40:15.516Z","0.2.0":"2013-07-18T14:04:54.308Z","0.2.1":"2013-07-19T12:49:53.817Z","0.2.2":"2013-07-31T09:11:04.164Z","0.2.3":"2013-12-10T15:42:56.836Z","0.2.4":"2013-12-11T18:24:55.254Z","0.2.5":"2013-12-13T15:37:03.927Z","0.2.6":"2014-02-17T11:12:37.574Z","0.2.7":"2014-02-26T13:44:32.269Z","0.2.8":"2014-05-13T14:21:44.513Z","0.2.9":"2014-06-12T12:29:45.545Z","0.2.10":"2014-07-31T14:19:28.918Z","0.2.11":"2014-07-31T14:39:38.523Z","0.2.12":"2014-08-24T12:34:14.055Z","0.2.13":"2014-09-04T07:43:07.117Z","0.2.14":"2014-09-04T08:08:40.363Z","0.2.15":"2014-09-04T17:39:14.933Z","0.2.16":"2014-12-17T16:41:32.972Z","0.2.17":"2015-01-13T21:47:02.754Z","0.2.18":"2015-01-20T07:03:05.052Z","0.2.19":"2015-02-16T11:08:48.632Z","0.2.20":"2015-03-16T10:16:00.850Z","0.2.21":"2015-03-21T13:32:52.511Z","0.3.0":"2015-03-26T12:16:50.789Z","0.3.1":"2015-03-27T12:17:55.004Z","0.3.2":"2015-05-08T11:45:13.474Z","0.4.0":"2015-06-16T12:09:33.960Z","0.4.1":"2015-06-16T12:25:58.470Z","0.4.2":"2015-06-16T14:43:53.260Z","0.4.3":"2015-06-17T13:09:07.265Z","0.4.4":"2015-06-17T13:17:57.122Z","0.4.5":"2015-06-17T15:01:00.255Z","0.4.6":"2015-06-17T16:36:44.440Z","0.4.7":"2015-06-26T12:00:08.459Z","0.4.8":"2015-07-14T09:14:20.672Z","0.2.22":"2015-07-23T13:55:17.043Z","0.4.10":"2015-08-06T10:17:17.371Z","0.4.11":"2015-08-06T10:42:11.416Z","0.4.12":"2015-09-18T11:01:28.065Z","0.4.13":"2015-10-06T09:26:30.736Z","0.4.14":"2015-10-06T09:58:20.340Z","0.4.15":"2015-10-06T10:06:00.925Z","0.4.16":"2015-10-07T09:22:48.765Z","0.4.17":"2015-10-15T07:20:06.809Z","0.4.18":"2015-10-15T07:41:18.291Z","0.4.19":"2015-10-15T16:43:32.080Z","0.4.20":"2015-12-02T09:09:51.897Z","0.4.21":"2016-01-12T11:41:14.914Z","0.4.22":"2016-03-04T20:44:38.407Z","0.4.23":"2016-04-08T08:02:37.757Z","0.5.0":"2016-07-05T09:33:40.828Z","0.5.1":"2016-07-11T08:12:16.072Z","0.5.2":"2016-07-11T11:28:42.629Z","0.5.3":"2016-08-16T08:55:02.939Z","0.5.4":"2016-08-23T09:59:49.103Z","0.5.5":"2016-09-15T09:04:00.229Z","0.5.6":"2016-10-19T14:13:56.278Z","0.5.7":"2016-11-18T13:56:58.943Z","1.0.0":"2016-12-05T11:27:52.647Z","1.0.1":"2016-12-07T12:57:39.031Z","1.0.2":"2017-01-02T15:42:04.951Z","1.0.3":"2017-01-03T13:18:22.070Z","1.0.4":"2017-01-11T10:30:38.153Z","2.0.0":"2018-02-26T20:15:30.831Z","1.0.5":"2018-02-26T20:23:19.015Z","2.0.1":"2018-02-28T21:43:20.468Z","2.0.2":"2018-03-02T14:57:58.407Z","1.0.6":"2018-03-12T19:19:14.634Z","2.0.3":"2018-03-12T19:21:55.226Z","2.0.4":"2018-03-12T23:52:44.163Z","2.0.5":"2018-04-06T13:40:35.553Z","2.0.6":"2018-04-27T21:36:37.036Z","2.0.7":"2018-05-31T16:19:42.312Z","1.0.7":"2018-06-06T15:27:31.366Z","2.0.8":"2018-06-06T15:29:25.530Z","1.0.8":"2018-06-07T14:14:26.645Z","1.0.9":"2018-06-07T20:21:13.019Z","3.0.0":"2018-06-13T16:39:14.693Z","3.0.1":"2018-07-12T12:57:30.698Z","3.0.2":"2018-07-13T19:48:23.114Z","1.1.0":"2018-08-13T15:33:30.409Z","4.0.0-rc1":"2018-09-27T19:33:48.566Z","4.0.0-rc2":"2018-10-03T20:16:24.765Z","4.0.0-rc3":"2018-10-10T20:11:08.744Z","4.0.0-rc4":"2018-10-12T16:40:21.652Z","4.0.0-rc5":"2018-10-12T21:10:19.294Z","4.0.0-rc6":"2018-10-23T17:16:57.968Z","4.0.0-rc7":"2018-10-23T18:15:19.517Z","4.0.0-rc8":"2018-11-07T22:33:48.204Z","4.0.0":"2018-11-13T18:05:26.798Z","4.0.1":"2018-12-06T14:46:13.595Z","4.0.2":"2019-03-08T19:22:08.965Z","1.1.1":"2019-03-08T20:19:29.310Z","1.1.2":"2019-11-08T16:23:56.905Z","1.1.3":"2019-11-09T15:02:22.575Z","4.0.3":"2020-01-09T13:37:23.697Z","1.1.4":"2020-03-24T11:56:37.931Z","4.0.4":"2020-03-26T15:01:59.136Z"},"author":{"name":"Christian Amor Kvalheim","email":"christkv@gmail.com"},"repository":{"type":"git","url":"git+https://github.com/mongodb/js-bson.git"},"users":{"fgribreau":true,"m42am":true,"stanzhai":true,"markthethomas":true,"qqqppp9998":true,"linuxwizard":true,"srbdev":true,"fabiodr":true,"kmck":true,"hengkiardo":true,"snowdream":true,"akod3vs":true,"houzhanfeng":true,"robba.jt":true,"d0ughtyj":true,"kkho595":true,"sm1215":true,"anygivensolutions":true,"shushanfx":true,"ethan_":true,"salvationz":true,"cr8tiv":true,"seldszar":true},"readme":"# BSON parser\n\nBSON is short for \"Binary JSON,\" and is the binary-encoded serialization of JSON-like documents. You can learn more about it in [the specification](http://bsonspec.org).\n\nThis browser version of the BSON parser is compiled using [rollup](https://rollupjs.org/) and the current version is pre-compiled in the `dist` directory.\n\nThis is the default BSON parser, however, there is a C++ Node.js addon version as well that does not support the browser. It can be found at [mongod-js/bson-ext](https://github.com/mongodb-js/bson-ext).\n\n### Table of Contents\n- [Usage](#usage)\n- [Bugs/Feature Requests](#bugs--feature-requests)\n- [Installation](#installation)\n- [Documentation](#documentation)\n- [FAQ](#faq)\n\n## Bugs / Feature Requests\n\nThink you've found a bug? Want to see a new feature in `bson`? Please open a case in our issue management tool, JIRA:\n\n1. Create an account and login: [jira.mongodb.org](https://jira.mongodb.org)\n2. Navigate to the NODE project: [jira.mongodb.org/browse/NODE](https://jira.mongodb.org/browse/NODE)\n3. Click **Create Issue** - Please provide as much information as possible about the issue and how to reproduce it.\n\nBug reports in JIRA for all driver projects (i.e. NODE, PYTHON, CSHARP, JAVA) and the Core Server (i.e. SERVER) project are **public**.\n\n## Usage\n\nTo build a new version perform the following operations:\n\n```\nnpm install\nnpm run build\n```\n\n### Node (no bundling)\nA simple example of how to use BSON in `Node.js`:\n\n```js\nconst BSON = require('bson');\nconst Long = BSON.Long;\n\n// Serialize a document\nconst doc = { long: Long.fromNumber(100) };\nconst data = BSON.serialize(doc);\nconsole.log('data:', data);\n\n// Deserialize the resulting Buffer\nconst doc_2 = BSON.deserialize(data);\nconsole.log('doc_2:', doc_2);\n```\n\n### Browser (no bundling)\n\nIf you are not using a bundler like webpack, you can include `dist/bson.bundle.js` using a script tag.  It includes polyfills for built-in node types like `Buffer`.\n\n```html\n<script src=\"./dist/bson.bundle.js\"></script>\n\n<script>\n  function start() {\n    // Get the Long type\n    const Long = BSON.Long;\n\n    // Serialize a document\n    const doc = { long: Long.fromNumber(100) }\n    const data = BSON.serialize(doc);\n    console.log('data:', data);\n\n    // De serialize it again\n    const doc_2 = BSON.deserialize(data);\n    console.log('doc_2:', doc_2);\n  }\n</script>\n```\n\n### Using webpack\n\nIf using webpack, you can use your normal import/require syntax of your project to pull in the `bson` library.\n\nES6 Example:\n\n```js\nimport { Long, serialize, deserialize } from 'bson';\n\n// Serialize a document\nconst doc = { long: Long.fromNumber(100) };\nconst data = serialize(doc);\nconsole.log('data:', data);\n\n// De serialize it again\nconst doc_2 = deserialize(data);\nconsole.log('doc_2:', doc_2);\n```\n\nES5 Example:\n\n```js\nconst BSON = require('bson');\nconst Long = BSON.Long;\n\n// Serialize a document\nconst doc = { long: Long.fromNumber(100) };\nconst data = BSON.serialize(doc);\nconsole.log('data:', data);\n\n// Deserialize the resulting Buffer\nconst doc_2 = BSON.deserialize(data);\nconsole.log('doc_2:', doc_2);\n```\n\nDepending on your settings, webpack will under the hood resolve to one of the following:\n\n- `dist/bson.browser.esm.js` If your project is in the browser and using ES6 modules (Default for `webworker` and `web` targets)\n- `dist/bson.browser.umd.js` If your project is in the browser and not using ES6 modules\n- `dist/bson.esm.js` If your project is in Node.js and using ES6 modules (Default for `node` targets)\n- `lib/bson.js` (the normal include path) If your project is in Node.js and not using ES6 modules\n\nFor more information, see [this page on webpack's `resolve.mainFields`](https://webpack.js.org/configuration/resolve/#resolvemainfields) and [the `package.json` for this project](./package.json#L52)\n\n### Usage with Angular\n\nStarting with Angular 6, Angular CLI removed the shim for `global` and other node built-in variables (original comment [here](https://github.com/angular/angular-cli/issues/9827#issuecomment-386154063)). If you are using BSON with Angular, you may need to add the following shim to your `polyfills.ts` file:\n\n```js\n// In polyfills.ts\n(window as any).global = window;\n```\n\n- [Original Comment by Angular CLI](https://github.com/angular/angular-cli/issues/9827#issuecomment-386154063)\n- [Original Source for Solution](https://stackoverflow.com/a/50488337/4930088)\n\n## Installation\n\n`npm install bson`\n\n## Documentation\n\n### Objects\n\n<dl>\n<dt><a href=\"#EJSON\">EJSON</a> : <code>object</code></dt>\n<dd></dd>\n</dl>\n\n### Functions\n\n<dl>\n<dt><a href=\"#setInternalBufferSize\">setInternalBufferSize(size)</a></dt>\n<dd><p>Sets the size of the internal serialization buffer.</p>\n</dd>\n<dt><a href=\"#serialize\">serialize(object)</a> ⇒ <code>Buffer</code></dt>\n<dd><p>Serialize a Javascript object.</p>\n</dd>\n<dt><a href=\"#serializeWithBufferAndIndex\">serializeWithBufferAndIndex(object, buffer)</a> ⇒ <code>Number</code></dt>\n<dd><p>Serialize a Javascript object using a predefined Buffer and index into the buffer, useful when pre-allocating the space for serialization.</p>\n</dd>\n<dt><a href=\"#deserialize\">deserialize(buffer)</a> ⇒ <code>Object</code></dt>\n<dd><p>Deserialize data as BSON.</p>\n</dd>\n<dt><a href=\"#calculateObjectSize\">calculateObjectSize(object)</a> ⇒ <code>Number</code></dt>\n<dd><p>Calculate the bson size for a passed in Javascript object.</p>\n</dd>\n<dt><a href=\"#deserializeStream\">deserializeStream(data, startIndex, numberOfDocuments, documents, docStartIndex, [options])</a> ⇒ <code>Number</code></dt>\n<dd><p>Deserialize stream data as BSON documents.</p>\n</dd>\n</dl>\n\n<a name=\"EJSON\"></a>\n\n### EJSON\n\n* [EJSON](#EJSON)\n\n    * [.parse(text, [options])](#EJSON.parse)\n\n    * [.stringify(value, [replacer], [space], [options])](#EJSON.stringify)\n\n    * [.serialize(bson, [options])](#EJSON.serialize)\n\n    * [.deserialize(ejson, [options])](#EJSON.deserialize)\n\n\n<a name=\"EJSON.parse\"></a>\n\n#### *EJSON*.parse(text, [options])\n\n| Param | Type | Default | Description |\n| --- | --- | --- | --- |\n| text | <code>string</code> |  |  |\n| [options] | <code>object</code> |  | Optional settings |\n| [options.relaxed] | <code>boolean</code> | <code>true</code> | Attempt to return native JS types where possible, rather than BSON types (if true) |\n\nParse an Extended JSON string, constructing the JavaScript value or object described by that\nstring.\n\n**Example**  \n```js\nconst { EJSON } = require('bson');\nconst text = '{ \"int32\": { \"$numberInt\": \"10\" } }';\n\n// prints { int32: { [String: '10'] _bsontype: 'Int32', value: '10' } }\nconsole.log(EJSON.parse(text, { relaxed: false }));\n\n// prints { int32: 10 }\nconsole.log(EJSON.parse(text));\n```\n<a name=\"EJSON.stringify\"></a>\n\n#### *EJSON*.stringify(value, [replacer], [space], [options])\n\n| Param | Type | Default | Description |\n| --- | --- | --- | --- |\n| value | <code>object</code> |  | The value to convert to extended JSON |\n| [replacer] | <code>function</code> \\| <code>array</code> |  | A function that alters the behavior of the stringification process, or an array of String and Number objects that serve as a whitelist for selecting/filtering the properties of the value object to be included in the JSON string. If this value is null or not provided, all properties of the object are included in the resulting JSON string |\n| [space] | <code>string</code> \\| <code>number</code> |  | A String or Number object that's used to insert white space into the output JSON string for readability purposes. |\n| [options] | <code>object</code> |  | Optional settings |\n| [options.relaxed] | <code>boolean</code> | <code>true</code> | Enabled Extended JSON's `relaxed` mode |\n| [options.legacy] | <code>boolean</code> | <code>true</code> | Output in Extended JSON v1 |\n\nConverts a BSON document to an Extended JSON string, optionally replacing values if a replacer\nfunction is specified or optionally including only the specified properties if a replacer array\nis specified.\n\n**Example**  \n```js\nconst { EJSON } = require('bson');\nconst Int32 = require('mongodb').Int32;\nconst doc = { int32: new Int32(10) };\n\n// prints '{\"int32\":{\"$numberInt\":\"10\"}}'\nconsole.log(EJSON.stringify(doc, { relaxed: false }));\n\n// prints '{\"int32\":10}'\nconsole.log(EJSON.stringify(doc));\n```\n<a name=\"EJSON.serialize\"></a>\n\n#### *EJSON*.serialize(bson, [options])\n\n| Param | Type | Description |\n| --- | --- | --- |\n| bson | <code>object</code> | The object to serialize |\n| [options] | <code>object</code> | Optional settings passed to the `stringify` function |\n\nSerializes an object to an Extended JSON string, and reparse it as a JavaScript object.\n\n<a name=\"EJSON.deserialize\"></a>\n\n#### *EJSON*.deserialize(ejson, [options])\n\n| Param | Type | Description |\n| --- | --- | --- |\n| ejson | <code>object</code> | The Extended JSON object to deserialize |\n| [options] | <code>object</code> | Optional settings passed to the parse method |\n\nDeserializes an Extended JSON object into a plain JavaScript object with native/BSON types\n\n<a name=\"setInternalBufferSize\"></a>\n\n### setInternalBufferSize(size)\n\n| Param | Type | Description |\n| --- | --- | --- |\n| size | <code>number</code> | The desired size for the internal serialization buffer |\n\nSets the size of the internal serialization buffer.\n\n<a name=\"serialize\"></a>\n\n### serialize(object)\n\n| Param | Type | Default | Description |\n| --- | --- | --- | --- |\n| object | <code>Object</code> |  | the Javascript object to serialize. |\n| [options.checkKeys] | <code>Boolean</code> |  | the serializer will check if keys are valid. |\n| [options.serializeFunctions] | <code>Boolean</code> | <code>false</code> | serialize the javascript functions **(default:false)**. |\n| [options.ignoreUndefined] | <code>Boolean</code> | <code>true</code> | ignore undefined fields **(default:true)**. |\n\nSerialize a Javascript object.\n\n**Returns**: <code>Buffer</code> - returns the Buffer object containing the serialized object.  \n<a name=\"serializeWithBufferAndIndex\"></a>\n\n### serializeWithBufferAndIndex(object, buffer)\n\n| Param | Type | Default | Description |\n| --- | --- | --- | --- |\n| object | <code>Object</code> |  | the Javascript object to serialize. |\n| buffer | <code>Buffer</code> |  | the Buffer you pre-allocated to store the serialized BSON object. |\n| [options.checkKeys] | <code>Boolean</code> |  | the serializer will check if keys are valid. |\n| [options.serializeFunctions] | <code>Boolean</code> | <code>false</code> | serialize the javascript functions **(default:false)**. |\n| [options.ignoreUndefined] | <code>Boolean</code> | <code>true</code> | ignore undefined fields **(default:true)**. |\n| [options.index] | <code>Number</code> |  | the index in the buffer where we wish to start serializing into. |\n\nSerialize a Javascript object using a predefined Buffer and index into the buffer, useful when pre-allocating the space for serialization.\n\n**Returns**: <code>Number</code> - returns the index pointing to the last written byte in the buffer.  \n<a name=\"deserialize\"></a>\n\n### deserialize(buffer)\n\n| Param | Type | Default | Description |\n| --- | --- | --- | --- |\n| buffer | <code>Buffer</code> |  | the buffer containing the serialized set of BSON documents. |\n| [options.evalFunctions] | <code>Object</code> | <code>false</code> | evaluate functions in the BSON document scoped to the object deserialized. |\n| [options.cacheFunctions] | <code>Object</code> | <code>false</code> | cache evaluated functions for reuse. |\n| [options.cacheFunctionsCrc32] | <code>Object</code> | <code>false</code> | use a crc32 code for caching, otherwise use the string of the function. |\n| [options.promoteLongs] | <code>Object</code> | <code>true</code> | when deserializing a Long will fit it into a Number if it's smaller than 53 bits |\n| [options.promoteBuffers] | <code>Object</code> | <code>false</code> | when deserializing a Binary will return it as a node.js Buffer instance. |\n| [options.promoteValues] | <code>Object</code> | <code>false</code> | when deserializing will promote BSON values to their Node.js closest equivalent types. |\n| [options.fieldsAsRaw] | <code>Object</code> | <code></code> | allow to specify if there what fields we wish to return as unserialized raw buffer. |\n| [options.bsonRegExp] | <code>Object</code> | <code>false</code> | return BSON regular expressions as BSONRegExp instances. |\n| [options.allowObjectSmallerThanBufferSize] | <code>boolean</code> | <code>false</code> | allows the buffer to be larger than the parsed BSON object |\n\nDeserialize data as BSON.\n\n**Returns**: <code>Object</code> - returns the deserialized Javascript Object.  \n<a name=\"calculateObjectSize\"></a>\n\n### calculateObjectSize(object)\n\n| Param | Type | Default | Description |\n| --- | --- | --- | --- |\n| object | <code>Object</code> |  | the Javascript object to calculate the BSON byte size for. |\n| [options.serializeFunctions] | <code>Boolean</code> | <code>false</code> | serialize the javascript functions **(default:false)**. |\n| [options.ignoreUndefined] | <code>Boolean</code> | <code>true</code> | ignore undefined fields **(default:true)**. |\n\nCalculate the bson size for a passed in Javascript object.\n\n**Returns**: <code>Number</code> - returns the number of bytes the BSON object will take up.  \n<a name=\"deserializeStream\"></a>\n\n### deserializeStream(data, startIndex, numberOfDocuments, documents, docStartIndex, [options])\n\n| Param | Type | Default | Description |\n| --- | --- | --- | --- |\n| data | <code>Buffer</code> |  | the buffer containing the serialized set of BSON documents. |\n| startIndex | <code>Number</code> |  | the start index in the data Buffer where the deserialization is to start. |\n| numberOfDocuments | <code>Number</code> |  | number of documents to deserialize. |\n| documents | <code>Array</code> |  | an array where to store the deserialized documents. |\n| docStartIndex | <code>Number</code> |  | the index in the documents array from where to start inserting documents. |\n| [options] | <code>Object</code> |  | additional options used for the deserialization. |\n| [options.evalFunctions] | <code>Object</code> | <code>false</code> | evaluate functions in the BSON document scoped to the object deserialized. |\n| [options.cacheFunctions] | <code>Object</code> | <code>false</code> | cache evaluated functions for reuse. |\n| [options.cacheFunctionsCrc32] | <code>Object</code> | <code>false</code> | use a crc32 code for caching, otherwise use the string of the function. |\n| [options.promoteLongs] | <code>Object</code> | <code>true</code> | when deserializing a Long will fit it into a Number if it's smaller than 53 bits |\n| [options.promoteBuffers] | <code>Object</code> | <code>false</code> | when deserializing a Binary will return it as a node.js Buffer instance. |\n| [options.promoteValues] | <code>Object</code> | <code>false</code> | when deserializing will promote BSON values to their Node.js closest equivalent types. |\n| [options.fieldsAsRaw] | <code>Object</code> | <code></code> | allow to specify if there what fields we wish to return as unserialized raw buffer. |\n| [options.bsonRegExp] | <code>Object</code> | <code>false</code> | return BSON regular expressions as BSONRegExp instances. |\n\nDeserialize stream data as BSON documents.\n\n**Returns**: <code>Number</code> - returns the next index in the buffer after deserialization **x** numbers of documents.  \n\n## FAQ\n\n#### Why does `undefined` get converted to `null`?\n\nThe `undefined` BSON type has been [deprecated for many years](http://bsonspec.org/spec.html), so this library has dropped support for it. Use the `ignoreUndefined` option (for example, from the [driver](http://mongodb.github.io/node-mongodb-native/2.2/api/MongoClient.html#connect) ) to instead remove `undefined` keys.\n\n#### How do I add custom serialization logic?\n\nThis library looks for `toBSON()` functions on every path, and calls the `toBSON()` function to get the value to serialize.\n\n```javascript\nconst BSON = require('bson');\n\nclass CustomSerialize {\n  toBSON() {\n    return 42;\n  }\n}\n\nconst obj = { answer: new CustomSerialize() };\n// \"{ answer: 42 }\"\nconsole.log(BSON.deserialize(BSON.serialize(obj)));\n```\n","readmeFilename":"README.md","homepage":"https://github.com/mongodb/js-bson#readme","keywords":["mongodb","bson","parser"],"contributors":[],"bugs":{"url":"https://github.com/mongodb/js-bson/issues"},"license":"Apache-2.0"}