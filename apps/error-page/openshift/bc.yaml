apiVersion: v1
kind: Template
metadata:
  creationTimestamp: null
  name: error-page-bc-template
labels:
  template: error-page
objects:
# the image stream for the node js build
- apiVersion: v1
  kind: ImageStream
  metadata:
    creationTimestamp: null
    labels:
      shared: true
    name: ${NAME}
  spec:
    lookupPolicy:
      local: false
- apiVersion: v1
  kind: ImageStream
  metadata:
    creationTimestamp: null
    name: ${NAME}-static
  spec:
    lookupPolicy:
      local: false
- apiVersion: v1
  kind: BuildConfig
  metadata:
    creationTimestamp: null
    name: ${NAME}
  spec:
    completionDeadlineSeconds: 1500 # terminate the build if it takes longer than 900 seconds, our builds are avg 10 minutes as of Feb 2019
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: ${NAME}:${VERSION}
    postCommit: {}
    runPolicy: SerialLatestOnly
    resources:
      requests:
        cpu: 1
        memory: 1.5Gi
      limits:
        cpu: 2
        memory: 9Gi
    source:
      git:
        uri: ${SOURCE_REPOSITORY_URL}
        ref: ${SOURCE_REPOSITORY_REF}
      contextDir: ${SOURCE_REPOSITORY_DIR}
      type: Git
    strategy:
      sourceStrategy:
        env:
          - name: o
            value: --max_old_space_size=1000
        from:
          kind: ImageStreamTag
          name: nodejs:${NODE_JS_VERSION}
          namespace: openshift
        incremental: true
      type: Source
    triggers:
    - type: ConfigChange
    - imageChange: {}
      type: ImageChange
#Chained build - combine output from node-based gatsby build with a lightweight caddy runtime image.
- apiVersion: v1
  kind: BuildConfig
  metadata:
    creationTimestamp: null
    labels:
      build: ${NAME}-static-second
    name: ${NAME}-static-second
  spec:
    runPolicy: SerialLatestOnly
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: ${NAME}-static:${VERSION}
    postCommit: {}
    resources:
      requests:
        cpu: 250m
        memory: 500Mi
      limits:
        cpu: 400m
        memory: 750Mi
    source:
      dockerfile: |-
        FROM nodejs/build-output:latest
        COPY html/* /var/www/html/
      images:
        - from:
            kind: ImageStreamTag
            name: '${NAME}:${VERSION}'
          paths:
            - destinationDir: html
              sourcePath: /opt/app-root/src/
              #not sure about above line 
      type: Dockerfile
    strategy:
      dockerStrategy:
        from:
          kind: ImageStreamTag
          name: 'bcgov-s2i-caddy:latest'
          namespace: openshift
      type: Docker
    triggers:
    - imageChange:
        from:
          kind: ImageStreamTag
          name: ${NAME}:${VERSION}
      type: ImageChange
    - type: ConfigChange
    - imageChange: {}
      type: ImageChange

parameters:
- description: A name used for all objects
  displayName: Name
  name: NAME
  required: true
  value: error-page
- description: A version used for the image tags
  displayName: version
  name: VERSION
  required: true
  value: v1.0.0
- description: NODE_JS_VERSION
  displayName: NODE_JS_VERSION
  name: NODE_JS_VERSION
  required: true
  value: '10'
- description: SOURCE_REPOSITORY_REF
  displayName: SOURCE_REPOSITORY_REF
  name: SOURCE_REPOSITORY_REF
  required: true
  value: 'master'
- description: SOURCE_REPOSITORY_URL
  displayName: SOURCE_REPOSITORY_URL
  name: SOURCE_REPOSITORY_URL
  required: true
  value: https://github.com/BCDevOps/developer-experience
- description: SOURCE_REPOSITORY_DIR
  displayName: SOURCE_REPOSITORY_DIR
  name: SOURCE_REPOSITORY_DIR
  required: true
  value: apps/error-page